{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,E,G,E,C,I,E,E,E,A,C,U,O,S,A,a,O,O,O,O,C,E,A,Y,O,Q,O,G,C,O,W,O,C,G,G,C,I,C,E,C,C,C,C,E,C,M,C,S,C,C,C,C,C,E,A,E,kD,iB,C,G,ICEM,E,E,E,oBADF,GACE,EAAJ,kBAGF,SAAS,EAAY,CAAC,CAAC,EAgBvB,IAi3B2B,EApiBrB,EAujBiB,EAj4BnB,EAAqB,EAgErB,EACA,EACA,EA6MA,EAUA,EAGA,EAaA,EAgBF,EAEA,EAEA,EAEA,EAEA,EAEA,EAEA,EAEA,EAmEE,EAiTA,EAoKA,EACA,EAo9MA,EAvzOA,EAAS,AAAoB,KAAA,IAAb,EAA2B,EAAY,CAAC,CAI5D,CAAA,EAAO,KAAQ,CAAG,IAAI,QAAQ,SAAS,CAAO,CAAE,CAAM,EACpD,EAAsB,EACtB,EAAqB,CACvB,GACA,CAAC,QAAQ,2BAA2B,2BAA2B,8BAA8B,oCAAoC,wBAAwB,gBAAgB,eAAe,sBAAsB,mBAAmB,UAAU,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ACA,+BACA,oCACA,uBACA,UACA,+BACA,oCACA,iCACA,uBACA,6BACA,0BACA,uBACA,iBACA,yBACA,yBACA,uBACA,sBACA,wBACA,uBACA,aACA,cACA,gBACA,sBACA,cACA,sBACA,yBACA,8BACA,sCACA,uCACA,kCACA,gCACA,qBACA,gCACA,iCACA,iCACA,gBACA,4BACA,0BACA,6CACA,uBACA,iCACA,+BACA,eACA,4DACA,6BACA,qBACA,cACA,iBACA,YACA,cACA,eACA,cACA,WACA,sBACA,qBACA,4BACA,8BACA,eACA,oBACA,sBACA,mBACA,4BACA,wBACD,CACqB,OAAA,CA3rMtB,SAA8B,CAAG,EACL,aAAtB,OAAO,YAA+B,OAAO,wBAAA,CAAyB,WAAY,IACpF,OAAO,cAAA,CAAe,WAAY,EAAK,CACrC,aAAc,CAAA,EACd,IAAK,WAGH,IAAI,EAAM,IAAM,EAAM,iJAIlB,EAAgB,EACf,EAAc,UAAA,CAAW,MAC5B,CAAA,EAAgB,IAAM,CADxB,EAGA,GAAO,6CAA+C,EAAgB,IAClE,GAA4B,IAC9B,CAAA,GAAO,0FADT,EAGA,GAAS,EAEX,CACF,GAIF,GAAwB,EAC1B,GAs4MA,AApOwB,CACtB,MACA,cACA,YACA,eACA,YACA,eACA,mBACA,sBACA,kBACA,gBACA,oBACA,yBACA,oBACA,gBACA,kBACA,YACA,MACA,MACA,WACA,QACA,aACA,YACA,eACA,cACA,cACA,mBACA,mBACA,cACA,aACA,SACA,aACA,0BACA,MACA,qBACA,kBACA,gCACA,6BACA,aACA,WACA,UACA,cACA,iBACA,MACA,YACA,UACA,iBACA,aACA,SACA,WACA,eACA,qBACA,oBACA,gBACA,eACA,UACA,kBACA,uBACA,mBACA,YACA,YACA,cACA,YACA,kBACA,6BACA,mBACA,sBACA,WACA,WACA,OACA,UACA,cACA,oBACA,eACA,oBACA,eACA,kBACA,qBACA,gBACA,eACA,gBACA,gBACA,mBACA,gBACA,gBACA,mBACA,sBACA,qBACA,WACA,WACA,qBACA,4BACA,0BACA,WACA,cACA,eACA,aACA,gBACA,UACA,WACA,qBACA,aACA,4BACA,qBACA,sDACA,6BACA,6BACA,sBACA,UACA,OACA,KACA,QACA,MACA,SACA,SACA,uBACA,4BACA,0BACA,KACA,qCACA,KACA,OACA,MACA,OACA,WACA,MACA,UACA,OACA,eACA,sBACA,kBACA,aACA,gBACA,kBACA,eACA,cACA,mBACA,oBACA,gDACA,mBACA,eACA,gBACA,eACA,mBACA,mBACA,cACA,qBACA,oBACA,wBACA,sBACA,qBACA,sBACA,cACA,sBACA,aACA,sBACA,mBACA,uBACA,4BACA,4BACA,kBACA,uBACA,mBACA,qBACA,eACA,gCACA,mBACA,wBACA,mBACA,cACA,sBACA,wBACA,mBACA,8BACA,2BACA,4BACA,6BACA,iBACA,UACA,uBACA,0BACA,qBACA,sBACA,2BACA,sCACA,yCACA,yBACA,oBACA,+BACA,+BACA,iCACA,iCACA,gBACA,qBACA,uBACA,uBACA,kBACA,kBACA,kBACA,mBACA,cACA,wBACA,8BACA,oBACA,qBACA,gBACA,wBACA,0BACA,sBACA,gBACA,mBACA,kBACA,6BACA,kBACA,gBACA,SACA,SACA,wBACA,gBACA,gBACA,aACA,sBACA,QACA,eACA,oBACA,sBACA,0BACD,CACiB,OAAA,CAAQ,IAM1B,GAAwB,SAAS,IAE1B,GAAW,KACX,GAAW,CAAA,GAAwB,CAAA,CAC1C,EAgHI,EAAO,OAAU,CAEnB,IADgC,YAA5B,OAAO,EAAO,OAAU,EAAgB,CAAA,EAAO,OAAU,CAAG,CAAC,EAAO,OAAU,CAAC,AAAA,EAC5E,EAAO,OAAU,CAAC,MAAA,CAAS,GAChC,EAAO,OAAU,CAAC,GADpB,KAWA,OANF,KAMS,EAAU,KAAjB,AACF,EAIe,CAAA,EAAA,OAAA,CAAA,C,E,C,mB,Q,iB,Q,mB,Q,iD,O,E,C,Q,C,S,C,C,C,C,C,ECn9Of,IAOI,EACA,EAkFA,EA1FA,EAAU,EAAO,OAAA,CAAU,CAAC,EAUhC,SAAS,IACL,MAAM,AAAI,MAAM,kCACpB,CACA,SAAS,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","sources":["<anon>","cas.mjs","node_modules/process/browser.js","node_modules/@parcel/runtime-js/lib/runtime-3922200ed8894f38.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-ed8cf32e8613772f.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"jUHhM\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nvar process = require(\"97e22c1cc60f8917\");\nvar CASModule = (()=>{\n    var _scriptDir = \"file:///cas.mjs\";\n    return function(CASModule = {}) {\n        // include: shell.js\n        // The Module object: Our interface to the outside world. We import\n        // and export values on it. There are various ways Module can be used:\n        // 1. Not defined. We create it here\n        // 2. A function parameter, function(Module) { ..generated code.. }\n        // 3. pre-run appended it, var Module = {}; ..generated code..\n        // 4. External script tag defines var Module.\n        // We need to check if Module already exists (e.g. case 3 above).\n        // Substitution will be replaced with actual code on later stage of the build,\n        // this way Closure Compiler will not mangle it (e.g. case 4. above).\n        // Note that if you want to run closure, and also to use Module\n        // after the generated code, you will need to define   var Module = {};\n        // before the code. Then that object will be used in the code, and you\n        // can continue to use Module afterwards as well.\n        var Module = typeof CASModule != \"undefined\" ? CASModule : {};\n        // Set up the promise that indicates the Module is initialized\n        var readyPromiseResolve, readyPromiseReject;\n        Module[\"ready\"] = new Promise(function(resolve, reject) {\n            readyPromiseResolve = resolve;\n            readyPromiseReject = reject;\n        });\n        [\n            \"_main\",\n            \"__emscripten_thread_init\",\n            \"__emscripten_thread_exit\",\n            \"__emscripten_thread_crashed\",\n            \"__emscripten_thread_mailbox_await\",\n            \"__emscripten_tls_init\",\n            \"_pthread_self\",\n            \"checkMailbox\",\n            \"establishStackSpace\",\n            \"invokeEntryPoint\",\n            \"PThread\",\n            \"getExceptionMessage\",\n            \"___get_exception_message\",\n            \"_free\",\n            \"___cpp_exception\",\n            \"___cxa_increment_exception_refcount\",\n            \"___cxa_decrement_exception_refcount\",\n            \"___thrown_object_from_unwind_exception\",\n            \"___getTypeName\",\n            \"__embind_initialize_bindings\",\n            \"_fflush\",\n            \"__emscripten_check_mailbox\",\n            \"onRuntimeInitialized\"\n        ].forEach((prop)=>{\n            if (!Object.getOwnPropertyDescriptor(Module[\"ready\"], prop)) Object.defineProperty(Module[\"ready\"], prop, {\n                get: ()=>abort(\"You are getting \" + prop + \" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\"),\n                set: ()=>abort(\"You are setting \" + prop + \" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\")\n            });\n        });\n        // --pre-jses are emitted after the Module integration code, so that they can\n        // refer to Module (if they choose; they can also define Module)\n        // Sometimes an existing Module object exists with properties\n        // meant to overwrite the default module functionality. Here\n        // we collect those properties and reapply _after_ we configure\n        // the current environment's defaults to avoid having to be so\n        // defensive during initialization.\n        var moduleOverrides = Object.assign({}, Module);\n        var arguments_ = [];\n        var thisProgram = \"./this.program\";\n        var quit_ = (status, toThrow)=>{\n            throw toThrow;\n        };\n        // Determine the runtime environment we are in. You can customize this by\n        // setting the ENVIRONMENT setting at compile time (see settings.js).\n        // Attempt to auto-detect the environment\n        var ENVIRONMENT_IS_WEB = typeof window == \"object\";\n        var ENVIRONMENT_IS_WORKER = typeof importScripts == \"function\";\n        // N.b. Electron.js environment is simultaneously a NODE-environment, but\n        // also a web environment.\n        var ENVIRONMENT_IS_NODE = typeof process == \"object\" && typeof process.versions == \"object\" && typeof process.versions.node == \"string\";\n        var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n        if (Module[\"ENVIRONMENT\"]) throw new Error(\"Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)\");\n        // Three configurations we can be running in:\n        // 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)\n        // 2) We could be the application main() thread proxied to worker. (with Emscripten -sPROXY_TO_WORKER) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)\n        // 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)\n        // ENVIRONMENT_IS_PTHREAD=true will have been preset in worker.js. Make it false in the main runtime thread.\n        var ENVIRONMENT_IS_PTHREAD = Module[\"ENVIRONMENT_IS_PTHREAD\"] || false;\n        // `/` should be present at the end if `scriptDirectory` is not empty\n        var scriptDirectory = \"\";\n        function locateFile(path) {\n            if (Module[\"locateFile\"]) return Module[\"locateFile\"](path, scriptDirectory);\n            return scriptDirectory + path;\n        }\n        // Hooks that are implemented differently in different runtime environments.\n        var read_, readAsync, readBinary, setWindowTitle;\n        if (ENVIRONMENT_IS_SHELL) {\n            if (typeof process == \"object\" && true || typeof window == \"object\" || typeof importScripts == \"function\") throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");\n            if (typeof read != \"undefined\") read_ = function shell_read(f) {\n                return read(f);\n            };\n            readBinary = function readBinary(f) {\n                let data;\n                if (typeof readbuffer == \"function\") return new Uint8Array(readbuffer(f));\n                data = read(f, \"binary\");\n                assert(typeof data == \"object\");\n                return data;\n            };\n            readAsync = function readAsync(f, onload, onerror) {\n                setTimeout(()=>onload(readBinary(f)), 0);\n            };\n            if (typeof clearTimeout == \"undefined\") globalThis.clearTimeout = (id)=>{};\n            if (typeof scriptArgs != \"undefined\") arguments_ = scriptArgs;\n            else if (typeof arguments != \"undefined\") arguments_ = arguments;\n            if (typeof quit == \"function\") quit_ = (status, toThrow)=>{\n                // Unlike node which has process.exitCode, d8 has no such mechanism. So we\n                // have no way to set the exit code and then let the program exit with\n                // that code when it naturally stops running (say, when all setTimeouts\n                // have completed). For that reason, we must call `quit` - the only way to\n                // set the exit code - but quit also halts immediately.  To increase\n                // consistency with node (and the web) we schedule the actual quit call\n                // using a setTimeout to give the current stack and any exception handlers\n                // a chance to run.  This enables features such as addOnPostRun (which\n                // expected to be able to run code after main returns).\n                setTimeout(()=>{\n                    if (!(toThrow instanceof ExitStatus)) {\n                        let toLog = toThrow;\n                        if (toThrow && typeof toThrow == \"object\" && toThrow.stack) toLog = [\n                            toThrow,\n                            toThrow.stack\n                        ];\n                        err(\"exiting due to exception: \" + toLog);\n                    }\n                    quit(status);\n                });\n                throw toThrow;\n            };\n            if (typeof print != \"undefined\") {\n                // Prefer to use print/printErr where they exist, as they usually work better.\n                if (typeof console == \"undefined\") console = /** @type{!Console} */ {};\n                console.log = /** @type{!function(this:Console, ...*): undefined} */ print;\n                console.warn = console.error = /** @type{!function(this:Console, ...*): undefined} */ typeof printErr != \"undefined\" ? printErr : print;\n            }\n        } else // Note that this includes Node.js workers when relevant (pthreads is enabled).\n        // Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n        // ENVIRONMENT_IS_NODE.\n        if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n            if (ENVIRONMENT_IS_WORKER) scriptDirectory = self.location.href;\n            else if (typeof document != \"undefined\" && document.currentScript) scriptDirectory = document.currentScript.src;\n            // When MODULARIZE, this JS may be executed later, after document.currentScript\n            // is gone, so we saved it, and we use it here instead of any other info.\n            if (_scriptDir) scriptDirectory = _scriptDir;\n            // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n            // otherwise, slice off the final part of the url to find the script directory.\n            // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n            // and scriptDirectory will correctly be replaced with an empty string.\n            // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\n            // they are removed because they could contain a slash.\n            if (scriptDirectory.indexOf(\"blob:\") !== 0) scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n            else scriptDirectory = \"\";\n            if (!(typeof window == \"object\" || typeof importScripts == \"function\")) throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");\n            // include: web_or_worker_shell_read.js\n            read_ = (url)=>{\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url, false);\n                xhr.send(null);\n                return xhr.responseText;\n            };\n            if (ENVIRONMENT_IS_WORKER) readBinary = (url)=>{\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url, false);\n                xhr.responseType = \"arraybuffer\";\n                xhr.send(null);\n                return new Uint8Array(/** @type{!ArrayBuffer} */ xhr.response);\n            };\n            readAsync = (url, onload, onerror)=>{\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url, true);\n                xhr.responseType = \"arraybuffer\";\n                xhr.onload = ()=>{\n                    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n                        onload(xhr.response);\n                        return;\n                    }\n                    onerror();\n                };\n                xhr.onerror = onerror;\n                xhr.send(null);\n            };\n            setWindowTitle = (title)=>document.title = title;\n        } else throw new Error(\"environment detection error\");\n        var out = Module[\"print\"] || console.log.bind(console);\n        var err = Module[\"printErr\"] || console.warn.bind(console);\n        // Merge back in the overrides\n        Object.assign(Module, moduleOverrides);\n        // Free the object hierarchy contained in the overrides, this lets the GC\n        // reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\n        moduleOverrides = null;\n        checkIncomingModuleAPI();\n        // Emit code to handle expected values on the Module object. This applies Module.x\n        // to the proper local x. This has two benefits: first, we only emit it if it is\n        // expected to arrive, and second, by using a local everywhere else that can be\n        // minified.\n        if (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n        legacyModuleProp(\"arguments\", \"arguments_\");\n        if (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n        legacyModuleProp(\"thisProgram\", \"thisProgram\");\n        if (Module[\"quit\"]) quit_ = Module[\"quit\"];\n        legacyModuleProp(\"quit\", \"quit_\");\n        // perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n        // Assertions on removed incoming Module JS APIs.\n        assert(typeof Module[\"memoryInitializerPrefixURL\"] == \"undefined\", \"Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead\");\n        assert(typeof Module[\"pthreadMainPrefixURL\"] == \"undefined\", \"Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead\");\n        assert(typeof Module[\"cdInitializerPrefixURL\"] == \"undefined\", \"Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead\");\n        assert(typeof Module[\"filePackagePrefixURL\"] == \"undefined\", \"Module.filePackagePrefixURL option was removed, use Module.locateFile instead\");\n        assert(typeof Module[\"read\"] == \"undefined\", \"Module.read option was removed (modify read_ in JS)\");\n        assert(typeof Module[\"readAsync\"] == \"undefined\", \"Module.readAsync option was removed (modify readAsync in JS)\");\n        assert(typeof Module[\"readBinary\"] == \"undefined\", \"Module.readBinary option was removed (modify readBinary in JS)\");\n        assert(typeof Module[\"setWindowTitle\"] == \"undefined\", \"Module.setWindowTitle option was removed (modify setWindowTitle in JS)\");\n        assert(typeof Module[\"TOTAL_MEMORY\"] == \"undefined\", \"Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY\");\n        legacyModuleProp(\"read\", \"read_\");\n        legacyModuleProp(\"readAsync\", \"readAsync\");\n        legacyModuleProp(\"readBinary\", \"readBinary\");\n        legacyModuleProp(\"setWindowTitle\", \"setWindowTitle\");\n        var IDBFS = \"IDBFS is no longer included by default; build with -lidbfs.js\";\n        var PROXYFS = \"PROXYFS is no longer included by default; build with -lproxyfs.js\";\n        var WORKERFS = \"WORKERFS is no longer included by default; build with -lworkerfs.js\";\n        var NODEFS = \"NODEFS is no longer included by default; build with -lnodefs.js\";\n        assert(ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER || ENVIRONMENT_IS_NODE, \"Pthreads do not work in this environment yet (need Web Workers, or an alternative to them)\");\n        assert(!ENVIRONMENT_IS_NODE, \"node environment detected but not enabled at build time.  Add 'node' to `-sENVIRONMENT` to enable.\");\n        assert(!ENVIRONMENT_IS_SHELL, \"shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable.\");\n        // end include: shell.js\n        // include: preamble.js\n        // === Preamble library stuff ===\n        // Documentation for the public APIs defined in this file must be updated in:\n        //    site/source/docs/api_reference/preamble.js.rst\n        // A prebuilt local version of the documentation is available at:\n        //    site/build/text/docs/api_reference/preamble.js.txt\n        // You can also build docs locally as HTML or other formats in site/\n        // An online HTML version (which may be of a different version of Emscripten)\n        //    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n        var wasmBinary;\n        if (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n        legacyModuleProp(\"wasmBinary\", \"wasmBinary\");\n        var noExitRuntime = Module[\"noExitRuntime\"] || true;\n        legacyModuleProp(\"noExitRuntime\", \"noExitRuntime\");\n        if (typeof WebAssembly != \"object\") abort(\"no native wasm support detected\");\n        // Wasm globals\n        var wasmMemory;\n        // For sending to workers.\n        var wasmModule;\n        //========================================\n        // Runtime essentials\n        //========================================\n        // whether we are quitting the application. no code should run after this.\n        // set in exit() and abort()\n        var ABORT = false;\n        // set by exit() and abort().  Passed to 'onExit' handler.\n        // NOTE: This is also used as the process return code code in shell environments\n        // but only when noExitRuntime is false.\n        var EXITSTATUS;\n        /** @type {function(*, string=)} */ function assert(condition, text) {\n            if (!condition) abort(\"Assertion failed\" + (text ? \": \" + text : \"\"));\n        }\n        // We used to include malloc/free by default in the past. Show a helpful error in\n        // builds with assertions.\n        // Memory management\n        var HEAP, /** @type {!Int8Array} */ HEAP8, /** @type {!Uint8Array} */ HEAPU8, /** @type {!Int16Array} */ HEAP16, /** @type {!Uint16Array} */ HEAPU16, /** @type {!Int32Array} */ HEAP32, /** @type {!Uint32Array} */ HEAPU32, /** @type {!Float32Array} */ HEAPF32, /** @type {!Float64Array} */ HEAPF64;\n        function updateMemoryViews() {\n            var b = wasmMemory.buffer;\n            Module[\"HEAP8\"] = HEAP8 = new Int8Array(b);\n            Module[\"HEAP16\"] = HEAP16 = new Int16Array(b);\n            Module[\"HEAP32\"] = HEAP32 = new Int32Array(b);\n            Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(b);\n            Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(b);\n            Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(b);\n            Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(b);\n            Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(b);\n        }\n        assert(!Module[\"STACK_SIZE\"], \"STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time\");\n        assert(typeof Int32Array != \"undefined\" && typeof Float64Array !== \"undefined\" && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined, \"JS engine does not provide full typed array support\");\n        // In non-standalone/normal mode, we create the memory here.\n        // include: runtime_init_memory.js\n        // Create the wasm memory. (Note: this only applies if IMPORTED_MEMORY is defined)\n        var INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 294649856;\n        legacyModuleProp(\"INITIAL_MEMORY\", \"INITIAL_MEMORY\");\n        assert(INITIAL_MEMORY >= 65536, \"INITIAL_MEMORY should be larger than STACK_SIZE, was \" + INITIAL_MEMORY + \"! (STACK_SIZE=\" + 65536 + \")\");\n        // check for full engine support (use string 'subarray' to avoid closure compiler confusion)\n        if (ENVIRONMENT_IS_PTHREAD) wasmMemory = Module[\"wasmMemory\"];\n        else if (Module[\"wasmMemory\"]) wasmMemory = Module[\"wasmMemory\"];\n        else {\n            wasmMemory = new WebAssembly.Memory({\n                \"initial\": INITIAL_MEMORY / 65536,\n                \"maximum\": INITIAL_MEMORY / 65536,\n                \"shared\": true\n            });\n            if (!(wasmMemory.buffer instanceof SharedArrayBuffer)) {\n                err(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\");\n                if (ENVIRONMENT_IS_NODE) err(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)\");\n                throw Error(\"bad memory\");\n            }\n        }\n        updateMemoryViews();\n        // If the user provides an incorrect length, just use that length instead rather than providing the user to\n        // specifically provide the memory length with Module['INITIAL_MEMORY'].\n        INITIAL_MEMORY = wasmMemory.buffer.byteLength;\n        assert(INITIAL_MEMORY % 65536 === 0);\n        // end include: runtime_init_memory.js\n        // include: runtime_init_table.js\n        // In regular non-RELOCATABLE mode the table is exported\n        // from the wasm module and this will be assigned once\n        // the exports are available.\n        var wasmTable;\n        // end include: runtime_init_table.js\n        // include: runtime_stack_check.js\n        // Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\n        function writeStackCookie() {\n            var max = _emscripten_stack_get_end();\n            assert((max & 3) == 0);\n            // If the stack ends at address zero we write our cookies 4 bytes into the\n            // stack.  This prevents interference with the (separate) address-zero check\n            // below.\n            if (max == 0) max += 4;\n            // The stack grow downwards towards _emscripten_stack_get_end.\n            // We write cookies to the final two words in the stack and detect if they are\n            // ever overwritten.\n            HEAPU32[max >> 2] = 0x02135467;\n            HEAPU32[max + 4 >> 2] = 0x89BACDFE;\n            // Also test the global address 0 for integrity.\n            HEAPU32[0] = 0x63736d65; /* 'emsc' */ \n        }\n        function checkStackCookie() {\n            if (ABORT) return;\n            var max = _emscripten_stack_get_end();\n            // See writeStackCookie().\n            if (max == 0) max += 4;\n            var cookie1 = HEAPU32[max >> 2];\n            var cookie2 = HEAPU32[max + 4 >> 2];\n            if (cookie1 != 0x02135467 || cookie2 != 0x89BACDFE) abort(\"Stack overflow! Stack cookie has been overwritten at \" + ptrToString(max) + \", expected hex dwords 0x89BACDFE and 0x2135467, but received \" + ptrToString(cookie2) + \" \" + ptrToString(cookie1));\n            // Also test the global address 0 for integrity.\n            if (HEAPU32[0] !== 0x63736d65 /* 'emsc' */ ) abort(\"Runtime error: The application has corrupted its heap memory area (address zero)!\");\n        }\n        // end include: runtime_stack_check.js\n        // include: runtime_assertions.js\n        // Endianness check\n        (function() {\n            var h16 = new Int16Array(1);\n            var h8 = new Int8Array(h16.buffer);\n            h16[0] = 0x6373;\n            if (h8[0] !== 0x73 || h8[1] !== 0x63) throw \"Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)\";\n        })();\n        // end include: runtime_assertions.js\n        var __ATPRERUN__ = []; // functions called before the runtime is initialized\n        var __ATINIT__ = []; // functions called during startup\n        var __ATEXIT__ = []; // functions called during shutdown\n        var __ATPOSTRUN__ = []; // functions called after the main() is called\n        var runtimeInitialized = false;\n        var runtimeKeepaliveCounter = 0;\n        function keepRuntimeAlive() {\n            return noExitRuntime || runtimeKeepaliveCounter > 0;\n        }\n        function preRun() {\n            assert(!ENVIRONMENT_IS_PTHREAD); // PThreads reuse the runtime from the main thread.\n            if (Module[\"preRun\"]) {\n                if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [\n                    Module[\"preRun\"]\n                ];\n                while(Module[\"preRun\"].length)addOnPreRun(Module[\"preRun\"].shift());\n            }\n            callRuntimeCallbacks(__ATPRERUN__);\n        }\n        function initRuntime() {\n            assert(!runtimeInitialized);\n            runtimeInitialized = true;\n            if (ENVIRONMENT_IS_PTHREAD) return;\n            checkStackCookie();\n            if (!Module[\"noFSInit\"] && !FS.init.initialized) FS.init();\n            FS.ignorePermissions = false;\n            TTY.init();\n            callRuntimeCallbacks(__ATINIT__);\n        }\n        function postRun() {\n            checkStackCookie();\n            if (ENVIRONMENT_IS_PTHREAD) return; // PThreads reuse the runtime from the main thread.\n            if (Module[\"postRun\"]) {\n                if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [\n                    Module[\"postRun\"]\n                ];\n                while(Module[\"postRun\"].length)addOnPostRun(Module[\"postRun\"].shift());\n            }\n            callRuntimeCallbacks(__ATPOSTRUN__);\n        }\n        function addOnPreRun(cb) {\n            __ATPRERUN__.unshift(cb);\n        }\n        function addOnInit(cb) {\n            __ATINIT__.unshift(cb);\n        }\n        function addOnExit(cb) {}\n        function addOnPostRun(cb) {\n            __ATPOSTRUN__.unshift(cb);\n        }\n        // include: runtime_math.js\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\n        assert(Math.imul, \"This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\n        assert(Math.fround, \"This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\n        assert(Math.clz32, \"This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\n        assert(Math.trunc, \"This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\n        // end include: runtime_math.js\n        // A counter of dependencies for calling run(). If we need to\n        // do asynchronous work before running, increment this and\n        // decrement it. Incrementing must happen in a place like\n        // Module.preRun (used by emcc to add file preloading).\n        // Note that you can add dependencies in preRun, even though\n        // it happens right before run - run will be postponed until\n        // the dependencies are met.\n        var runDependencies = 0;\n        var runDependencyWatcher = null;\n        var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\n        var runDependencyTracking = {};\n        function getUniqueRunDependency(id) {\n            var orig = id;\n            while(true){\n                if (!runDependencyTracking[id]) return id;\n                id = orig + Math.random();\n            }\n        }\n        function addRunDependency(id) {\n            runDependencies++;\n            if (Module[\"monitorRunDependencies\"]) Module[\"monitorRunDependencies\"](runDependencies);\n            if (id) {\n                assert(!runDependencyTracking[id]);\n                runDependencyTracking[id] = 1;\n                if (runDependencyWatcher === null && typeof setInterval != \"undefined\") // Check for missing dependencies every few seconds\n                runDependencyWatcher = setInterval(function() {\n                    if (ABORT) {\n                        clearInterval(runDependencyWatcher);\n                        runDependencyWatcher = null;\n                        return;\n                    }\n                    var shown = false;\n                    for(var dep in runDependencyTracking){\n                        if (!shown) {\n                            shown = true;\n                            err(\"still waiting on run dependencies:\");\n                        }\n                        err(\"dependency: \" + dep);\n                    }\n                    if (shown) err(\"(end of list)\");\n                }, 10000);\n            } else err(\"warning: run dependency added without ID\");\n        }\n        function removeRunDependency(id) {\n            runDependencies--;\n            if (Module[\"monitorRunDependencies\"]) Module[\"monitorRunDependencies\"](runDependencies);\n            if (id) {\n                assert(runDependencyTracking[id]);\n                delete runDependencyTracking[id];\n            } else err(\"warning: run dependency removed without ID\");\n            if (runDependencies == 0) {\n                if (runDependencyWatcher !== null) {\n                    clearInterval(runDependencyWatcher);\n                    runDependencyWatcher = null;\n                }\n                if (dependenciesFulfilled) {\n                    var callback = dependenciesFulfilled;\n                    dependenciesFulfilled = null;\n                    callback(); // can add another dependenciesFulfilled\n                }\n            }\n        }\n        /** @param {string|number=} what */ function abort(what) {\n            if (Module[\"onAbort\"]) Module[\"onAbort\"](what);\n            what = \"Aborted(\" + what + \")\";\n            // TODO(sbc): Should we remove printing and leave it up to whoever\n            // catches the exception?\n            err(what);\n            ABORT = true;\n            EXITSTATUS = 1;\n            // Use a wasm runtime error, because a JS error might be seen as a foreign\n            // exception, which means we'd run destructors on it. We need the error to\n            // simply make the program stop.\n            // FIXME This approach does not work in Wasm EH because it currently does not assume\n            // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\n            // a trap or not based on a hidden field within the object. So at the moment\n            // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\n            // allows this in the wasm spec.\n            // Suppress closure compiler warning here. Closure compiler's builtin extern\n            // defintion for WebAssembly.RuntimeError claims it takes no arguments even\n            // though it can.\n            // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\n            // See above, in the meantime, we resort to wasm code for trapping.\n            //\n            // In case abort() is called before the module is initialized, Module['asm']\n            // and its exported '__trap' function is not available, in which case we throw\n            // a RuntimeError.\n            //\n            // We trap instead of throwing RuntimeError to prevent infinite-looping in\n            // Wasm EH code (because RuntimeError is considered as a foreign exception and\n            // caught by 'catch_all'), but in case throwing RuntimeError is fine because\n            // the module has not even been instantiated, even less running.\n            if (runtimeInitialized) ___trap();\n            /** @suppress {checkTypes} */ var e = new WebAssembly.RuntimeError(what);\n            readyPromiseReject(e);\n            // Throw the error whether or not MODULARIZE is set because abort is used\n            // in code paths apart from instantiation where an exception is expected\n            // to be thrown when abort is called.\n            throw e;\n        }\n        // include: memoryprofiler.js\n        // end include: memoryprofiler.js\n        // include: URIUtils.js\n        // Prefix of data URIs emitted by SINGLE_FILE and related options.\n        var dataURIPrefix = \"data:application/octet-stream;base64,\";\n        // Indicates whether filename is a base64 data URI.\n        function isDataURI(filename) {\n            // Prefix of data URIs emitted by SINGLE_FILE and related options.\n            return filename.startsWith(dataURIPrefix);\n        }\n        // Indicates whether filename is delivered via file protocol (as opposed to http/https)\n        function isFileURI(filename) {\n            return filename.startsWith(\"file://\");\n        }\n        // end include: URIUtils.js\n        /** @param {boolean=} fixedasm */ function createExportWrapper(name, fixedasm) {\n            return function() {\n                var displayName = name;\n                var asm = fixedasm;\n                if (!fixedasm) asm = Module[\"asm\"];\n                assert(runtimeInitialized, \"native function `\" + displayName + \"` called before runtime initialization\");\n                if (!asm[name]) assert(asm[name], \"exported native function `\" + displayName + \"` not found\");\n                return asm[name].apply(null, arguments);\n            };\n        }\n        // include: runtime_exceptions.js\n        // end include: runtime_exceptions.js\n        var wasmBinaryFile;\n        if (Module[\"locateFile\"]) {\n            wasmBinaryFile = \"cas.wasm\";\n            if (!isDataURI(wasmBinaryFile)) wasmBinaryFile = locateFile(wasmBinaryFile);\n        } else // Use bundler-friendly `new URL(..., import.meta.url)` pattern; works in browsers too.\n        wasmBinaryFile = new URL(require(\"cd7c4fcf3ef784cc\")).href;\n        function getBinary(file) {\n            try {\n                if (file == wasmBinaryFile && wasmBinary) return new Uint8Array(wasmBinary);\n                if (readBinary) return readBinary(file);\n                throw \"both async and sync fetching of the wasm failed\";\n            } catch (err) {\n                abort(err);\n            }\n        }\n        function getBinaryPromise(binaryFile) {\n            // If we don't have the binary yet, try to load it asynchronously.\n            // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\n            // See https://github.com/github/fetch/pull/92#issuecomment-140665932\n            // Cordova or Electron apps are typically loaded from a file:// url.\n            // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\n            if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n                if (typeof fetch == \"function\") return fetch(binaryFile, {\n                    credentials: \"same-origin\"\n                }).then(function(response) {\n                    if (!response[\"ok\"]) throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\n                    return response[\"arrayBuffer\"]();\n                }).catch(function() {\n                    return getBinary(binaryFile);\n                });\n            }\n            // Otherwise, getBinary should be able to get it synchronously\n            return Promise.resolve().then(function() {\n                return getBinary(binaryFile);\n            });\n        }\n        function instantiateArrayBuffer(binaryFile, imports, receiver) {\n            return getBinaryPromise(binaryFile).then(function(binary) {\n                return WebAssembly.instantiate(binary, imports);\n            }).then(function(instance) {\n                return instance;\n            }).then(receiver, function(reason) {\n                err(\"failed to asynchronously prepare wasm: \" + reason);\n                // Warn on some common problems.\n                if (isFileURI(wasmBinaryFile)) err(\"warning: Loading from a file URI (\" + wasmBinaryFile + \") is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing\");\n                abort(reason);\n            });\n        }\n        function instantiateAsync(binary, binaryFile, imports, callback) {\n            if (!binary && typeof WebAssembly.instantiateStreaming == \"function\" && !isDataURI(binaryFile) && typeof fetch == \"function\") return fetch(binaryFile, {\n                credentials: \"same-origin\"\n            }).then(function(response) {\n                // Suppress closure warning here since the upstream definition for\n                // instantiateStreaming only allows Promise<Repsponse> rather than\n                // an actual Response.\n                // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\n                /** @suppress {checkTypes} */ var result = WebAssembly.instantiateStreaming(response, imports);\n                return result.then(callback, function(reason) {\n                    // We expect the most common failure cause to be a bad MIME type for the binary,\n                    // in which case falling back to ArrayBuffer instantiation should work.\n                    err(\"wasm streaming compile failed: \" + reason);\n                    err(\"falling back to ArrayBuffer instantiation\");\n                    return instantiateArrayBuffer(binaryFile, imports, callback);\n                });\n            });\n            else return instantiateArrayBuffer(binaryFile, imports, callback);\n        }\n        // Create the wasm instance.\n        // Receives the wasm imports, returns the exports.\n        function createWasm() {\n            // prepare imports\n            var info = {\n                \"env\": wasmImports,\n                \"wasi_snapshot_preview1\": wasmImports\n            };\n            // Load the wasm module and create an instance of using native support in the JS engine.\n            // handle a generated wasm instance, receiving its exports and\n            // performing other necessary setup\n            /** @param {WebAssembly.Module=} module*/ function receiveInstance(instance, module) {\n                var exports = instance.exports;\n                Module[\"asm\"] = exports;\n                registerTLSInit(Module[\"asm\"][\"_emscripten_tls_init\"]);\n                wasmTable = Module[\"asm\"][\"__indirect_function_table\"];\n                assert(wasmTable, \"table not found in wasm exports\");\n                addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);\n                // We now have the Wasm module loaded up, keep a reference to the compiled module so we can post it to the workers.\n                wasmModule = module;\n                PThread.loadWasmModuleToAllWorkers(()=>removeRunDependency(\"wasm-instantiate\"));\n                return exports;\n            }\n            // wait for the pthread pool (if any)\n            addRunDependency(\"wasm-instantiate\");\n            // Prefer streaming instantiation if available.\n            // Async compilation can be confusing when an error on the page overwrites Module\n            // (for example, if the order of elements is wrong, and the one defining Module is\n            // later), so we save Module and check it later.\n            var trueModule = Module;\n            function receiveInstantiationResult(result) {\n                // 'result' is a ResultObject object which has both the module and instance.\n                // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n                assert(Module === trueModule, \"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?\");\n                trueModule = null;\n                receiveInstance(result[\"instance\"], result[\"module\"]);\n            }\n            // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n            // to manually instantiate the Wasm module themselves. This allows pages to\n            // run the instantiation parallel to any other async startup actions they are\n            // performing.\n            // Also pthreads and wasm workers initialize the wasm instance through this\n            // path.\n            if (Module[\"instantiateWasm\"]) try {\n                return Module[\"instantiateWasm\"](info, receiveInstance);\n            } catch (e) {\n                err(\"Module.instantiateWasm callback failed with error: \" + e);\n                // If instantiation fails, reject the module ready promise.\n                readyPromiseReject(e);\n            }\n            // If instantiation fails, reject the module ready promise.\n            instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\n            return {}; // no exports yet; we'll fill them in later\n        }\n        // Globals used by JS i64 conversions (see makeSetValue)\n        var tempDouble;\n        var tempI64;\n        // include: runtime_debug.js\n        function legacyModuleProp(prop, newName) {\n            if (!Object.getOwnPropertyDescriptor(Module, prop)) Object.defineProperty(Module, prop, {\n                configurable: true,\n                get: function() {\n                    abort(\"Module.\" + prop + \" has been replaced with plain \" + newName + \" (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)\");\n                }\n            });\n        }\n        function ignoredModuleProp(prop) {\n            if (Object.getOwnPropertyDescriptor(Module, prop)) abort(\"`Module.\" + prop + \"` was supplied but `\" + prop + \"` not included in INCOMING_MODULE_JS_API\");\n        }\n        // forcing the filesystem exports a few things by default\n        function isExportedByForceFilesystem(name) {\n            return name === \"FS_createPath\" || name === \"FS_createDataFile\" || name === \"FS_createPreloadedFile\" || name === \"FS_unlink\" || name === \"addRunDependency\" || // The old FS has some functionality that WasmFS lacks.\n            name === \"FS_createLazyFile\" || name === \"FS_createDevice\" || name === \"removeRunDependency\";\n        }\n        function missingGlobal(sym, msg) {\n            if (typeof globalThis !== \"undefined\") Object.defineProperty(globalThis, sym, {\n                configurable: true,\n                get: function() {\n                    warnOnce(\"`\" + sym + \"` is not longer defined by emscripten. \" + msg);\n                    return undefined;\n                }\n            });\n        }\n        missingGlobal(\"buffer\", \"Please use HEAP8.buffer or wasmMemory.buffer\");\n        function missingLibrarySymbol(sym) {\n            if (typeof globalThis !== \"undefined\" && !Object.getOwnPropertyDescriptor(globalThis, sym)) Object.defineProperty(globalThis, sym, {\n                configurable: true,\n                get: function() {\n                    // Can't `abort()` here because it would break code that does runtime\n                    // checks.  e.g. `if (typeof SDL === 'undefined')`.\n                    var msg = \"`\" + sym + \"` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line\";\n                    // DEFAULT_LIBRARY_FUNCS_TO_INCLUDE requires the name as it appears in\n                    // library.js, which means $name for a JS name with no prefix, or name\n                    // for a JS name like _name.\n                    var librarySymbol = sym;\n                    if (!librarySymbol.startsWith(\"_\")) librarySymbol = \"$\" + sym;\n                    msg += \" (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE=\" + librarySymbol + \")\";\n                    if (isExportedByForceFilesystem(sym)) msg += \". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you\";\n                    warnOnce(msg);\n                    return undefined;\n                }\n            });\n            // Any symbol that is not included from the JS libary is also (by definition)\n            // not exported on the Module object.\n            unexportedRuntimeSymbol(sym);\n        }\n        function unexportedRuntimeSymbol(sym) {\n            if (!Object.getOwnPropertyDescriptor(Module, sym)) Object.defineProperty(Module, sym, {\n                configurable: true,\n                get: function() {\n                    var msg = \"'\" + sym + \"' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\";\n                    if (isExportedByForceFilesystem(sym)) msg += \". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you\";\n                    abort(msg);\n                }\n            });\n        }\n        // Used by XXXXX_DEBUG settings to output debug messages.\n        function dbg(text) {\n            // TODO(sbc): Make this configurable somehow.  Its not always convenient for\n            // logging to show up as errors.\n            console.error.apply(console, arguments);\n        }\n        // end include: runtime_debug.js\n        // === Body ===\n        // end include: preamble.js\n        /** @constructor */ function ExitStatus(status) {\n            this.name = \"ExitStatus\";\n            this.message = \"Program terminated with exit(\" + status + \")\";\n            this.status = status;\n        }\n        function terminateWorker(worker) {\n            worker.terminate();\n            // terminate() can be asynchronous, so in theory the worker can continue\n            // to run for some amount of time after termination.  However from our POV\n            // the worker now dead and we don't want to hear from it again, so we stub\n            // out its message handler here.  This avoids having to check in each of\n            // the onmessage handlers if the message was coming from valid worker.\n            worker.onmessage = (e)=>{\n                var cmd = e[\"data\"][\"cmd\"];\n                err('received \"' + cmd + '\" command from terminated worker: ' + worker.workerID);\n            };\n        }\n        function killThread(pthread_ptr) {\n            assert(!ENVIRONMENT_IS_PTHREAD, \"Internal Error! killThread() can only ever be called from main application thread!\");\n            assert(pthread_ptr, \"Internal Error! Null pthread_ptr in killThread!\");\n            var worker = PThread.pthreads[pthread_ptr];\n            delete PThread.pthreads[pthread_ptr];\n            terminateWorker(worker);\n            __emscripten_thread_free_data(pthread_ptr);\n            // The worker was completely nuked (not just the pthread execution it was hosting), so remove it from running workers\n            // but don't put it back to the pool.\n            PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker), 1); // Not a running Worker anymore.\n            worker.pthread_ptr = 0;\n        }\n        function cancelThread(pthread_ptr) {\n            assert(!ENVIRONMENT_IS_PTHREAD, \"Internal Error! cancelThread() can only ever be called from main application thread!\");\n            assert(pthread_ptr, \"Internal Error! Null pthread_ptr in cancelThread!\");\n            var worker = PThread.pthreads[pthread_ptr];\n            worker.postMessage({\n                \"cmd\": \"cancel\"\n            });\n        }\n        function cleanupThread(pthread_ptr) {\n            assert(!ENVIRONMENT_IS_PTHREAD, \"Internal Error! cleanupThread() can only ever be called from main application thread!\");\n            assert(pthread_ptr, \"Internal Error! Null pthread_ptr in cleanupThread!\");\n            var worker = PThread.pthreads[pthread_ptr];\n            assert(worker);\n            PThread.returnWorkerToPool(worker);\n        }\n        function zeroMemory(address, size) {\n            HEAPU8.fill(0, address, address + size);\n            return address;\n        }\n        function spawnThread(threadParams) {\n            assert(!ENVIRONMENT_IS_PTHREAD, \"Internal Error! spawnThread() can only ever be called from main application thread!\");\n            assert(threadParams.pthread_ptr, \"Internal error, no pthread ptr!\");\n            var worker = PThread.getNewWorker();\n            if (!worker) // No available workers in the PThread pool.\n            return 6;\n            assert(!worker.pthread_ptr, \"Internal error!\");\n            PThread.runningWorkers.push(worker);\n            // Add to pthreads map\n            PThread.pthreads[threadParams.pthread_ptr] = worker;\n            worker.pthread_ptr = threadParams.pthread_ptr;\n            var msg = {\n                \"cmd\": \"run\",\n                \"start_routine\": threadParams.startRoutine,\n                \"arg\": threadParams.arg,\n                \"pthread_ptr\": threadParams.pthread_ptr\n            };\n            // Ask the worker to start executing its pthread entry point function.\n            worker.postMessage(msg, threadParams.transferList);\n            return 0;\n        }\n        var PATH = {\n            isAbs: (path)=>path.charAt(0) === \"/\",\n            splitPath: (filename)=>{\n                var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n                return splitPathRe.exec(filename).slice(1);\n            },\n            normalizeArray: (parts, allowAboveRoot)=>{\n                // if the path tries to go above the root, `up` ends up > 0\n                var up = 0;\n                for(var i = parts.length - 1; i >= 0; i--){\n                    var last = parts[i];\n                    if (last === \".\") parts.splice(i, 1);\n                    else if (last === \"..\") {\n                        parts.splice(i, 1);\n                        up++;\n                    } else if (up) {\n                        parts.splice(i, 1);\n                        up--;\n                    }\n                }\n                // if the path is allowed to go above the root, restore leading ..s\n                if (allowAboveRoot) for(; up; up--)parts.unshift(\"..\");\n                return parts;\n            },\n            normalize: (path)=>{\n                var isAbsolute = PATH.isAbs(path), trailingSlash = path.substr(-1) === \"/\";\n                // Normalize the path\n                path = PATH.normalizeArray(path.split(\"/\").filter((p)=>!!p), !isAbsolute).join(\"/\");\n                if (!path && !isAbsolute) path = \".\";\n                if (path && trailingSlash) path += \"/\";\n                return (isAbsolute ? \"/\" : \"\") + path;\n            },\n            dirname: (path)=>{\n                var result = PATH.splitPath(path), root = result[0], dir = result[1];\n                if (!root && !dir) // No dirname whatsoever\n                return \".\";\n                if (dir) // It has a dirname, strip trailing slash\n                dir = dir.substr(0, dir.length - 1);\n                return root + dir;\n            },\n            basename: (path)=>{\n                // EMSCRIPTEN return '/'' for '/', not an empty string\n                if (path === \"/\") return \"/\";\n                path = PATH.normalize(path);\n                path = path.replace(/\\/$/, \"\");\n                var lastSlash = path.lastIndexOf(\"/\");\n                if (lastSlash === -1) return path;\n                return path.substr(lastSlash + 1);\n            },\n            join: function() {\n                var paths = Array.prototype.slice.call(arguments);\n                return PATH.normalize(paths.join(\"/\"));\n            },\n            join2: (l, r)=>{\n                return PATH.normalize(l + \"/\" + r);\n            }\n        };\n        function initRandomFill() {\n            if (typeof crypto == \"object\" && typeof crypto[\"getRandomValues\"] == \"function\") // for modern web browsers\n            // like with most Web APIs, we can't use Web Crypto API directly on shared memory,\n            // so we need to create an intermediate buffer and copy it to the destination\n            return (view)=>(view.set(crypto.getRandomValues(new Uint8Array(view.byteLength))), // Return the original view to match modern native implementations.\n                view);\n            else // we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096\n            abort(\"no cryptographic support found for randomDevice. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: function(array) { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };\");\n        }\n        function randomFill(view) {\n            // Lazily init on the first invocation.\n            return (randomFill = initRandomFill())(view);\n        }\n        var PATH_FS = {\n            resolve: function() {\n                var resolvedPath = \"\", resolvedAbsolute = false;\n                for(var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--){\n                    var path = i >= 0 ? arguments[i] : FS.cwd();\n                    // Skip empty and invalid entries\n                    if (typeof path != \"string\") throw new TypeError(\"Arguments to path.resolve must be strings\");\n                    else if (!path) return \"\"; // an invalid portion invalidates the whole thing\n                    resolvedPath = path + \"/\" + resolvedPath;\n                    resolvedAbsolute = PATH.isAbs(path);\n                }\n                // At this point the path should be resolved to a full absolute path, but\n                // handle relative paths to be safe (might happen when process.cwd() fails)\n                resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter((p)=>!!p), !resolvedAbsolute).join(\"/\");\n                return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n            },\n            relative: (from, to)=>{\n                from = PATH_FS.resolve(from).substr(1);\n                to = PATH_FS.resolve(to).substr(1);\n                function trim(arr) {\n                    var start = 0;\n                    for(; start < arr.length; start++){\n                        if (arr[start] !== \"\") break;\n                    }\n                    var end = arr.length - 1;\n                    for(; end >= 0; end--){\n                        if (arr[end] !== \"\") break;\n                    }\n                    if (start > end) return [];\n                    return arr.slice(start, end - start + 1);\n                }\n                var fromParts = trim(from.split(\"/\"));\n                var toParts = trim(to.split(\"/\"));\n                var length = Math.min(fromParts.length, toParts.length);\n                var samePartsLength = length;\n                for(var i = 0; i < length; i++)if (fromParts[i] !== toParts[i]) {\n                    samePartsLength = i;\n                    break;\n                }\n                var outputParts = [];\n                for(var i = samePartsLength; i < fromParts.length; i++)outputParts.push(\"..\");\n                outputParts = outputParts.concat(toParts.slice(samePartsLength));\n                return outputParts.join(\"/\");\n            }\n        };\n        function lengthBytesUTF8(str) {\n            var len = 0;\n            for(var i = 0; i < str.length; ++i){\n                // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n                // unit, not a Unicode code point of the character! So decode\n                // UTF16->UTF32->UTF8.\n                // See http://unicode.org/faq/utf_bom.html#utf16-3\n                var c = str.charCodeAt(i); // possibly a lead surrogate\n                if (c <= 0x7F) len++;\n                else if (c <= 0x7FF) len += 2;\n                else if (c >= 0xD800 && c <= 0xDFFF) {\n                    len += 4;\n                    ++i;\n                } else len += 3;\n            }\n            return len;\n        }\n        function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n            assert(typeof str === \"string\");\n            // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\n            // undefined and false each don't write out any bytes.\n            if (!(maxBytesToWrite > 0)) return 0;\n            var startIdx = outIdx;\n            var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n            for(var i = 0; i < str.length; ++i){\n                // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n                // unit, not a Unicode code point of the character! So decode\n                // UTF16->UTF32->UTF8.\n                // See http://unicode.org/faq/utf_bom.html#utf16-3\n                // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\n                // and https://www.ietf.org/rfc/rfc2279.txt\n                // and https://tools.ietf.org/html/rfc3629\n                var u = str.charCodeAt(i); // possibly a lead surrogate\n                if (u >= 0xD800 && u <= 0xDFFF) {\n                    var u1 = str.charCodeAt(++i);\n                    u = 0x10000 + ((u & 0x3FF) << 10) | u1 & 0x3FF;\n                }\n                if (u <= 0x7F) {\n                    if (outIdx >= endIdx) break;\n                    heap[outIdx++] = u;\n                } else if (u <= 0x7FF) {\n                    if (outIdx + 1 >= endIdx) break;\n                    heap[outIdx++] = 0xC0 | u >> 6;\n                    heap[outIdx++] = 0x80 | u & 63;\n                } else if (u <= 0xFFFF) {\n                    if (outIdx + 2 >= endIdx) break;\n                    heap[outIdx++] = 0xE0 | u >> 12;\n                    heap[outIdx++] = 0x80 | u >> 6 & 63;\n                    heap[outIdx++] = 0x80 | u & 63;\n                } else {\n                    if (outIdx + 3 >= endIdx) break;\n                    if (u > 0x10FFFF) warnOnce(\"Invalid Unicode code point \" + ptrToString(u) + \" encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).\");\n                    heap[outIdx++] = 0xF0 | u >> 18;\n                    heap[outIdx++] = 0x80 | u >> 12 & 63;\n                    heap[outIdx++] = 0x80 | u >> 6 & 63;\n                    heap[outIdx++] = 0x80 | u & 63;\n                }\n            }\n            // Null-terminate the pointer to the buffer.\n            heap[outIdx] = 0;\n            return outIdx - startIdx;\n        }\n        /** @type {function(string, boolean=, number=)} */ function intArrayFromString(stringy, dontAddNull, length) {\n            var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n            var u8array = new Array(len);\n            var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n            if (dontAddNull) u8array.length = numBytesWritten;\n            return u8array;\n        }\n        var TTY = {\n            ttys: [],\n            init: function() {\n            // https://github.com/emscripten-core/emscripten/pull/1555\n            // if (ENVIRONMENT_IS_NODE) {\n            //   // currently, FS.init does not distinguish if process.stdin is a file or TTY\n            //   // device, it always assumes it's a TTY device. because of this, we're forcing\n            //   // process.stdin to UTF8 encoding to at least make stdin reading compatible\n            //   // with text files until FS.init can be refactored.\n            //   process.stdin.setEncoding('utf8');\n            // }\n            },\n            shutdown: function() {\n            // https://github.com/emscripten-core/emscripten/pull/1555\n            // if (ENVIRONMENT_IS_NODE) {\n            //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?\n            //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation\n            //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?\n            //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle\n            //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call\n            //   process.stdin.pause();\n            // }\n            },\n            register: function(dev, ops) {\n                TTY.ttys[dev] = {\n                    input: [],\n                    output: [],\n                    ops: ops\n                };\n                FS.registerDevice(dev, TTY.stream_ops);\n            },\n            stream_ops: {\n                open: function(stream) {\n                    var tty = TTY.ttys[stream.node.rdev];\n                    if (!tty) throw new FS.ErrnoError(43);\n                    stream.tty = tty;\n                    stream.seekable = false;\n                },\n                close: function(stream) {\n                    // flush any pending line data\n                    stream.tty.ops.fsync(stream.tty);\n                },\n                fsync: function(stream) {\n                    stream.tty.ops.fsync(stream.tty);\n                },\n                read: function(stream, buffer, offset, length, pos /* ignored */ ) {\n                    if (!stream.tty || !stream.tty.ops.get_char) throw new FS.ErrnoError(60);\n                    var bytesRead = 0;\n                    for(var i = 0; i < length; i++){\n                        var result;\n                        try {\n                            result = stream.tty.ops.get_char(stream.tty);\n                        } catch (e) {\n                            throw new FS.ErrnoError(29);\n                        }\n                        if (result === undefined && bytesRead === 0) throw new FS.ErrnoError(6);\n                        if (result === null || result === undefined) break;\n                        bytesRead++;\n                        buffer[offset + i] = result;\n                    }\n                    if (bytesRead) stream.node.timestamp = Date.now();\n                    return bytesRead;\n                },\n                write: function(stream, buffer, offset, length, pos) {\n                    if (!stream.tty || !stream.tty.ops.put_char) throw new FS.ErrnoError(60);\n                    try {\n                        for(var i = 0; i < length; i++)stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n                    } catch (e) {\n                        throw new FS.ErrnoError(29);\n                    }\n                    if (length) stream.node.timestamp = Date.now();\n                    return i;\n                }\n            },\n            default_tty_ops: {\n                get_char: function(tty) {\n                    if (!tty.input.length) {\n                        var result = null;\n                        if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\n                            // Browser.\n                            result = window.prompt(\"Input: \"); // returns null on cancel\n                            if (result !== null) result += \"\\n\";\n                        } else if (typeof readline == \"function\") {\n                            // Command line.\n                            result = readline();\n                            if (result !== null) result += \"\\n\";\n                        }\n                        if (!result) return null;\n                        tty.input = intArrayFromString(result, true);\n                    }\n                    return tty.input.shift();\n                },\n                put_char: function(tty, val) {\n                    if (val === null || val === 10) {\n                        out(UTF8ArrayToString(tty.output, 0));\n                        tty.output = [];\n                    } else if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.\n                },\n                fsync: function(tty) {\n                    if (tty.output && tty.output.length > 0) {\n                        out(UTF8ArrayToString(tty.output, 0));\n                        tty.output = [];\n                    }\n                }\n            },\n            default_tty1_ops: {\n                put_char: function(tty, val) {\n                    if (val === null || val === 10) {\n                        err(UTF8ArrayToString(tty.output, 0));\n                        tty.output = [];\n                    } else if (val != 0) tty.output.push(val);\n                },\n                fsync: function(tty) {\n                    if (tty.output && tty.output.length > 0) {\n                        err(UTF8ArrayToString(tty.output, 0));\n                        tty.output = [];\n                    }\n                }\n            }\n        };\n        function alignMemory(size, alignment) {\n            assert(alignment, \"alignment argument is required\");\n            return Math.ceil(size / alignment) * alignment;\n        }\n        function mmapAlloc(size) {\n            abort(\"internal error: mmapAlloc called but `emscripten_builtin_memalign` native symbol not exported\");\n        }\n        var MEMFS = {\n            ops_table: null,\n            mount: function(mount) {\n                return MEMFS.createNode(null, \"/\", 16895 /* 0777 */ , 0);\n            },\n            createNode: function(parent, name, mode, dev) {\n                if (FS.isBlkdev(mode) || FS.isFIFO(mode)) // no supported\n                throw new FS.ErrnoError(63);\n                if (!MEMFS.ops_table) MEMFS.ops_table = {\n                    dir: {\n                        node: {\n                            getattr: MEMFS.node_ops.getattr,\n                            setattr: MEMFS.node_ops.setattr,\n                            lookup: MEMFS.node_ops.lookup,\n                            mknod: MEMFS.node_ops.mknod,\n                            rename: MEMFS.node_ops.rename,\n                            unlink: MEMFS.node_ops.unlink,\n                            rmdir: MEMFS.node_ops.rmdir,\n                            readdir: MEMFS.node_ops.readdir,\n                            symlink: MEMFS.node_ops.symlink\n                        },\n                        stream: {\n                            llseek: MEMFS.stream_ops.llseek\n                        }\n                    },\n                    file: {\n                        node: {\n                            getattr: MEMFS.node_ops.getattr,\n                            setattr: MEMFS.node_ops.setattr\n                        },\n                        stream: {\n                            llseek: MEMFS.stream_ops.llseek,\n                            read: MEMFS.stream_ops.read,\n                            write: MEMFS.stream_ops.write,\n                            allocate: MEMFS.stream_ops.allocate,\n                            mmap: MEMFS.stream_ops.mmap,\n                            msync: MEMFS.stream_ops.msync\n                        }\n                    },\n                    link: {\n                        node: {\n                            getattr: MEMFS.node_ops.getattr,\n                            setattr: MEMFS.node_ops.setattr,\n                            readlink: MEMFS.node_ops.readlink\n                        },\n                        stream: {}\n                    },\n                    chrdev: {\n                        node: {\n                            getattr: MEMFS.node_ops.getattr,\n                            setattr: MEMFS.node_ops.setattr\n                        },\n                        stream: FS.chrdev_stream_ops\n                    }\n                };\n                var node = FS.createNode(parent, name, mode, dev);\n                if (FS.isDir(node.mode)) {\n                    node.node_ops = MEMFS.ops_table.dir.node;\n                    node.stream_ops = MEMFS.ops_table.dir.stream;\n                    node.contents = {};\n                } else if (FS.isFile(node.mode)) {\n                    node.node_ops = MEMFS.ops_table.file.node;\n                    node.stream_ops = MEMFS.ops_table.file.stream;\n                    node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.\n                    // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred\n                    // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size\n                    // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.\n                    node.contents = null;\n                } else if (FS.isLink(node.mode)) {\n                    node.node_ops = MEMFS.ops_table.link.node;\n                    node.stream_ops = MEMFS.ops_table.link.stream;\n                } else if (FS.isChrdev(node.mode)) {\n                    node.node_ops = MEMFS.ops_table.chrdev.node;\n                    node.stream_ops = MEMFS.ops_table.chrdev.stream;\n                }\n                node.timestamp = Date.now();\n                // add the new node to the parent\n                if (parent) {\n                    parent.contents[name] = node;\n                    parent.timestamp = node.timestamp;\n                }\n                return node;\n            },\n            getFileDataAsTypedArray: function(node) {\n                if (!node.contents) return new Uint8Array(0);\n                if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.\n                return new Uint8Array(node.contents);\n            },\n            expandFileStorage: function(node, newCapacity) {\n                var prevCapacity = node.contents ? node.contents.length : 0;\n                if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.\n                // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\n                // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\n                // avoid overshooting the allocation cap by a very large margin.\n                var CAPACITY_DOUBLING_MAX = 1048576;\n                newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125) >>> 0);\n                if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.\n                var oldContents = node.contents;\n                node.contents = new Uint8Array(newCapacity); // Allocate new storage.\n                if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.\n            },\n            resizeFileStorage: function(node, newSize) {\n                if (node.usedBytes == newSize) return;\n                if (newSize == 0) {\n                    node.contents = null; // Fully decommit when requesting a resize to zero.\n                    node.usedBytes = 0;\n                } else {\n                    var oldContents = node.contents;\n                    node.contents = new Uint8Array(newSize); // Allocate new storage.\n                    if (oldContents) node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.\n                    node.usedBytes = newSize;\n                }\n            },\n            node_ops: {\n                getattr: function(node) {\n                    var attr = {};\n                    // device numbers reuse inode numbers.\n                    attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n                    attr.ino = node.id;\n                    attr.mode = node.mode;\n                    attr.nlink = 1;\n                    attr.uid = 0;\n                    attr.gid = 0;\n                    attr.rdev = node.rdev;\n                    if (FS.isDir(node.mode)) attr.size = 4096;\n                    else if (FS.isFile(node.mode)) attr.size = node.usedBytes;\n                    else if (FS.isLink(node.mode)) attr.size = node.link.length;\n                    else attr.size = 0;\n                    attr.atime = new Date(node.timestamp);\n                    attr.mtime = new Date(node.timestamp);\n                    attr.ctime = new Date(node.timestamp);\n                    // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),\n                    //       but this is not required by the standard.\n                    attr.blksize = 4096;\n                    attr.blocks = Math.ceil(attr.size / attr.blksize);\n                    return attr;\n                },\n                setattr: function(node, attr) {\n                    if (attr.mode !== undefined) node.mode = attr.mode;\n                    if (attr.timestamp !== undefined) node.timestamp = attr.timestamp;\n                    if (attr.size !== undefined) MEMFS.resizeFileStorage(node, attr.size);\n                },\n                lookup: function(parent, name) {\n                    throw FS.genericErrors[44];\n                },\n                mknod: function(parent, name, mode, dev) {\n                    return MEMFS.createNode(parent, name, mode, dev);\n                },\n                rename: function(old_node, new_dir, new_name) {\n                    // if we're overwriting a directory at new_name, make sure it's empty.\n                    if (FS.isDir(old_node.mode)) {\n                        var new_node;\n                        try {\n                            new_node = FS.lookupNode(new_dir, new_name);\n                        } catch (e) {}\n                        if (new_node) {\n                            for(var i in new_node.contents)throw new FS.ErrnoError(55);\n                        }\n                    }\n                    // do the internal rewiring\n                    delete old_node.parent.contents[old_node.name];\n                    old_node.parent.timestamp = Date.now();\n                    old_node.name = new_name;\n                    new_dir.contents[new_name] = old_node;\n                    new_dir.timestamp = old_node.parent.timestamp;\n                    old_node.parent = new_dir;\n                },\n                unlink: function(parent, name) {\n                    delete parent.contents[name];\n                    parent.timestamp = Date.now();\n                },\n                rmdir: function(parent, name) {\n                    var node = FS.lookupNode(parent, name);\n                    for(var i in node.contents)throw new FS.ErrnoError(55);\n                    delete parent.contents[name];\n                    parent.timestamp = Date.now();\n                },\n                readdir: function(node) {\n                    var entries = [\n                        \".\",\n                        \"..\"\n                    ];\n                    for(var key in node.contents){\n                        if (!node.contents.hasOwnProperty(key)) continue;\n                        entries.push(key);\n                    }\n                    return entries;\n                },\n                symlink: function(parent, newname, oldpath) {\n                    var node = MEMFS.createNode(parent, newname, 41471, 0);\n                    node.link = oldpath;\n                    return node;\n                },\n                readlink: function(node) {\n                    if (!FS.isLink(node.mode)) throw new FS.ErrnoError(28);\n                    return node.link;\n                }\n            },\n            stream_ops: {\n                read: function(stream, buffer, offset, length, position) {\n                    var contents = stream.node.contents;\n                    if (position >= stream.node.usedBytes) return 0;\n                    var size = Math.min(stream.node.usedBytes - position, length);\n                    assert(size >= 0);\n                    if (size > 8 && contents.subarray) buffer.set(contents.subarray(position, position + size), offset);\n                    else for(var i = 0; i < size; i++)buffer[offset + i] = contents[position + i];\n                    return size;\n                },\n                write: function(stream, buffer, offset, length, position, canOwn) {\n                    // The data buffer should be a typed array view\n                    assert(!(buffer instanceof ArrayBuffer));\n                    if (!length) return 0;\n                    var node = stream.node;\n                    node.timestamp = Date.now();\n                    if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n                        if (canOwn) {\n                            assert(position === 0, \"canOwn must imply no weird position inside the file\");\n                            node.contents = buffer.subarray(offset, offset + length);\n                            node.usedBytes = length;\n                            return length;\n                        } else if (node.usedBytes === 0 && position === 0) {\n                            node.contents = buffer.slice(offset, offset + length);\n                            node.usedBytes = length;\n                            return length;\n                        } else if (position + length <= node.usedBytes) {\n                            node.contents.set(buffer.subarray(offset, offset + length), position);\n                            return length;\n                        }\n                    }\n                    // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.\n                    MEMFS.expandFileStorage(node, position + length);\n                    if (node.contents.subarray && buffer.subarray) // Use typed array write which is available.\n                    node.contents.set(buffer.subarray(offset, offset + length), position);\n                    else for(var i = 0; i < length; i++)node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.\n                    node.usedBytes = Math.max(node.usedBytes, position + length);\n                    return length;\n                },\n                llseek: function(stream, offset, whence) {\n                    var position = offset;\n                    if (whence === 1) position += stream.position;\n                    else if (whence === 2) {\n                        if (FS.isFile(stream.node.mode)) position += stream.node.usedBytes;\n                    }\n                    if (position < 0) throw new FS.ErrnoError(28);\n                    return position;\n                },\n                allocate: function(stream, offset, length) {\n                    MEMFS.expandFileStorage(stream.node, offset + length);\n                    stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n                },\n                mmap: function(stream, length, position, prot, flags) {\n                    if (!FS.isFile(stream.node.mode)) throw new FS.ErrnoError(43);\n                    var ptr;\n                    var allocated;\n                    var contents = stream.node.contents;\n                    // Only make a new copy when MAP_PRIVATE is specified.\n                    if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\n                        // We can't emulate MAP_SHARED when the file is not backed by the\n                        // buffer we're mapping to (e.g. the HEAP buffer).\n                        allocated = false;\n                        ptr = contents.byteOffset;\n                    } else {\n                        // Try to avoid unnecessary slices.\n                        if (position > 0 || position + length < contents.length) {\n                            if (contents.subarray) contents = contents.subarray(position, position + length);\n                            else contents = Array.prototype.slice.call(contents, position, position + length);\n                        }\n                        allocated = true;\n                        ptr = mmapAlloc(length);\n                        if (!ptr) throw new FS.ErrnoError(48);\n                        HEAP8.set(contents, ptr);\n                    }\n                    return {\n                        ptr: ptr,\n                        allocated: allocated\n                    };\n                },\n                msync: function(stream, buffer, offset, length, mmapFlags) {\n                    MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n                    // should we check if bytesWritten and length are the same?\n                    return 0;\n                }\n            }\n        };\n        /** @param {boolean=} noRunDep */ function asyncLoad(url, onload, onerror, noRunDep) {\n            var dep = !noRunDep ? getUniqueRunDependency(\"al \" + url) : \"\";\n            readAsync(url, (arrayBuffer)=>{\n                assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\n                onload(new Uint8Array(arrayBuffer));\n                if (dep) removeRunDependency(dep);\n            }, (event)=>{\n                if (onerror) onerror();\n                else throw 'Loading data file \"' + url + '\" failed.';\n            });\n            if (dep) addRunDependency(dep);\n        }\n        var ERRNO_MESSAGES = {\n            0: \"Success\",\n            1: \"Arg list too long\",\n            2: \"Permission denied\",\n            3: \"Address already in use\",\n            4: \"Address not available\",\n            5: \"Address family not supported by protocol family\",\n            6: \"No more processes\",\n            7: \"Socket already connected\",\n            8: \"Bad file number\",\n            9: \"Trying to read unreadable message\",\n            10: \"Mount device busy\",\n            11: \"Operation canceled\",\n            12: \"No children\",\n            13: \"Connection aborted\",\n            14: \"Connection refused\",\n            15: \"Connection reset by peer\",\n            16: \"File locking deadlock error\",\n            17: \"Destination address required\",\n            18: \"Math arg out of domain of func\",\n            19: \"Quota exceeded\",\n            20: \"File exists\",\n            21: \"Bad address\",\n            22: \"File too large\",\n            23: \"Host is unreachable\",\n            24: \"Identifier removed\",\n            25: \"Illegal byte sequence\",\n            26: \"Connection already in progress\",\n            27: \"Interrupted system call\",\n            28: \"Invalid argument\",\n            29: \"I/O error\",\n            30: \"Socket is already connected\",\n            31: \"Is a directory\",\n            32: \"Too many symbolic links\",\n            33: \"Too many open files\",\n            34: \"Too many links\",\n            35: \"Message too long\",\n            36: \"Multihop attempted\",\n            37: \"File or path name too long\",\n            38: \"Network interface is not configured\",\n            39: \"Connection reset by network\",\n            40: \"Network is unreachable\",\n            41: \"Too many open files in system\",\n            42: \"No buffer space available\",\n            43: \"No such device\",\n            44: \"No such file or directory\",\n            45: \"Exec format error\",\n            46: \"No record locks available\",\n            47: \"The link has been severed\",\n            48: \"Not enough core\",\n            49: \"No message of desired type\",\n            50: \"Protocol not available\",\n            51: \"No space left on device\",\n            52: \"Function not implemented\",\n            53: \"Socket is not connected\",\n            54: \"Not a directory\",\n            55: \"Directory not empty\",\n            56: \"State not recoverable\",\n            57: \"Socket operation on non-socket\",\n            59: \"Not a typewriter\",\n            60: \"No such device or address\",\n            61: \"Value too large for defined data type\",\n            62: \"Previous owner died\",\n            63: \"Not super-user\",\n            64: \"Broken pipe\",\n            65: \"Protocol error\",\n            66: \"Unknown protocol\",\n            67: \"Protocol wrong type for socket\",\n            68: \"Math result not representable\",\n            69: \"Read only file system\",\n            70: \"Illegal seek\",\n            71: \"No such process\",\n            72: \"Stale file handle\",\n            73: \"Connection timed out\",\n            74: \"Text file busy\",\n            75: \"Cross-device link\",\n            100: \"Device not a stream\",\n            101: \"Bad font file fmt\",\n            102: \"Invalid slot\",\n            103: \"Invalid request code\",\n            104: \"No anode\",\n            105: \"Block device required\",\n            106: \"Channel number out of range\",\n            107: \"Level 3 halted\",\n            108: \"Level 3 reset\",\n            109: \"Link number out of range\",\n            110: \"Protocol driver not attached\",\n            111: \"No CSI structure available\",\n            112: \"Level 2 halted\",\n            113: \"Invalid exchange\",\n            114: \"Invalid request descriptor\",\n            115: \"Exchange full\",\n            116: \"No data (for no delay io)\",\n            117: \"Timer expired\",\n            118: \"Out of streams resources\",\n            119: \"Machine is not on the network\",\n            120: \"Package not installed\",\n            121: \"The object is remote\",\n            122: \"Advertise error\",\n            123: \"Srmount error\",\n            124: \"Communication error on send\",\n            125: \"Cross mount point (not really error)\",\n            126: \"Given log. name not unique\",\n            127: \"f.d. invalid for this operation\",\n            128: \"Remote address changed\",\n            129: \"Can   access a needed shared lib\",\n            130: \"Accessing a corrupted shared lib\",\n            131: \".lib section in a.out corrupted\",\n            132: \"Attempting to link in too many libs\",\n            133: \"Attempting to exec a shared library\",\n            135: \"Streams pipe error\",\n            136: \"Too many users\",\n            137: \"Socket type not supported\",\n            138: \"Not supported\",\n            139: \"Protocol family not supported\",\n            140: \"Can't send after socket shutdown\",\n            141: \"Too many references\",\n            142: \"Host is down\",\n            148: \"No medium (in tape drive)\",\n            156: \"Level 2 not synchronized\"\n        };\n        var ERRNO_CODES = {};\n        function withStackSave(f) {\n            var stack = stackSave();\n            var ret = f();\n            stackRestore(stack);\n            return ret;\n        }\n        function stringToUTF8(str, outPtr, maxBytesToWrite) {\n            assert(typeof maxBytesToWrite == \"number\", \"stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");\n            return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n        }\n        function stringToUTF8OnStack(str) {\n            var size = lengthBytesUTF8(str) + 1;\n            var ret = stackAlloc(size);\n            stringToUTF8(str, ret, size);\n            return ret;\n        }\n        var UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n        /**\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\n     * array that contains uint8 values, returns a copy of that string as a\n     * Javascript String object.\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\n     * @param {number} idx\n     * @param {number=} maxBytesToRead\n     * @return {string}\n     */ function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n            var endIdx = idx + maxBytesToRead;\n            var endPtr = idx;\n            // TextDecoder needs to know the byte length in advance, it doesn't stop on\n            // null terminator by itself.  Also, use the length info to avoid running tiny\n            // strings through TextDecoder, since .subarray() allocates garbage.\n            // (As a tiny code save trick, compare endPtr against endIdx using a negation,\n            // so that undefined means Infinity)\n            while(heapOrArray[endPtr] && !(endPtr >= endIdx))++endPtr;\n            if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) return UTF8Decoder.decode(heapOrArray.buffer instanceof SharedArrayBuffer ? heapOrArray.slice(idx, endPtr) : heapOrArray.subarray(idx, endPtr));\n            var str = \"\";\n            // If building with TextDecoder, we have already computed the string length\n            // above, so test loop end condition against that\n            while(idx < endPtr){\n                // For UTF8 byte structure, see:\n                // http://en.wikipedia.org/wiki/UTF-8#Description\n                // https://www.ietf.org/rfc/rfc2279.txt\n                // https://tools.ietf.org/html/rfc3629\n                var u0 = heapOrArray[idx++];\n                if (!(u0 & 0x80)) {\n                    str += String.fromCharCode(u0);\n                    continue;\n                }\n                var u1 = heapOrArray[idx++] & 63;\n                if ((u0 & 0xE0) == 0xC0) {\n                    str += String.fromCharCode((u0 & 31) << 6 | u1);\n                    continue;\n                }\n                var u2 = heapOrArray[idx++] & 63;\n                if ((u0 & 0xF0) == 0xE0) u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n                else {\n                    if ((u0 & 0xF8) != 0xF0) warnOnce(\"Invalid UTF-8 leading byte \" + ptrToString(u0) + \" encountered when deserializing a UTF-8 string in wasm memory to a JS string!\");\n                    u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\n                }\n                if (u0 < 0x10000) str += String.fromCharCode(u0);\n                else {\n                    var ch = u0 - 0x10000;\n                    str += String.fromCharCode(0xD800 | ch >> 10, 0xDC00 | ch & 0x3FF);\n                }\n            }\n            return str;\n        }\n        /**\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\n     *\n     * @param {number} ptr\n     * @param {number=} maxBytesToRead - An optional length that specifies the\n     *   maximum number of bytes to read. You can omit this parameter to scan the\n     *   string until the first \u0000 byte. If maxBytesToRead is passed, and the string\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\n     * @return {string}\n     */ function UTF8ToString(ptr, maxBytesToRead) {\n            assert(typeof ptr == \"number\");\n            return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n        }\n        function demangle(func) {\n            // If demangle has failed before, stop demangling any further function names\n            // This avoids an infinite recursion with malloc()->abort()->stackTrace()->demangle()->malloc()->...\n            demangle.recursionGuard = (demangle.recursionGuard | 0) + 1;\n            if (demangle.recursionGuard > 1) return func;\n            return withStackSave(function() {\n                try {\n                    var s = func;\n                    if (s.startsWith(\"__Z\")) s = s.substr(1);\n                    var buf = stringToUTF8OnStack(s);\n                    var status = stackAlloc(4);\n                    var ret = ___cxa_demangle(buf, 0, 0, status);\n                    if (HEAP32[status >> 2] === 0 && ret) return UTF8ToString(ret);\n                // otherwise, libcxxabi failed\n                } catch (e) {} finally{\n                    _free(ret);\n                    if (demangle.recursionGuard < 2) --demangle.recursionGuard;\n                }\n                // failure when using libcxxabi, don't demangle\n                return func;\n            });\n        }\n        function demangleAll(text) {\n            var regex = /\\b_Z[\\w\\d_]+/g;\n            return text.replace(regex, function(x) {\n                var y = demangle(x);\n                return x === y ? x : y + \" [\" + x + \"]\";\n            });\n        }\n        var FS = {\n            root: null,\n            mounts: [],\n            devices: {},\n            streams: [],\n            nextInode: 1,\n            nameTable: null,\n            currentPath: \"/\",\n            initialized: false,\n            ignorePermissions: true,\n            ErrnoError: null,\n            genericErrors: {},\n            filesystems: null,\n            syncFSRequests: 0,\n            lookupPath: (path, opts = {})=>{\n                path = PATH_FS.resolve(path);\n                if (!path) return {\n                    path: \"\",\n                    node: null\n                };\n                var defaults = {\n                    follow_mount: true,\n                    recurse_count: 0\n                };\n                opts = Object.assign(defaults, opts);\n                if (opts.recurse_count > 8) throw new FS.ErrnoError(32);\n                // split the absolute path\n                var parts = path.split(\"/\").filter((p)=>!!p);\n                // start at the root\n                var current = FS.root;\n                var current_path = \"/\";\n                for(var i = 0; i < parts.length; i++){\n                    var islast = i === parts.length - 1;\n                    if (islast && opts.parent) break;\n                    current = FS.lookupNode(current, parts[i]);\n                    current_path = PATH.join2(current_path, parts[i]);\n                    // jump to the mount's root node if this is a mountpoint\n                    if (FS.isMountpoint(current)) {\n                        if (!islast || islast && opts.follow_mount) current = current.mounted.root;\n                    }\n                    // by default, lookupPath will not follow a symlink if it is the final path component.\n                    // setting opts.follow = true will override this behavior.\n                    if (!islast || opts.follow) {\n                        var count = 0;\n                        while(FS.isLink(current.mode)){\n                            var link = FS.readlink(current_path);\n                            current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n                            var lookup = FS.lookupPath(current_path, {\n                                recurse_count: opts.recurse_count + 1\n                            });\n                            current = lookup.node;\n                            if (count++ > 40) throw new FS.ErrnoError(32);\n                        }\n                    }\n                }\n                return {\n                    path: current_path,\n                    node: current\n                };\n            },\n            getPath: (node)=>{\n                var path;\n                while(true){\n                    if (FS.isRoot(node)) {\n                        var mount = node.mount.mountpoint;\n                        if (!path) return mount;\n                        return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path;\n                    }\n                    path = path ? node.name + \"/\" + path : node.name;\n                    node = node.parent;\n                }\n            },\n            hashName: (parentid, name)=>{\n                var hash = 0;\n                for(var i = 0; i < name.length; i++)hash = (hash << 5) - hash + name.charCodeAt(i) | 0;\n                return (parentid + hash >>> 0) % FS.nameTable.length;\n            },\n            hashAddNode: (node)=>{\n                var hash = FS.hashName(node.parent.id, node.name);\n                node.name_next = FS.nameTable[hash];\n                FS.nameTable[hash] = node;\n            },\n            hashRemoveNode: (node)=>{\n                var hash = FS.hashName(node.parent.id, node.name);\n                if (FS.nameTable[hash] === node) FS.nameTable[hash] = node.name_next;\n                else {\n                    var current = FS.nameTable[hash];\n                    while(current){\n                        if (current.name_next === node) {\n                            current.name_next = node.name_next;\n                            break;\n                        }\n                        current = current.name_next;\n                    }\n                }\n            },\n            lookupNode: (parent, name)=>{\n                var errCode = FS.mayLookup(parent);\n                if (errCode) throw new FS.ErrnoError(errCode, parent);\n                var hash = FS.hashName(parent.id, name);\n                for(var node = FS.nameTable[hash]; node; node = node.name_next){\n                    var nodeName = node.name;\n                    if (node.parent.id === parent.id && nodeName === name) return node;\n                }\n                // if we failed to find it in the cache, call into the VFS\n                return FS.lookup(parent, name);\n            },\n            createNode: (parent, name, mode, rdev)=>{\n                assert(typeof parent == \"object\");\n                var node = new FS.FSNode(parent, name, mode, rdev);\n                FS.hashAddNode(node);\n                return node;\n            },\n            destroyNode: (node)=>{\n                FS.hashRemoveNode(node);\n            },\n            isRoot: (node)=>{\n                return node === node.parent;\n            },\n            isMountpoint: (node)=>{\n                return !!node.mounted;\n            },\n            isFile: (mode)=>{\n                return (mode & 61440) === 32768;\n            },\n            isDir: (mode)=>{\n                return (mode & 61440) === 16384;\n            },\n            isLink: (mode)=>{\n                return (mode & 61440) === 40960;\n            },\n            isChrdev: (mode)=>{\n                return (mode & 61440) === 8192;\n            },\n            isBlkdev: (mode)=>{\n                return (mode & 61440) === 24576;\n            },\n            isFIFO: (mode)=>{\n                return (mode & 61440) === 4096;\n            },\n            isSocket: (mode)=>{\n                return (mode & 49152) === 49152;\n            },\n            flagModes: {\n                \"r\": 0,\n                \"r+\": 2,\n                \"w\": 577,\n                \"w+\": 578,\n                \"a\": 1089,\n                \"a+\": 1090\n            },\n            modeStringToFlags: (str)=>{\n                var flags = FS.flagModes[str];\n                if (typeof flags == \"undefined\") throw new Error(\"Unknown file open mode: \" + str);\n                return flags;\n            },\n            flagsToPermissionString: (flag)=>{\n                var perms = [\n                    \"r\",\n                    \"w\",\n                    \"rw\"\n                ][flag & 3];\n                if (flag & 512) perms += \"w\";\n                return perms;\n            },\n            nodePermissions: (node, perms)=>{\n                if (FS.ignorePermissions) return 0;\n                // return 0 if any user, group or owner bits are set.\n                if (perms.includes(\"r\") && !(node.mode & 292)) return 2;\n                else if (perms.includes(\"w\") && !(node.mode & 146)) return 2;\n                else if (perms.includes(\"x\") && !(node.mode & 73)) return 2;\n                return 0;\n            },\n            mayLookup: (dir)=>{\n                var errCode = FS.nodePermissions(dir, \"x\");\n                if (errCode) return errCode;\n                if (!dir.node_ops.lookup) return 2;\n                return 0;\n            },\n            mayCreate: (dir, name)=>{\n                try {\n                    var node = FS.lookupNode(dir, name);\n                    return 20;\n                } catch (e) {}\n                return FS.nodePermissions(dir, \"wx\");\n            },\n            mayDelete: (dir, name, isdir)=>{\n                var node;\n                try {\n                    node = FS.lookupNode(dir, name);\n                } catch (e) {\n                    return e.errno;\n                }\n                var errCode = FS.nodePermissions(dir, \"wx\");\n                if (errCode) return errCode;\n                if (isdir) {\n                    if (!FS.isDir(node.mode)) return 54;\n                    if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) return 10;\n                } else {\n                    if (FS.isDir(node.mode)) return 31;\n                }\n                return 0;\n            },\n            mayOpen: (node, flags)=>{\n                if (!node) return 44;\n                if (FS.isLink(node.mode)) return 32;\n                else if (FS.isDir(node.mode)) {\n                    if (FS.flagsToPermissionString(flags) !== \"r\" || // opening for write\n                    flags & 512) return 31;\n                }\n                return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n            },\n            MAX_OPEN_FDS: 4096,\n            nextfd: (fd_start = 0, fd_end = FS.MAX_OPEN_FDS)=>{\n                for(var fd = fd_start; fd <= fd_end; fd++){\n                    if (!FS.streams[fd]) return fd;\n                }\n                throw new FS.ErrnoError(33);\n            },\n            getStream: (fd)=>FS.streams[fd],\n            createStream: (stream, fd_start, fd_end)=>{\n                if (!FS.FSStream) {\n                    FS.FSStream = /** @constructor */ function() {\n                        this.shared = {};\n                    };\n                    FS.FSStream.prototype = {};\n                    Object.defineProperties(FS.FSStream.prototype, {\n                        object: {\n                            /** @this {FS.FSStream} */ get: function() {\n                                return this.node;\n                            },\n                            /** @this {FS.FSStream} */ set: function(val) {\n                                this.node = val;\n                            }\n                        },\n                        isRead: {\n                            /** @this {FS.FSStream} */ get: function() {\n                                return (this.flags & 2097155) !== 1;\n                            }\n                        },\n                        isWrite: {\n                            /** @this {FS.FSStream} */ get: function() {\n                                return (this.flags & 2097155) !== 0;\n                            }\n                        },\n                        isAppend: {\n                            /** @this {FS.FSStream} */ get: function() {\n                                return this.flags & 1024;\n                            }\n                        },\n                        flags: {\n                            /** @this {FS.FSStream} */ get: function() {\n                                return this.shared.flags;\n                            },\n                            /** @this {FS.FSStream} */ set: function(val) {\n                                this.shared.flags = val;\n                            }\n                        },\n                        position: {\n                            /** @this {FS.FSStream} */ get: function() {\n                                return this.shared.position;\n                            },\n                            /** @this {FS.FSStream} */ set: function(val) {\n                                this.shared.position = val;\n                            }\n                        }\n                    });\n                }\n                // clone it, so we can return an instance of FSStream\n                stream = Object.assign(new FS.FSStream(), stream);\n                var fd = FS.nextfd(fd_start, fd_end);\n                stream.fd = fd;\n                FS.streams[fd] = stream;\n                return stream;\n            },\n            closeStream: (fd)=>{\n                FS.streams[fd] = null;\n            },\n            chrdev_stream_ops: {\n                open: (stream)=>{\n                    var device = FS.getDevice(stream.node.rdev);\n                    // override node's stream ops with the device's\n                    stream.stream_ops = device.stream_ops;\n                    // forward the open call\n                    if (stream.stream_ops.open) stream.stream_ops.open(stream);\n                },\n                llseek: ()=>{\n                    throw new FS.ErrnoError(70);\n                }\n            },\n            major: (dev)=>dev >> 8,\n            minor: (dev)=>dev & 0xff,\n            makedev: (ma, mi)=>ma << 8 | mi,\n            registerDevice: (dev, ops)=>{\n                FS.devices[dev] = {\n                    stream_ops: ops\n                };\n            },\n            getDevice: (dev)=>FS.devices[dev],\n            getMounts: (mount)=>{\n                var mounts = [];\n                var check = [\n                    mount\n                ];\n                while(check.length){\n                    var m = check.pop();\n                    mounts.push(m);\n                    check.push.apply(check, m.mounts);\n                }\n                return mounts;\n            },\n            syncfs: (populate, callback)=>{\n                if (typeof populate == \"function\") {\n                    callback = populate;\n                    populate = false;\n                }\n                FS.syncFSRequests++;\n                if (FS.syncFSRequests > 1) err(\"warning: \" + FS.syncFSRequests + \" FS.syncfs operations in flight at once, probably just doing extra work\");\n                var mounts = FS.getMounts(FS.root.mount);\n                var completed = 0;\n                function doCallback(errCode) {\n                    assert(FS.syncFSRequests > 0);\n                    FS.syncFSRequests--;\n                    return callback(errCode);\n                }\n                function done(errCode) {\n                    if (errCode) {\n                        if (!done.errored) {\n                            done.errored = true;\n                            return doCallback(errCode);\n                        }\n                        return;\n                    }\n                    if (++completed >= mounts.length) doCallback(null);\n                }\n                // sync all mounts\n                mounts.forEach((mount)=>{\n                    if (!mount.type.syncfs) return done(null);\n                    mount.type.syncfs(mount, populate, done);\n                });\n            },\n            mount: (type, opts, mountpoint)=>{\n                if (typeof type == \"string\") // The filesystem was not included, and instead we have an error\n                // message stored in the variable.\n                throw type;\n                var root = mountpoint === \"/\";\n                var pseudo = !mountpoint;\n                var node;\n                if (root && FS.root) throw new FS.ErrnoError(10);\n                else if (!root && !pseudo) {\n                    var lookup = FS.lookupPath(mountpoint, {\n                        follow_mount: false\n                    });\n                    mountpoint = lookup.path; // use the absolute path\n                    node = lookup.node;\n                    if (FS.isMountpoint(node)) throw new FS.ErrnoError(10);\n                    if (!FS.isDir(node.mode)) throw new FS.ErrnoError(54);\n                }\n                var mount = {\n                    type: type,\n                    opts: opts,\n                    mountpoint: mountpoint,\n                    mounts: []\n                };\n                // create a root node for the fs\n                var mountRoot = type.mount(mount);\n                mountRoot.mount = mount;\n                mount.root = mountRoot;\n                if (root) FS.root = mountRoot;\n                else if (node) {\n                    // set as a mountpoint\n                    node.mounted = mount;\n                    // add the new mount to the current mount's children\n                    if (node.mount) node.mount.mounts.push(mount);\n                }\n                return mountRoot;\n            },\n            unmount: (mountpoint)=>{\n                var lookup = FS.lookupPath(mountpoint, {\n                    follow_mount: false\n                });\n                if (!FS.isMountpoint(lookup.node)) throw new FS.ErrnoError(28);\n                // destroy the nodes for this mount, and all its child mounts\n                var node = lookup.node;\n                var mount = node.mounted;\n                var mounts = FS.getMounts(mount);\n                Object.keys(FS.nameTable).forEach((hash)=>{\n                    var current = FS.nameTable[hash];\n                    while(current){\n                        var next = current.name_next;\n                        if (mounts.includes(current.mount)) FS.destroyNode(current);\n                        current = next;\n                    }\n                });\n                // no longer a mountpoint\n                node.mounted = null;\n                // remove this mount from the child mounts\n                var idx = node.mount.mounts.indexOf(mount);\n                assert(idx !== -1);\n                node.mount.mounts.splice(idx, 1);\n            },\n            lookup: (parent, name)=>{\n                return parent.node_ops.lookup(parent, name);\n            },\n            mknod: (path, mode, dev)=>{\n                var lookup = FS.lookupPath(path, {\n                    parent: true\n                });\n                var parent = lookup.node;\n                var name = PATH.basename(path);\n                if (!name || name === \".\" || name === \"..\") throw new FS.ErrnoError(28);\n                var errCode = FS.mayCreate(parent, name);\n                if (errCode) throw new FS.ErrnoError(errCode);\n                if (!parent.node_ops.mknod) throw new FS.ErrnoError(63);\n                return parent.node_ops.mknod(parent, name, mode, dev);\n            },\n            create: (path, mode)=>{\n                mode = mode !== undefined ? mode : 438 /* 0666 */ ;\n                mode &= 4095;\n                mode |= 32768;\n                return FS.mknod(path, mode, 0);\n            },\n            mkdir: (path, mode)=>{\n                mode = mode !== undefined ? mode : 511 /* 0777 */ ;\n                mode &= 1023;\n                mode |= 16384;\n                return FS.mknod(path, mode, 0);\n            },\n            mkdirTree: (path, mode)=>{\n                var dirs = path.split(\"/\");\n                var d = \"\";\n                for(var i = 0; i < dirs.length; ++i){\n                    if (!dirs[i]) continue;\n                    d += \"/\" + dirs[i];\n                    try {\n                        FS.mkdir(d, mode);\n                    } catch (e) {\n                        if (e.errno != 20) throw e;\n                    }\n                }\n            },\n            mkdev: (path, mode, dev)=>{\n                if (typeof dev == \"undefined\") {\n                    dev = mode;\n                    mode = 438 /* 0666 */ ;\n                }\n                mode |= 8192;\n                return FS.mknod(path, mode, dev);\n            },\n            symlink: (oldpath, newpath)=>{\n                if (!PATH_FS.resolve(oldpath)) throw new FS.ErrnoError(44);\n                var lookup = FS.lookupPath(newpath, {\n                    parent: true\n                });\n                var parent = lookup.node;\n                if (!parent) throw new FS.ErrnoError(44);\n                var newname = PATH.basename(newpath);\n                var errCode = FS.mayCreate(parent, newname);\n                if (errCode) throw new FS.ErrnoError(errCode);\n                if (!parent.node_ops.symlink) throw new FS.ErrnoError(63);\n                return parent.node_ops.symlink(parent, newname, oldpath);\n            },\n            rename: (old_path, new_path)=>{\n                var old_dirname = PATH.dirname(old_path);\n                var new_dirname = PATH.dirname(new_path);\n                var old_name = PATH.basename(old_path);\n                var new_name = PATH.basename(new_path);\n                // parents must exist\n                var lookup, old_dir, new_dir;\n                // let the errors from non existant directories percolate up\n                lookup = FS.lookupPath(old_path, {\n                    parent: true\n                });\n                old_dir = lookup.node;\n                lookup = FS.lookupPath(new_path, {\n                    parent: true\n                });\n                new_dir = lookup.node;\n                if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n                // need to be part of the same mount\n                if (old_dir.mount !== new_dir.mount) throw new FS.ErrnoError(75);\n                // source must exist\n                var old_node = FS.lookupNode(old_dir, old_name);\n                // old path should not be an ancestor of the new path\n                var relative = PATH_FS.relative(old_path, new_dirname);\n                if (relative.charAt(0) !== \".\") throw new FS.ErrnoError(28);\n                // new path should not be an ancestor of the old path\n                relative = PATH_FS.relative(new_path, old_dirname);\n                if (relative.charAt(0) !== \".\") throw new FS.ErrnoError(55);\n                // see if the new path already exists\n                var new_node;\n                try {\n                    new_node = FS.lookupNode(new_dir, new_name);\n                } catch (e) {\n                // not fatal\n                }\n                // early out if nothing needs to change\n                if (old_node === new_node) return;\n                // we'll need to delete the old entry\n                var isdir = FS.isDir(old_node.mode);\n                var errCode = FS.mayDelete(old_dir, old_name, isdir);\n                if (errCode) throw new FS.ErrnoError(errCode);\n                // need delete permissions if we'll be overwriting.\n                // need create permissions if new doesn't already exist.\n                errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n                if (errCode) throw new FS.ErrnoError(errCode);\n                if (!old_dir.node_ops.rename) throw new FS.ErrnoError(63);\n                if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) throw new FS.ErrnoError(10);\n                // if we are going to change the parent, check write permissions\n                if (new_dir !== old_dir) {\n                    errCode = FS.nodePermissions(old_dir, \"w\");\n                    if (errCode) throw new FS.ErrnoError(errCode);\n                }\n                // remove the node from the lookup hash\n                FS.hashRemoveNode(old_node);\n                // do the underlying fs rename\n                try {\n                    old_dir.node_ops.rename(old_node, new_dir, new_name);\n                } catch (e) {\n                    throw e;\n                } finally{\n                    // add the node back to the hash (in case node_ops.rename\n                    // changed its name)\n                    FS.hashAddNode(old_node);\n                }\n            },\n            rmdir: (path)=>{\n                var lookup = FS.lookupPath(path, {\n                    parent: true\n                });\n                var parent = lookup.node;\n                var name = PATH.basename(path);\n                var node = FS.lookupNode(parent, name);\n                var errCode = FS.mayDelete(parent, name, true);\n                if (errCode) throw new FS.ErrnoError(errCode);\n                if (!parent.node_ops.rmdir) throw new FS.ErrnoError(63);\n                if (FS.isMountpoint(node)) throw new FS.ErrnoError(10);\n                parent.node_ops.rmdir(parent, name);\n                FS.destroyNode(node);\n            },\n            readdir: (path)=>{\n                var lookup = FS.lookupPath(path, {\n                    follow: true\n                });\n                var node = lookup.node;\n                if (!node.node_ops.readdir) throw new FS.ErrnoError(54);\n                return node.node_ops.readdir(node);\n            },\n            unlink: (path)=>{\n                var lookup = FS.lookupPath(path, {\n                    parent: true\n                });\n                var parent = lookup.node;\n                if (!parent) throw new FS.ErrnoError(44);\n                var name = PATH.basename(path);\n                var node = FS.lookupNode(parent, name);\n                var errCode = FS.mayDelete(parent, name, false);\n                if (errCode) // According to POSIX, we should map EISDIR to EPERM, but\n                // we instead do what Linux does (and we must, as we use\n                // the musl linux libc).\n                throw new FS.ErrnoError(errCode);\n                if (!parent.node_ops.unlink) throw new FS.ErrnoError(63);\n                if (FS.isMountpoint(node)) throw new FS.ErrnoError(10);\n                parent.node_ops.unlink(parent, name);\n                FS.destroyNode(node);\n            },\n            readlink: (path)=>{\n                var lookup = FS.lookupPath(path);\n                var link = lookup.node;\n                if (!link) throw new FS.ErrnoError(44);\n                if (!link.node_ops.readlink) throw new FS.ErrnoError(28);\n                return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n            },\n            stat: (path, dontFollow)=>{\n                var lookup = FS.lookupPath(path, {\n                    follow: !dontFollow\n                });\n                var node = lookup.node;\n                if (!node) throw new FS.ErrnoError(44);\n                if (!node.node_ops.getattr) throw new FS.ErrnoError(63);\n                return node.node_ops.getattr(node);\n            },\n            lstat: (path)=>{\n                return FS.stat(path, true);\n            },\n            chmod: (path, mode, dontFollow)=>{\n                var node;\n                if (typeof path == \"string\") {\n                    var lookup = FS.lookupPath(path, {\n                        follow: !dontFollow\n                    });\n                    node = lookup.node;\n                } else node = path;\n                if (!node.node_ops.setattr) throw new FS.ErrnoError(63);\n                node.node_ops.setattr(node, {\n                    mode: mode & 4095 | node.mode & -4096,\n                    timestamp: Date.now()\n                });\n            },\n            lchmod: (path, mode)=>{\n                FS.chmod(path, mode, true);\n            },\n            fchmod: (fd, mode)=>{\n                var stream = FS.getStream(fd);\n                if (!stream) throw new FS.ErrnoError(8);\n                FS.chmod(stream.node, mode);\n            },\n            chown: (path, uid, gid, dontFollow)=>{\n                var node;\n                if (typeof path == \"string\") {\n                    var lookup = FS.lookupPath(path, {\n                        follow: !dontFollow\n                    });\n                    node = lookup.node;\n                } else node = path;\n                if (!node.node_ops.setattr) throw new FS.ErrnoError(63);\n                node.node_ops.setattr(node, {\n                    timestamp: Date.now()\n                });\n            },\n            lchown: (path, uid, gid)=>{\n                FS.chown(path, uid, gid, true);\n            },\n            fchown: (fd, uid, gid)=>{\n                var stream = FS.getStream(fd);\n                if (!stream) throw new FS.ErrnoError(8);\n                FS.chown(stream.node, uid, gid);\n            },\n            truncate: (path, len)=>{\n                if (len < 0) throw new FS.ErrnoError(28);\n                var node;\n                if (typeof path == \"string\") {\n                    var lookup = FS.lookupPath(path, {\n                        follow: true\n                    });\n                    node = lookup.node;\n                } else node = path;\n                if (!node.node_ops.setattr) throw new FS.ErrnoError(63);\n                if (FS.isDir(node.mode)) throw new FS.ErrnoError(31);\n                if (!FS.isFile(node.mode)) throw new FS.ErrnoError(28);\n                var errCode = FS.nodePermissions(node, \"w\");\n                if (errCode) throw new FS.ErrnoError(errCode);\n                node.node_ops.setattr(node, {\n                    size: len,\n                    timestamp: Date.now()\n                });\n            },\n            ftruncate: (fd, len)=>{\n                var stream = FS.getStream(fd);\n                if (!stream) throw new FS.ErrnoError(8);\n                if ((stream.flags & 2097155) === 0) throw new FS.ErrnoError(28);\n                FS.truncate(stream.node, len);\n            },\n            utime: (path, atime, mtime)=>{\n                var lookup = FS.lookupPath(path, {\n                    follow: true\n                });\n                var node = lookup.node;\n                node.node_ops.setattr(node, {\n                    timestamp: Math.max(atime, mtime)\n                });\n            },\n            open: (path, flags, mode)=>{\n                if (path === \"\") throw new FS.ErrnoError(44);\n                flags = typeof flags == \"string\" ? FS.modeStringToFlags(flags) : flags;\n                mode = typeof mode == \"undefined\" ? 438 /* 0666 */  : mode;\n                if (flags & 64) mode = mode & 4095 | 32768;\n                else mode = 0;\n                var node;\n                if (typeof path == \"object\") node = path;\n                else {\n                    path = PATH.normalize(path);\n                    try {\n                        var lookup = FS.lookupPath(path, {\n                            follow: !(flags & 131072)\n                        });\n                        node = lookup.node;\n                    } catch (e) {\n                    // ignore\n                    }\n                }\n                // perhaps we need to create the node\n                var created = false;\n                if (flags & 64) {\n                    if (node) {\n                        // if O_CREAT and O_EXCL are set, error out if the node already exists\n                        if (flags & 128) throw new FS.ErrnoError(20);\n                    } else {\n                        // node doesn't exist, try to create it\n                        node = FS.mknod(path, mode, 0);\n                        created = true;\n                    }\n                }\n                if (!node) throw new FS.ErrnoError(44);\n                // can't truncate a device\n                if (FS.isChrdev(node.mode)) flags &= -513;\n                // if asked only for a directory, then this must be one\n                if (flags & 65536 && !FS.isDir(node.mode)) throw new FS.ErrnoError(54);\n                // check permissions, if this is not a file we just created now (it is ok to\n                // create and write to a file with read-only permissions; it is read-only\n                // for later use)\n                if (!created) {\n                    var errCode = FS.mayOpen(node, flags);\n                    if (errCode) throw new FS.ErrnoError(errCode);\n                }\n                // do truncation if necessary\n                if (flags & 512 && !created) FS.truncate(node, 0);\n                // we've already handled these, don't pass down to the underlying vfs\n                flags &= -131713;\n                // register the stream with the filesystem\n                var stream = FS.createStream({\n                    node: node,\n                    path: FS.getPath(node),\n                    flags: flags,\n                    seekable: true,\n                    position: 0,\n                    stream_ops: node.stream_ops,\n                    // used by the file family libc calls (fopen, fwrite, ferror, etc.)\n                    ungotten: [],\n                    error: false\n                });\n                // call the new stream's open function\n                if (stream.stream_ops.open) stream.stream_ops.open(stream);\n                if (Module[\"logReadFiles\"] && !(flags & 1)) {\n                    if (!FS.readFiles) FS.readFiles = {};\n                    if (!(path in FS.readFiles)) FS.readFiles[path] = 1;\n                }\n                return stream;\n            },\n            close: (stream)=>{\n                if (FS.isClosed(stream)) throw new FS.ErrnoError(8);\n                if (stream.getdents) stream.getdents = null; // free readdir state\n                try {\n                    if (stream.stream_ops.close) stream.stream_ops.close(stream);\n                } catch (e) {\n                    throw e;\n                } finally{\n                    FS.closeStream(stream.fd);\n                }\n                stream.fd = null;\n            },\n            isClosed: (stream)=>{\n                return stream.fd === null;\n            },\n            llseek: (stream, offset, whence)=>{\n                if (FS.isClosed(stream)) throw new FS.ErrnoError(8);\n                if (!stream.seekable || !stream.stream_ops.llseek) throw new FS.ErrnoError(70);\n                if (whence != 0 && whence != 1 && whence != 2) throw new FS.ErrnoError(28);\n                stream.position = stream.stream_ops.llseek(stream, offset, whence);\n                stream.ungotten = [];\n                return stream.position;\n            },\n            read: (stream, buffer, offset, length, position)=>{\n                if (length < 0 || position < 0) throw new FS.ErrnoError(28);\n                if (FS.isClosed(stream)) throw new FS.ErrnoError(8);\n                if ((stream.flags & 2097155) === 1) throw new FS.ErrnoError(8);\n                if (FS.isDir(stream.node.mode)) throw new FS.ErrnoError(31);\n                if (!stream.stream_ops.read) throw new FS.ErrnoError(28);\n                var seeking = typeof position != \"undefined\";\n                if (!seeking) position = stream.position;\n                else if (!stream.seekable) throw new FS.ErrnoError(70);\n                var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n                if (!seeking) stream.position += bytesRead;\n                return bytesRead;\n            },\n            write: (stream, buffer, offset, length, position, canOwn)=>{\n                if (length < 0 || position < 0) throw new FS.ErrnoError(28);\n                if (FS.isClosed(stream)) throw new FS.ErrnoError(8);\n                if ((stream.flags & 2097155) === 0) throw new FS.ErrnoError(8);\n                if (FS.isDir(stream.node.mode)) throw new FS.ErrnoError(31);\n                if (!stream.stream_ops.write) throw new FS.ErrnoError(28);\n                if (stream.seekable && stream.flags & 1024) // seek to the end before writing in append mode\n                FS.llseek(stream, 0, 2);\n                var seeking = typeof position != \"undefined\";\n                if (!seeking) position = stream.position;\n                else if (!stream.seekable) throw new FS.ErrnoError(70);\n                var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n                if (!seeking) stream.position += bytesWritten;\n                return bytesWritten;\n            },\n            allocate: (stream, offset, length)=>{\n                if (FS.isClosed(stream)) throw new FS.ErrnoError(8);\n                if (offset < 0 || length <= 0) throw new FS.ErrnoError(28);\n                if ((stream.flags & 2097155) === 0) throw new FS.ErrnoError(8);\n                if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) throw new FS.ErrnoError(43);\n                if (!stream.stream_ops.allocate) throw new FS.ErrnoError(138);\n                stream.stream_ops.allocate(stream, offset, length);\n            },\n            mmap: (stream, length, position, prot, flags)=>{\n                // User requests writing to file (prot & PROT_WRITE != 0).\n                // Checking if we have permissions to write to the file unless\n                // MAP_PRIVATE flag is set. According to POSIX spec it is possible\n                // to write to file opened in read-only mode with MAP_PRIVATE flag,\n                // as all modifications will be visible only in the memory of\n                // the current process.\n                if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) throw new FS.ErrnoError(2);\n                if ((stream.flags & 2097155) === 1) throw new FS.ErrnoError(2);\n                if (!stream.stream_ops.mmap) throw new FS.ErrnoError(43);\n                return stream.stream_ops.mmap(stream, length, position, prot, flags);\n            },\n            msync: (stream, buffer, offset, length, mmapFlags)=>{\n                if (!stream.stream_ops.msync) return 0;\n                return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n            },\n            munmap: (stream)=>0,\n            ioctl: (stream, cmd, arg)=>{\n                if (!stream.stream_ops.ioctl) throw new FS.ErrnoError(59);\n                return stream.stream_ops.ioctl(stream, cmd, arg);\n            },\n            readFile: (path, opts = {})=>{\n                opts.flags = opts.flags || 0;\n                opts.encoding = opts.encoding || \"binary\";\n                if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n                var ret;\n                var stream = FS.open(path, opts.flags);\n                var stat = FS.stat(path);\n                var length = stat.size;\n                var buf = new Uint8Array(length);\n                FS.read(stream, buf, 0, length, 0);\n                if (opts.encoding === \"utf8\") ret = UTF8ArrayToString(buf, 0);\n                else if (opts.encoding === \"binary\") ret = buf;\n                FS.close(stream);\n                return ret;\n            },\n            writeFile: (path, data, opts = {})=>{\n                opts.flags = opts.flags || 577;\n                var stream = FS.open(path, opts.flags, opts.mode);\n                if (typeof data == \"string\") {\n                    var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n                    var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n                    FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n                } else if (ArrayBuffer.isView(data)) FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n                else throw new Error(\"Unsupported data type\");\n                FS.close(stream);\n            },\n            cwd: ()=>FS.currentPath,\n            chdir: (path)=>{\n                var lookup = FS.lookupPath(path, {\n                    follow: true\n                });\n                if (lookup.node === null) throw new FS.ErrnoError(44);\n                if (!FS.isDir(lookup.node.mode)) throw new FS.ErrnoError(54);\n                var errCode = FS.nodePermissions(lookup.node, \"x\");\n                if (errCode) throw new FS.ErrnoError(errCode);\n                FS.currentPath = lookup.path;\n            },\n            createDefaultDirectories: ()=>{\n                FS.mkdir(\"/tmp\");\n                FS.mkdir(\"/home\");\n                FS.mkdir(\"/home/web_user\");\n            },\n            createDefaultDevices: ()=>{\n                // create /dev\n                FS.mkdir(\"/dev\");\n                // setup /dev/null\n                FS.registerDevice(FS.makedev(1, 3), {\n                    read: ()=>0,\n                    write: (stream, buffer, offset, length, pos)=>length\n                });\n                FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n                // setup /dev/tty and /dev/tty1\n                // stderr needs to print output using err() rather than out()\n                // so we register a second tty just for it.\n                TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n                TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n                FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n                FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n                // setup /dev/[u]random\n                // use a buffer to avoid overhead of individual crypto calls per byte\n                var randomBuffer = new Uint8Array(1024), randomLeft = 0;\n                var randomByte = ()=>{\n                    if (randomLeft === 0) randomLeft = randomFill(randomBuffer).byteLength;\n                    return randomBuffer[--randomLeft];\n                };\n                FS.createDevice(\"/dev\", \"random\", randomByte);\n                FS.createDevice(\"/dev\", \"urandom\", randomByte);\n                // we're not going to emulate the actual shm device,\n                // just create the tmp dirs that reside in it commonly\n                FS.mkdir(\"/dev/shm\");\n                FS.mkdir(\"/dev/shm/tmp\");\n            },\n            createSpecialDirectories: ()=>{\n                // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the\n                // name of the stream for fd 6 (see test_unistd_ttyname)\n                FS.mkdir(\"/proc\");\n                var proc_self = FS.mkdir(\"/proc/self\");\n                FS.mkdir(\"/proc/self/fd\");\n                FS.mount({\n                    mount: ()=>{\n                        var node = FS.createNode(proc_self, \"fd\", 16895 /* 0777 */ , 73);\n                        node.node_ops = {\n                            lookup: (parent, name)=>{\n                                var fd = +name;\n                                var stream = FS.getStream(fd);\n                                if (!stream) throw new FS.ErrnoError(8);\n                                var ret = {\n                                    parent: null,\n                                    mount: {\n                                        mountpoint: \"fake\"\n                                    },\n                                    node_ops: {\n                                        readlink: ()=>stream.path\n                                    }\n                                };\n                                ret.parent = ret; // make it look like a simple root node\n                                return ret;\n                            }\n                        };\n                        return node;\n                    }\n                }, {}, \"/proc/self/fd\");\n            },\n            createStandardStreams: ()=>{\n                // TODO deprecate the old functionality of a single\n                // input / output callback and that utilizes FS.createDevice\n                // and instead require a unique set of stream ops\n                // by default, we symlink the standard streams to the\n                // default tty devices. however, if the standard streams\n                // have been overwritten we create a unique device for\n                // them instead.\n                if (Module[\"stdin\"]) FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\n                else FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n                if (Module[\"stdout\"]) FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\n                else FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n                if (Module[\"stderr\"]) FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\n                else FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n                // open default streams for the stdin, stdout and stderr devices\n                var stdin = FS.open(\"/dev/stdin\", 0);\n                var stdout = FS.open(\"/dev/stdout\", 1);\n                var stderr = FS.open(\"/dev/stderr\", 1);\n                assert(stdin.fd === 0, \"invalid handle for stdin (\" + stdin.fd + \")\");\n                assert(stdout.fd === 1, \"invalid handle for stdout (\" + stdout.fd + \")\");\n                assert(stderr.fd === 2, \"invalid handle for stderr (\" + stderr.fd + \")\");\n            },\n            ensureErrnoError: ()=>{\n                if (FS.ErrnoError) return;\n                FS.ErrnoError = /** @this{Object} */ function ErrnoError(errno, node) {\n                    // We set the `name` property to be able to identify `FS.ErrnoError`\n                    // - the `name` is a standard ECMA-262 property of error objects. Kind of good to have it anyway.\n                    // - when using PROXYFS, an error can come from an underlying FS\n                    // as different FS objects have their own FS.ErrnoError each,\n                    // the test `err instanceof FS.ErrnoError` won't detect an error coming from another filesystem, causing bugs.\n                    // we'll use the reliable test `err.name == \"ErrnoError\"` instead\n                    this.name = \"ErrnoError\";\n                    this.node = node;\n                    this.setErrno = /** @this{Object} */ function(errno) {\n                        this.errno = errno;\n                        for(var key in ERRNO_CODES)if (ERRNO_CODES[key] === errno) {\n                            this.code = key;\n                            break;\n                        }\n                    };\n                    this.setErrno(errno);\n                    this.message = ERRNO_MESSAGES[errno];\n                    // Try to get a maximally helpful stack trace. On Node.js, getting Error.stack\n                    // now ensures it shows what we want.\n                    if (this.stack) {\n                        // Define the stack property for Node.js 4, which otherwise errors on the next line.\n                        Object.defineProperty(this, \"stack\", {\n                            value: (new Error).stack,\n                            writable: true\n                        });\n                        this.stack = demangleAll(this.stack);\n                    }\n                };\n                FS.ErrnoError.prototype = new Error();\n                FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n                // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)\n                [\n                    44\n                ].forEach((code)=>{\n                    FS.genericErrors[code] = new FS.ErrnoError(code);\n                    FS.genericErrors[code].stack = \"<generic error, no stack>\";\n                });\n            },\n            staticInit: ()=>{\n                FS.ensureErrnoError();\n                FS.nameTable = new Array(4096);\n                FS.mount(MEMFS, {}, \"/\");\n                FS.createDefaultDirectories();\n                FS.createDefaultDevices();\n                FS.createSpecialDirectories();\n                FS.filesystems = {\n                    \"MEMFS\": MEMFS\n                };\n            },\n            init: (input, output, error)=>{\n                assert(!FS.init.initialized, \"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)\");\n                FS.init.initialized = true;\n                FS.ensureErrnoError();\n                // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here\n                Module[\"stdin\"] = input || Module[\"stdin\"];\n                Module[\"stdout\"] = output || Module[\"stdout\"];\n                Module[\"stderr\"] = error || Module[\"stderr\"];\n                FS.createStandardStreams();\n            },\n            quit: ()=>{\n                FS.init.initialized = false;\n                // force-flush all streams, so we get musl std streams printed out\n                _fflush(0);\n                // close all of our streams\n                for(var i = 0; i < FS.streams.length; i++){\n                    var stream = FS.streams[i];\n                    if (!stream) continue;\n                    FS.close(stream);\n                }\n            },\n            getMode: (canRead, canWrite)=>{\n                var mode = 0;\n                if (canRead) mode |= 365;\n                if (canWrite) mode |= 146;\n                return mode;\n            },\n            findObject: (path, dontResolveLastLink)=>{\n                var ret = FS.analyzePath(path, dontResolveLastLink);\n                if (!ret.exists) return null;\n                return ret.object;\n            },\n            analyzePath: (path, dontResolveLastLink)=>{\n                // operate from within the context of the symlink's target\n                try {\n                    var lookup = FS.lookupPath(path, {\n                        follow: !dontResolveLastLink\n                    });\n                    path = lookup.path;\n                } catch (e) {}\n                var ret = {\n                    isRoot: false,\n                    exists: false,\n                    error: 0,\n                    name: null,\n                    path: null,\n                    object: null,\n                    parentExists: false,\n                    parentPath: null,\n                    parentObject: null\n                };\n                try {\n                    var lookup = FS.lookupPath(path, {\n                        parent: true\n                    });\n                    ret.parentExists = true;\n                    ret.parentPath = lookup.path;\n                    ret.parentObject = lookup.node;\n                    ret.name = PATH.basename(path);\n                    lookup = FS.lookupPath(path, {\n                        follow: !dontResolveLastLink\n                    });\n                    ret.exists = true;\n                    ret.path = lookup.path;\n                    ret.object = lookup.node;\n                    ret.name = lookup.node.name;\n                    ret.isRoot = lookup.path === \"/\";\n                } catch (e) {\n                    ret.error = e.errno;\n                }\n                return ret;\n            },\n            createPath: (parent, path, canRead, canWrite)=>{\n                parent = typeof parent == \"string\" ? parent : FS.getPath(parent);\n                var parts = path.split(\"/\").reverse();\n                while(parts.length){\n                    var part = parts.pop();\n                    if (!part) continue;\n                    var current = PATH.join2(parent, part);\n                    try {\n                        FS.mkdir(current);\n                    } catch (e) {\n                    // ignore EEXIST\n                    }\n                    parent = current;\n                }\n                return current;\n            },\n            createFile: (parent, name, properties, canRead, canWrite)=>{\n                var path = PATH.join2(typeof parent == \"string\" ? parent : FS.getPath(parent), name);\n                var mode = FS.getMode(canRead, canWrite);\n                return FS.create(path, mode);\n            },\n            createDataFile: (parent, name, data, canRead, canWrite, canOwn)=>{\n                var path = name;\n                if (parent) {\n                    parent = typeof parent == \"string\" ? parent : FS.getPath(parent);\n                    path = name ? PATH.join2(parent, name) : parent;\n                }\n                var mode = FS.getMode(canRead, canWrite);\n                var node = FS.create(path, mode);\n                if (data) {\n                    if (typeof data == \"string\") {\n                        var arr = new Array(data.length);\n                        for(var i = 0, len = data.length; i < len; ++i)arr[i] = data.charCodeAt(i);\n                        data = arr;\n                    }\n                    // make sure we can write to the file\n                    FS.chmod(node, mode | 146);\n                    var stream = FS.open(node, 577);\n                    FS.write(stream, data, 0, data.length, 0, canOwn);\n                    FS.close(stream);\n                    FS.chmod(node, mode);\n                }\n                return node;\n            },\n            createDevice: (parent, name, input, output)=>{\n                var path = PATH.join2(typeof parent == \"string\" ? parent : FS.getPath(parent), name);\n                var mode = FS.getMode(!!input, !!output);\n                if (!FS.createDevice.major) FS.createDevice.major = 64;\n                var dev = FS.makedev(FS.createDevice.major++, 0);\n                // Create a fake device that a set of stream ops to emulate\n                // the old behavior.\n                FS.registerDevice(dev, {\n                    open: (stream)=>{\n                        stream.seekable = false;\n                    },\n                    close: (stream)=>{\n                        // flush any pending line data\n                        if (output && output.buffer && output.buffer.length) output(10);\n                    },\n                    read: (stream, buffer, offset, length, pos /* ignored */ )=>{\n                        var bytesRead = 0;\n                        for(var i = 0; i < length; i++){\n                            var result;\n                            try {\n                                result = input();\n                            } catch (e) {\n                                throw new FS.ErrnoError(29);\n                            }\n                            if (result === undefined && bytesRead === 0) throw new FS.ErrnoError(6);\n                            if (result === null || result === undefined) break;\n                            bytesRead++;\n                            buffer[offset + i] = result;\n                        }\n                        if (bytesRead) stream.node.timestamp = Date.now();\n                        return bytesRead;\n                    },\n                    write: (stream, buffer, offset, length, pos)=>{\n                        for(var i = 0; i < length; i++)try {\n                            output(buffer[offset + i]);\n                        } catch (e) {\n                            throw new FS.ErrnoError(29);\n                        }\n                        if (length) stream.node.timestamp = Date.now();\n                        return i;\n                    }\n                });\n                return FS.mkdev(path, mode, dev);\n            },\n            forceLoadFile: (obj)=>{\n                if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\n                if (typeof XMLHttpRequest != \"undefined\") throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n                else if (read_) // Command-line.\n                try {\n                    // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as\n                    //          read() will try to parse UTF8.\n                    obj.contents = intArrayFromString(read_(obj.url), true);\n                    obj.usedBytes = obj.contents.length;\n                } catch (e) {\n                    throw new FS.ErrnoError(29);\n                }\n                else throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\n            },\n            createLazyFile: (parent, name, url, canRead, canWrite)=>{\n                // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.\n                /** @constructor */ function LazyUint8Array() {\n                    this.lengthKnown = false;\n                    this.chunks = []; // Loaded chunks. Index is the chunk number\n                }\n                LazyUint8Array.prototype.get = /** @this{Object} */ function LazyUint8Array_get(idx) {\n                    if (idx > this.length - 1 || idx < 0) return undefined;\n                    var chunkOffset = idx % this.chunkSize;\n                    var chunkNum = idx / this.chunkSize | 0;\n                    return this.getter(chunkNum)[chunkOffset];\n                };\n                LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n                    this.getter = getter;\n                };\n                LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n                    // Find length\n                    var xhr = new XMLHttpRequest();\n                    xhr.open(\"HEAD\", url, false);\n                    xhr.send(null);\n                    if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n                    var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n                    var header;\n                    var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n                    var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n                    var chunkSize = 1048576; // Chunk size in bytes\n                    if (!hasByteServing) chunkSize = datalength;\n                    // Function to get a range from the remote URL.\n                    var doXHR = (from, to)=>{\n                        if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n                        if (to > datalength - 1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n                        // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.\n                        var xhr = new XMLHttpRequest();\n                        xhr.open(\"GET\", url, false);\n                        if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n                        // Some hints to the browser that we want binary data.\n                        xhr.responseType = \"arraybuffer\";\n                        if (xhr.overrideMimeType) xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\n                        xhr.send(null);\n                        if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n                        if (xhr.response !== undefined) return new Uint8Array(/** @type{Array<number>} */ xhr.response || []);\n                        return intArrayFromString(xhr.responseText || \"\", true);\n                    };\n                    var lazyArray = this;\n                    lazyArray.setDataGetter((chunkNum)=>{\n                        var start = chunkNum * chunkSize;\n                        var end = (chunkNum + 1) * chunkSize - 1; // including this byte\n                        end = Math.min(end, datalength - 1); // if datalength-1 is selected, this is the last block\n                        if (typeof lazyArray.chunks[chunkNum] == \"undefined\") lazyArray.chunks[chunkNum] = doXHR(start, end);\n                        if (typeof lazyArray.chunks[chunkNum] == \"undefined\") throw new Error(\"doXHR failed!\");\n                        return lazyArray.chunks[chunkNum];\n                    });\n                    if (usesGzip || !datalength) {\n                        // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length\n                        chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file\n                        datalength = this.getter(0).length;\n                        chunkSize = datalength;\n                        out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n                    }\n                    this._length = datalength;\n                    this._chunkSize = chunkSize;\n                    this.lengthKnown = true;\n                };\n                if (typeof XMLHttpRequest != \"undefined\") {\n                    if (!ENVIRONMENT_IS_WORKER) throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n                    var lazyArray = new LazyUint8Array();\n                    Object.defineProperties(lazyArray, {\n                        length: {\n                            get: /** @this{Object} */ function() {\n                                if (!this.lengthKnown) this.cacheLength();\n                                return this._length;\n                            }\n                        },\n                        chunkSize: {\n                            get: /** @this{Object} */ function() {\n                                if (!this.lengthKnown) this.cacheLength();\n                                return this._chunkSize;\n                            }\n                        }\n                    });\n                    var properties = {\n                        isDevice: false,\n                        contents: lazyArray\n                    };\n                } else var properties = {\n                    isDevice: false,\n                    url: url\n                };\n                var node = FS.createFile(parent, name, properties, canRead, canWrite);\n                // This is a total hack, but I want to get this lazy file code out of the\n                // core of MEMFS. If we want to keep this lazy file concept I feel it should\n                // be its own thin LAZYFS proxying calls to MEMFS.\n                if (properties.contents) node.contents = properties.contents;\n                else if (properties.url) {\n                    node.contents = null;\n                    node.url = properties.url;\n                }\n                // Add a function that defers querying the file size until it is asked the first time.\n                Object.defineProperties(node, {\n                    usedBytes: {\n                        get: /** @this {FSNode} */ function() {\n                            return this.contents.length;\n                        }\n                    }\n                });\n                // override each stream op with one that tries to force load the lazy file first\n                var stream_ops = {};\n                var keys = Object.keys(node.stream_ops);\n                keys.forEach((key)=>{\n                    var fn = node.stream_ops[key];\n                    stream_ops[key] = function forceLoadLazyFile() {\n                        FS.forceLoadFile(node);\n                        return fn.apply(null, arguments);\n                    };\n                });\n                function writeChunks(stream, buffer, offset, length, position) {\n                    var contents = stream.node.contents;\n                    if (position >= contents.length) return 0;\n                    var size = Math.min(contents.length - position, length);\n                    assert(size >= 0);\n                    if (contents.slice) for(var i = 0; i < size; i++)buffer[offset + i] = contents[position + i];\n                    else for(var i = 0; i < size; i++)buffer[offset + i] = contents.get(position + i);\n                    return size;\n                }\n                // use a custom read function\n                stream_ops.read = (stream, buffer, offset, length, position)=>{\n                    FS.forceLoadFile(node);\n                    return writeChunks(stream, buffer, offset, length, position);\n                };\n                // use a custom mmap function\n                stream_ops.mmap = (stream, length, position, prot, flags)=>{\n                    FS.forceLoadFile(node);\n                    var ptr = mmapAlloc(length);\n                    if (!ptr) throw new FS.ErrnoError(48);\n                    writeChunks(stream, HEAP8, ptr, length, position);\n                    return {\n                        ptr: ptr,\n                        allocated: true\n                    };\n                };\n                node.stream_ops = stream_ops;\n                return node;\n            },\n            createPreloadedFile: (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish)=>{\n                // TODO we should allow people to just pass in a complete filename instead\n                // of parent and name being that we just join them anyways\n                var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n                var dep = getUniqueRunDependency(\"cp \" + fullname); // might have several active requests for the same fullname\n                function processData(byteArray) {\n                    function finish(byteArray) {\n                        if (preFinish) preFinish();\n                        if (!dontCreateFile) FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n                        if (onload) onload();\n                        removeRunDependency(dep);\n                    }\n                    if (Browser.handledByPreloadPlugin(byteArray, fullname, finish, ()=>{\n                        if (onerror) onerror();\n                        removeRunDependency(dep);\n                    })) return;\n                    finish(byteArray);\n                }\n                addRunDependency(dep);\n                if (typeof url == \"string\") asyncLoad(url, (byteArray)=>processData(byteArray), onerror);\n                else processData(url);\n            },\n            absolutePath: ()=>{\n                abort(\"FS.absolutePath has been removed; use PATH_FS.resolve instead\");\n            },\n            createFolder: ()=>{\n                abort(\"FS.createFolder has been removed; use FS.mkdir instead\");\n            },\n            createLink: ()=>{\n                abort(\"FS.createLink has been removed; use FS.symlink instead\");\n            },\n            joinPath: ()=>{\n                abort(\"FS.joinPath has been removed; use PATH.join instead\");\n            },\n            mmapAlloc: ()=>{\n                abort(\"FS.mmapAlloc has been replaced by the top level function mmapAlloc\");\n            },\n            standardizePath: ()=>{\n                abort(\"FS.standardizePath has been removed; use PATH.normalize instead\");\n            }\n        };\n        var SYSCALLS = {\n            DEFAULT_POLLMASK: 5,\n            calculateAt: function(dirfd, path, allowEmpty) {\n                if (PATH.isAbs(path)) return path;\n                // relative path\n                var dir;\n                if (dirfd === -100) dir = FS.cwd();\n                else {\n                    var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n                    dir = dirstream.path;\n                }\n                if (path.length == 0) {\n                    if (!allowEmpty) throw new FS.ErrnoError(44);\n                    return dir;\n                }\n                return PATH.join2(dir, path);\n            },\n            doStat: function(func, path, buf) {\n                try {\n                    var stat = func(path);\n                } catch (e) {\n                    if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) // an error occurred while trying to look up the path; we should just report ENOTDIR\n                    return -54;\n                    throw e;\n                }\n                HEAP32[buf >> 2] = stat.dev;\n                HEAP32[buf + 8 >> 2] = stat.ino;\n                HEAP32[buf + 12 >> 2] = stat.mode;\n                HEAPU32[buf + 16 >> 2] = stat.nlink;\n                HEAP32[buf + 20 >> 2] = stat.uid;\n                HEAP32[buf + 24 >> 2] = stat.gid;\n                HEAP32[buf + 28 >> 2] = stat.rdev;\n                tempI64 = [\n                    stat.size >>> 0,\n                    (tempDouble = stat.size, +Math.abs(tempDouble) >= 1.0 ? tempDouble > 0.0 ? (Math.min(+Math.floor(tempDouble / 4294967296.0), 4294967295.0) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0) >>> 0 : 0)\n                ], HEAP32[buf + 40 >> 2] = tempI64[0], HEAP32[buf + 44 >> 2] = tempI64[1];\n                HEAP32[buf + 48 >> 2] = 4096;\n                HEAP32[buf + 52 >> 2] = stat.blocks;\n                var atime = stat.atime.getTime();\n                var mtime = stat.mtime.getTime();\n                var ctime = stat.ctime.getTime();\n                tempI64 = [\n                    Math.floor(atime / 1000) >>> 0,\n                    (tempDouble = Math.floor(atime / 1000), +Math.abs(tempDouble) >= 1.0 ? tempDouble > 0.0 ? (Math.min(+Math.floor(tempDouble / 4294967296.0), 4294967295.0) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0) >>> 0 : 0)\n                ], HEAP32[buf + 56 >> 2] = tempI64[0], HEAP32[buf + 60 >> 2] = tempI64[1];\n                HEAPU32[buf + 64 >> 2] = atime % 1000 * 1000;\n                tempI64 = [\n                    Math.floor(mtime / 1000) >>> 0,\n                    (tempDouble = Math.floor(mtime / 1000), +Math.abs(tempDouble) >= 1.0 ? tempDouble > 0.0 ? (Math.min(+Math.floor(tempDouble / 4294967296.0), 4294967295.0) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0) >>> 0 : 0)\n                ], HEAP32[buf + 72 >> 2] = tempI64[0], HEAP32[buf + 76 >> 2] = tempI64[1];\n                HEAPU32[buf + 80 >> 2] = mtime % 1000 * 1000;\n                tempI64 = [\n                    Math.floor(ctime / 1000) >>> 0,\n                    (tempDouble = Math.floor(ctime / 1000), +Math.abs(tempDouble) >= 1.0 ? tempDouble > 0.0 ? (Math.min(+Math.floor(tempDouble / 4294967296.0), 4294967295.0) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0) >>> 0 : 0)\n                ], HEAP32[buf + 88 >> 2] = tempI64[0], HEAP32[buf + 92 >> 2] = tempI64[1];\n                HEAPU32[buf + 96 >> 2] = ctime % 1000 * 1000;\n                tempI64 = [\n                    stat.ino >>> 0,\n                    (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1.0 ? tempDouble > 0.0 ? (Math.min(+Math.floor(tempDouble / 4294967296.0), 4294967295.0) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0) >>> 0 : 0)\n                ], HEAP32[buf + 104 >> 2] = tempI64[0], HEAP32[buf + 108 >> 2] = tempI64[1];\n                return 0;\n            },\n            doMsync: function(addr, stream, len, flags, offset) {\n                if (!FS.isFile(stream.node.mode)) throw new FS.ErrnoError(43);\n                if (flags & 2) // MAP_PRIVATE calls need not to be synced back to underlying fs\n                return 0;\n                var buffer = HEAPU8.slice(addr, addr + len);\n                FS.msync(stream, buffer, offset, len, flags);\n            },\n            varargs: undefined,\n            get: function() {\n                assert(SYSCALLS.varargs != undefined);\n                SYSCALLS.varargs += 4;\n                var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\n                return ret;\n            },\n            getStr: function(ptr) {\n                var ret = UTF8ToString(ptr);\n                return ret;\n            },\n            getStreamFromFD: function(fd) {\n                var stream = FS.getStream(fd);\n                if (!stream) throw new FS.ErrnoError(8);\n                return stream;\n            }\n        };\n        function _proc_exit(code) {\n            if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(1, 1, code);\n            EXITSTATUS = code;\n            if (!keepRuntimeAlive()) {\n                PThread.terminateAllThreads();\n                if (Module[\"onExit\"]) Module[\"onExit\"](code);\n                ABORT = true;\n            }\n            quit_(code, new ExitStatus(code));\n        }\n        /** @suppress {duplicate } */ /** @param {boolean|number=} implicit */ function exitJS(status, implicit) {\n            EXITSTATUS = status;\n            checkUnflushedContent();\n            if (ENVIRONMENT_IS_PTHREAD) {\n                // implict exit can never happen on a pthread\n                assert(!implicit);\n                // When running in a pthread we propagate the exit back to the main thread\n                // where it can decide if the whole process should be shut down or not.\n                // The pthread may have decided not to exit its own runtime, for example\n                // because it runs a main loop, but that doesn't affect the main thread.\n                exitOnMainThread(status);\n                throw \"unwind\";\n            }\n            // if exit() was called explicitly, warn the user if the runtime isn't actually being shut down\n            if (keepRuntimeAlive() && !implicit) {\n                var msg = \"program exited (with status: \" + status + \"), but keepRuntimeAlive() is set (counter=\" + runtimeKeepaliveCounter + \") due to an async operation, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)\";\n                readyPromiseReject(msg);\n                err(msg);\n            }\n            _proc_exit(status);\n        }\n        var _exit = exitJS;\n        function ptrToString(ptr) {\n            assert(typeof ptr === \"number\");\n            return \"0x\" + ptr.toString(16).padStart(8, \"0\");\n        }\n        function handleException(e) {\n            // Certain exception types we do not treat as errors since they are used for\n            // internal control flow.\n            // 1. ExitStatus, which is thrown by exit()\n            // 2. \"unwind\", which is thrown by emscripten_unwind_to_js_event_loop() and others\n            //    that wish to return to JS event loop.\n            if (e instanceof ExitStatus || e == \"unwind\") return EXITSTATUS;\n            checkStackCookie();\n            if (e instanceof WebAssembly.RuntimeError) {\n                if (_emscripten_stack_get_current() <= 0) err(\"Stack overflow detected.  You can try increasing -sSTACK_SIZE (currently set to 65536)\");\n            }\n            quit_(1, e);\n        }\n        var PThread = {\n            unusedWorkers: [],\n            runningWorkers: [],\n            tlsInitFunctions: [],\n            pthreads: {},\n            nextWorkerID: 1,\n            debugInit: function() {\n                function pthreadLogPrefix() {\n                    var t = 0;\n                    if (runtimeInitialized && typeof _pthread_self != \"undefined\") t = _pthread_self();\n                    return \"w:\" + (Module[\"workerID\"] || 0) + \",t:\" + ptrToString(t) + \": \";\n                }\n                // Prefix all err()/dbg() messages with the calling thread ID.\n                var origDbg = dbg;\n                dbg = (message)=>origDbg(pthreadLogPrefix() + message);\n            },\n            init: function() {\n                PThread.debugInit();\n                if (ENVIRONMENT_IS_PTHREAD) PThread.initWorker();\n                else PThread.initMainThread();\n            },\n            initMainThread: function() {\n                var pthreadPoolSize = navigator.hardwareConcurrency;\n                // Start loading up the Worker pool, if requested.\n                while(pthreadPoolSize--)PThread.allocateUnusedWorker();\n            },\n            initWorker: function() {\n                // The default behaviour for pthreads is always to exit once they return\n                // from their entry point (or call pthread_exit).  If we set noExitRuntime\n                // to true here on pthreads they would never complete and attempt to\n                // pthread_join to them would block forever.\n                // pthreads can still choose to set `noExitRuntime` explicitly, or\n                // call emscripten_unwind_to_js_event_loop to extend their lifetime beyond\n                // their main function.  See comment in src/worker.js for more.\n                noExitRuntime = false;\n            },\n            setExitStatus: function(status) {\n                EXITSTATUS = status;\n            },\n            terminateAllThreads__deps: [\n                \"$terminateWorker\"\n            ],\n            terminateAllThreads: function() {\n                assert(!ENVIRONMENT_IS_PTHREAD, \"Internal Error! terminateAllThreads() can only ever be called from main application thread!\");\n                // Attempt to kill all workers.  Sadly (at least on the web) there is no\n                // way to terminate a worker synchronously, or to be notified when a\n                // worker in actually terminated.  This means there is some risk that\n                // pthreads will continue to be executing after `worker.terminate` has\n                // returned.  For this reason, we don't call `returnWorkerToPool` here or\n                // free the underlying pthread data structures.\n                for (var worker of PThread.runningWorkers)terminateWorker(worker);\n                for (var worker of PThread.unusedWorkers)terminateWorker(worker);\n                PThread.unusedWorkers = [];\n                PThread.runningWorkers = [];\n                PThread.pthreads = [];\n            },\n            returnWorkerToPool: function(worker) {\n                // We don't want to run main thread queued calls here, since we are doing\n                // some operations that leave the worker queue in an invalid state until\n                // we are completely done (it would be bad if free() ends up calling a\n                // queued pthread_create which looks at the global data structures we are\n                // modifying). To achieve that, defer the free() til the very end, when\n                // we are all done.\n                var pthread_ptr = worker.pthread_ptr;\n                delete PThread.pthreads[pthread_ptr];\n                // Note: worker is intentionally not terminated so the pool can\n                // dynamically grow.\n                PThread.unusedWorkers.push(worker);\n                PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker), 1);\n                // Not a running Worker anymore\n                // Detach the worker from the pthread object, and return it to the\n                // worker pool as an unused worker.\n                worker.pthread_ptr = 0;\n                // Finally, free the underlying (and now-unused) pthread structure in\n                // linear memory.\n                __emscripten_thread_free_data(pthread_ptr);\n            },\n            receiveObjectTransfer: function(data) {},\n            threadInitTLS: function() {\n                // Call thread init functions (these are the _emscripten_tls_init for each\n                // module loaded.\n                PThread.tlsInitFunctions.forEach((f)=>f());\n            },\n            loadWasmModuleToWorker: (worker)=>new Promise((onFinishedLoading)=>{\n                    worker.onmessage = (e)=>{\n                        var d = e[\"data\"];\n                        var cmd = d[\"cmd\"];\n                        // Sometimes we need to backproxy events to the calling thread (e.g.\n                        // HTML5 DOM events handlers such as\n                        // emscripten_set_mousemove_callback()), so keep track in a globally\n                        // accessible variable about the thread that initiated the proxying.\n                        if (worker.pthread_ptr) PThread.currentProxiedOperationCallerThread = worker.pthread_ptr;\n                        // If this message is intended to a recipient that is not the main thread, forward it to the target thread.\n                        if (d[\"targetThread\"] && d[\"targetThread\"] != _pthread_self()) {\n                            var targetWorker = PThread.pthreads[d.targetThread];\n                            if (targetWorker) targetWorker.postMessage(d, d[\"transferList\"]);\n                            else err('Internal error! Worker sent a message \"' + cmd + '\" to target pthread ' + d[\"targetThread\"] + \", but that thread no longer exists!\");\n                            PThread.currentProxiedOperationCallerThread = undefined;\n                            return;\n                        }\n                        if (cmd === \"checkMailbox\") checkMailbox();\n                        else if (cmd === \"spawnThread\") spawnThread(d);\n                        else if (cmd === \"cleanupThread\") cleanupThread(d[\"thread\"]);\n                        else if (cmd === \"killThread\") killThread(d[\"thread\"]);\n                        else if (cmd === \"cancelThread\") cancelThread(d[\"thread\"]);\n                        else if (cmd === \"loaded\") {\n                            worker.loaded = true;\n                            onFinishedLoading(worker);\n                        } else if (cmd === \"print\") out(\"Thread \" + d[\"threadId\"] + \": \" + d[\"text\"]);\n                        else if (cmd === \"printErr\") err(\"Thread \" + d[\"threadId\"] + \": \" + d[\"text\"]);\n                        else if (cmd === \"alert\") alert(\"Thread \" + d[\"threadId\"] + \": \" + d[\"text\"]);\n                        else if (d.target === \"setimmediate\") // Worker wants to postMessage() to itself to implement setImmediate()\n                        // emulation.\n                        worker.postMessage(d);\n                        else if (cmd === \"callHandler\") Module[d[\"handler\"]](...d[\"args\"]);\n                        else if (cmd) // The received message looks like something that should be handled by this message\n                        // handler, (since there is a e.data.cmd field present), but is not one of the\n                        // recognized commands:\n                        err(\"worker sent an unknown command \" + cmd);\n                        PThread.currentProxiedOperationCallerThread = undefined;\n                    };\n                    worker.onerror = (e)=>{\n                        var message = \"worker sent an error!\";\n                        if (worker.pthread_ptr) message = \"Pthread \" + ptrToString(worker.pthread_ptr) + \" sent an error!\";\n                        err(message + \" \" + e.filename + \":\" + e.lineno + \": \" + e.message);\n                        throw e;\n                    };\n                    assert(wasmMemory instanceof WebAssembly.Memory, \"WebAssembly memory should have been loaded by now!\");\n                    assert(wasmModule instanceof WebAssembly.Module, \"WebAssembly Module should have been loaded by now!\");\n                    // When running on a pthread, none of the incoming parameters on the module\n                    // object are present. Proxy known handlers back to the main thread if specified.\n                    var handlers = [];\n                    var knownHandlers = [\n                        \"onExit\",\n                        \"onAbort\",\n                        \"print\",\n                        \"printErr\"\n                    ];\n                    for (var handler of knownHandlers)if (Module.hasOwnProperty(handler)) handlers.push(handler);\n                    worker.workerID = PThread.nextWorkerID++;\n                    // Ask the new worker to load up the Emscripten-compiled page. This is a heavy operation.\n                    worker.postMessage({\n                        \"cmd\": \"load\",\n                        \"handlers\": handlers,\n                        // If the application main .js file was loaded from a Blob, then it is not possible\n                        // to access the URL of the current script that could be passed to a Web Worker so that\n                        // it could load up the same file. In that case, developer must either deliver the Blob\n                        // object in Module['mainScriptUrlOrBlob'], or a URL to it, so that pthread Workers can\n                        // independently load up the same main application file.\n                        \"urlOrBlob\": Module[\"mainScriptUrlOrBlob\"],\n                        \"wasmMemory\": wasmMemory,\n                        \"wasmModule\": wasmModule,\n                        \"workerID\": worker.workerID\n                    });\n                }),\n            loadWasmModuleToAllWorkers: function(onMaybeReady) {\n                // Instantiation is synchronous in pthreads.\n                if (ENVIRONMENT_IS_PTHREAD) return onMaybeReady();\n                let pthreadPoolReady = Promise.all(PThread.unusedWorkers.map(PThread.loadWasmModuleToWorker));\n                pthreadPoolReady.then(onMaybeReady);\n            },\n            allocateUnusedWorker: function() {\n                var worker;\n                // If we're using module output and there's no explicit override, use bundler-friendly pattern.\n                if (!Module[\"locateFile\"]) worker = new Worker(require(\"7bae3faee0c88ea8\"));\n                else {\n                    // Allow HTML module to configure the location where the 'worker.js' file will be loaded from,\n                    // via Module.locateFile() function. If not specified, then the default URL 'worker.js' relative\n                    // to the main html file is loaded.\n                    var pthreadMainJs = locateFile(\"cas.worker.js\");\n                    worker = new Worker(pthreadMainJs);\n                }\n                PThread.unusedWorkers.push(worker);\n            },\n            getNewWorker: function() {\n                if (PThread.unusedWorkers.length == 0) {\n                    // PTHREAD_POOL_SIZE_STRICT should show a warning and, if set to level `2`, return from the function.\n                    // However, if we're in Node.js, then we can create new workers on the fly and PTHREAD_POOL_SIZE_STRICT\n                    // should be ignored altogether.\n                    err(\"Tried to spawn a new thread, but the thread pool is exhausted.\\nThis might result in a deadlock unless some threads eventually exit or the code explicitly breaks out to the event loop.\\nIf you want to increase the pool size, use setting `-sPTHREAD_POOL_SIZE=...`.\\nIf you want to throw an explicit error instead of the risk of deadlocking in those cases, use setting `-sPTHREAD_POOL_SIZE_STRICT=2`.\");\n                    PThread.allocateUnusedWorker();\n                    PThread.loadWasmModuleToWorker(PThread.unusedWorkers[0]);\n                }\n                return PThread.unusedWorkers.pop();\n            }\n        };\n        Module[\"PThread\"] = PThread;\n        function callRuntimeCallbacks(callbacks) {\n            while(callbacks.length > 0)// Pass the module as the first argument.\n            callbacks.shift()(Module);\n        }\n        function getCppExceptionTag() {\n            // In static linking, tags are defined within the wasm module and are\n            // exported, whereas in dynamic linking, tags are defined in library.js in\n            // JS code and wasm modules import them.\n            return Module[\"asm\"][\"__cpp_exception\"];\n        }\n        function getCppExceptionThrownObjectFromWebAssemblyException(ex) {\n            // In Wasm EH, the value extracted from WebAssembly.Exception is a pointer\n            // to the unwind header. Convert it to the actual thrown value.\n            var unwind_header = ex.getArg(getCppExceptionTag(), 0);\n            return ___thrown_object_from_unwind_exception(unwind_header);\n        }\n        function decrementExceptionRefcount(ex) {\n            var ptr = getCppExceptionThrownObjectFromWebAssemblyException(ex);\n            ___cxa_decrement_exception_refcount(ptr);\n        }\n        function establishStackSpace() {\n            var pthread_ptr = _pthread_self();\n            var stackTop = HEAP32[pthread_ptr + 52 >> 2];\n            var stackSize = HEAP32[pthread_ptr + 56 >> 2];\n            var stackMax = stackTop - stackSize;\n            assert(stackTop != 0);\n            assert(stackMax != 0);\n            assert(stackTop > stackMax, \"stackTop must be higher then stackMax\");\n            // Set stack limits used by `emscripten/stack.h` function.  These limits are\n            // cached in wasm-side globals to make checks as fast as possible.\n            _emscripten_stack_set_limits(stackTop, stackMax);\n            // Call inside wasm module to set up the stack frame for this pthread in wasm module scope\n            stackRestore(stackTop);\n            // Write the stack cookie last, after we have set up the proper bounds and\n            // current position of the stack.\n            writeStackCookie();\n        }\n        Module[\"establishStackSpace\"] = establishStackSpace;\n        function exitOnMainThread(returnCode) {\n            if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(2, 0, returnCode);\n            _exit(returnCode);\n        }\n        function getExceptionMessageCommon(ptr) {\n            return withStackSave(function() {\n                var type_addr_addr = stackAlloc(4);\n                var message_addr_addr = stackAlloc(4);\n                ___get_exception_message(ptr, type_addr_addr, message_addr_addr);\n                var type_addr = HEAPU32[type_addr_addr >> 2];\n                var message_addr = HEAPU32[message_addr_addr >> 2];\n                var type = UTF8ToString(type_addr);\n                _free(type_addr);\n                var message;\n                if (message_addr) {\n                    message = UTF8ToString(message_addr);\n                    _free(message_addr);\n                }\n                return [\n                    type,\n                    message\n                ];\n            });\n        }\n        function getExceptionMessage(ex) {\n            var ptr = getCppExceptionThrownObjectFromWebAssemblyException(ex);\n            return getExceptionMessageCommon(ptr);\n        }\n        Module[\"getExceptionMessage\"] = getExceptionMessage;\n        /**\n     * @param {number} ptr\n     * @param {string} type\n     */ function getValue(ptr, type = \"i8\") {\n            if (type.endsWith(\"*\")) type = \"*\";\n            switch(type){\n                case \"i1\":\n                    return HEAP8[ptr >> 0];\n                case \"i8\":\n                    return HEAP8[ptr >> 0];\n                case \"i16\":\n                    return HEAP16[ptr >> 1];\n                case \"i32\":\n                    return HEAP32[ptr >> 2];\n                case \"i64\":\n                    return HEAP32[ptr >> 2];\n                case \"float\":\n                    return HEAPF32[ptr >> 2];\n                case \"double\":\n                    return HEAPF64[ptr >> 3];\n                case \"*\":\n                    return HEAPU32[ptr >> 2];\n                default:\n                    abort(\"invalid type for getValue: \" + type);\n            }\n        }\n        function incrementExceptionRefcount(ex) {\n            var ptr = getCppExceptionThrownObjectFromWebAssemblyException(ex);\n            ___cxa_increment_exception_refcount(ptr);\n        }\n        var wasmTableMirror = [];\n        function getWasmTableEntry(funcPtr) {\n            var func = wasmTableMirror[funcPtr];\n            if (!func) {\n                if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n                wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n            }\n            assert(wasmTable.get(funcPtr) == func, \"JavaScript-side Wasm function table mirror is out of date!\");\n            return func;\n        }\n        function invokeEntryPoint(ptr, arg) {\n            // pthread entry points are always of signature 'void *ThreadMain(void *arg)'\n            // Native codebases sometimes spawn threads with other thread entry point\n            // signatures, such as void ThreadMain(void *arg), void *ThreadMain(), or\n            // void ThreadMain().  That is not acceptable per C/C++ specification, but\n            // x86 compiler ABI extensions enable that to work. If you find the\n            // following line to crash, either change the signature to \"proper\" void\n            // *ThreadMain(void *arg) form, or try linking with the Emscripten linker\n            // flag -sEMULATE_FUNCTION_POINTER_CASTS to add in emulation for this x86\n            // ABI extension.\n            var result = getWasmTableEntry(ptr)(arg);\n            checkStackCookie();\n            if (keepRuntimeAlive()) PThread.setExitStatus(result);\n            else __emscripten_thread_exit(result);\n        }\n        Module[\"invokeEntryPoint\"] = invokeEntryPoint;\n        function registerTLSInit(tlsInitFunc) {\n            PThread.tlsInitFunctions.push(tlsInitFunc);\n        }\n        /**\n     * @param {number} ptr\n     * @param {number} value\n     * @param {string} type\n     */ function setValue(ptr, value, type = \"i8\") {\n            if (type.endsWith(\"*\")) type = \"*\";\n            switch(type){\n                case \"i1\":\n                    HEAP8[ptr >> 0] = value;\n                    break;\n                case \"i8\":\n                    HEAP8[ptr >> 0] = value;\n                    break;\n                case \"i16\":\n                    HEAP16[ptr >> 1] = value;\n                    break;\n                case \"i32\":\n                    HEAP32[ptr >> 2] = value;\n                    break;\n                case \"i64\":\n                    tempI64 = [\n                        value >>> 0,\n                        (tempDouble = value, +Math.abs(tempDouble) >= 1.0 ? tempDouble > 0.0 ? (Math.min(+Math.floor(tempDouble / 4294967296.0), 4294967295.0) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0) >>> 0 : 0)\n                    ], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];\n                    break;\n                case \"float\":\n                    HEAPF32[ptr >> 2] = value;\n                    break;\n                case \"double\":\n                    HEAPF64[ptr >> 3] = value;\n                    break;\n                case \"*\":\n                    HEAPU32[ptr >> 2] = value;\n                    break;\n                default:\n                    abort(\"invalid type for setValue: \" + type);\n            }\n        }\n        function jsStackTrace() {\n            var error = new Error();\n            if (!error.stack) {\n                // IE10+ special cases: It does have callstack info, but it is only\n                // populated if an Error object is thrown, so try that as a special-case.\n                try {\n                    throw new Error();\n                } catch (e) {\n                    error = e;\n                }\n                if (!error.stack) return \"(no stack trace available)\";\n            }\n            return error.stack.toString();\n        }\n        function stackTrace() {\n            var js = jsStackTrace();\n            if (Module[\"extraStackTrace\"]) js += \"\\n\" + Module[\"extraStackTrace\"]();\n            return demangleAll(js);\n        }\n        function warnOnce(text) {\n            if (!warnOnce.shown) warnOnce.shown = {};\n            if (!warnOnce.shown[text]) {\n                warnOnce.shown[text] = 1;\n                err(text);\n            }\n        }\n        function ___assert_fail(condition, filename, line, func) {\n            abort(\"Assertion failed: \" + UTF8ToString(condition) + \", at: \" + [\n                filename ? UTF8ToString(filename) : \"unknown filename\",\n                line,\n                func ? UTF8ToString(func) : \"unknown function\"\n            ]);\n        }\n        function ___call_sighandler(fp, sig) {\n            getWasmTableEntry(fp)(sig);\n        }\n        function ___emscripten_init_main_thread_js(tb) {\n            // Pass the thread address to the native code where they stored in wasm\n            // globals which act as a form of TLS. Global constructors trying\n            // to access this value will read the wrong value, but that is UB anyway.\n            __emscripten_thread_init(tb, /*isMainBrowserThread=*/ !ENVIRONMENT_IS_WORKER, /*isMainRuntimeThread=*/ 1, /*canBlock=*/ !ENVIRONMENT_IS_WEB);\n            PThread.threadInitTLS();\n        }\n        function ___emscripten_thread_cleanup(thread) {\n            // Called when a thread needs to be cleaned up so it can be reused.\n            // A thread is considered reusable when it either returns from its\n            // entry point, calls pthread_exit, or acts upon a cancellation.\n            // Detached threads are responsible for calling this themselves,\n            // otherwise pthread_join is responsible for calling this.\n            if (!ENVIRONMENT_IS_PTHREAD) cleanupThread(thread);\n            else postMessage({\n                \"cmd\": \"cleanupThread\",\n                \"thread\": thread\n            });\n        }\n        function pthreadCreateProxied(pthread_ptr, attr, startRoutine, arg) {\n            if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(3, 1, pthread_ptr, attr, startRoutine, arg);\n            return ___pthread_create_js(pthread_ptr, attr, startRoutine, arg);\n        }\n        function ___pthread_create_js(pthread_ptr, attr, startRoutine, arg) {\n            if (typeof SharedArrayBuffer == \"undefined\") {\n                err(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\");\n                return 6;\n            }\n            // List of JS objects that will transfer ownership to the Worker hosting the thread\n            var transferList = [];\n            var error = 0;\n            // Synchronously proxy the thread creation to main thread if possible. If we\n            // need to transfer ownership of objects, then proxy asynchronously via\n            // postMessage.\n            if (ENVIRONMENT_IS_PTHREAD && (transferList.length === 0 || error)) return pthreadCreateProxied(pthread_ptr, attr, startRoutine, arg);\n            // If on the main thread, and accessing Canvas/OffscreenCanvas failed, abort\n            // with the detected error.\n            if (error) return error;\n            var threadParams = {\n                startRoutine,\n                pthread_ptr,\n                arg,\n                transferList\n            };\n            if (ENVIRONMENT_IS_PTHREAD) {\n                // The prepopulated pool of web workers that can host pthreads is stored\n                // in the main JS thread. Therefore if a pthread is attempting to spawn a\n                // new thread, the thread creation must be deferred to the main JS thread.\n                threadParams.cmd = \"spawnThread\";\n                postMessage(threadParams, transferList);\n                // When we defer thread creation this way, we have no way to detect thread\n                // creation synchronously today, so we have to assume success and return 0.\n                return 0;\n            }\n            // We are the main thread, so we have the pthread warmup pool in this\n            // thread and can fire off JS thread creation directly ourselves.\n            return spawnThread(threadParams);\n        }\n        function ___throw_exception_with_stack_trace(ex) {\n            var e = new WebAssembly.Exception(getCppExceptionTag(), [\n                ex\n            ], {\n                traceStack: true\n            });\n            e.message = getExceptionMessage(e);\n            // The generated stack trace will be in the form of:\n            //\n            // Error\n            //     at ___throw_exception_with_stack_trace(test.js:1139:13)\n            //     at __cxa_throw (wasm://wasm/009a7c9a:wasm-function[1551]:0x24367)\n            //     ...\n            //\n            // Remove this JS function name, which is in the second line, from the stack\n            // trace. Note that .stack does not yet exist in all browsers (see #18828).\n            if (e.stack) {\n                var arr = e.stack.split(\"\\n\");\n                arr.splice(1, 1);\n                e.stack = arr.join(\"\\n\");\n            }\n            throw e;\n        }\n        function __embind_register_bigint(primitiveType, name, size, minRange, maxRange) {}\n        function getShiftFromSize(size) {\n            switch(size){\n                case 1:\n                    return 0;\n                case 2:\n                    return 1;\n                case 4:\n                    return 2;\n                case 8:\n                    return 3;\n                default:\n                    throw new TypeError(\"Unknown type size: \" + size);\n            }\n        }\n        function embind_init_charCodes() {\n            var codes = new Array(256);\n            for(var i = 0; i < 256; ++i)codes[i] = String.fromCharCode(i);\n            embind_charCodes = codes;\n        }\n        var embind_charCodes = undefined;\n        function readLatin1String(ptr) {\n            var ret = \"\";\n            var c = ptr;\n            while(HEAPU8[c])ret += embind_charCodes[HEAPU8[c++]];\n            return ret;\n        }\n        var awaitingDependencies = {};\n        var registeredTypes = {};\n        var typeDependencies = {};\n        var char_0 = 48;\n        var char_9 = 57;\n        function makeLegalFunctionName(name) {\n            if (undefined === name) return \"_unknown\";\n            name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\n            var f = name.charCodeAt(0);\n            if (f >= char_0 && f <= char_9) return \"_\" + name;\n            return name;\n        }\n        function createNamedFunction(name, body) {\n            name = makeLegalFunctionName(name);\n            // Use an abject with a computed property name to create a new function with\n            // a name specified at runtime, but without using `new Function` or `eval`.\n            return ({\n                [name]: function() {\n                    return body.apply(this, arguments);\n                }\n            })[name];\n        }\n        function extendError(baseErrorType, errorName) {\n            var errorClass = createNamedFunction(errorName, function(message) {\n                this.name = errorName;\n                this.message = message;\n                var stack = new Error(message).stack;\n                if (stack !== undefined) this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n            });\n            errorClass.prototype = Object.create(baseErrorType.prototype);\n            errorClass.prototype.constructor = errorClass;\n            errorClass.prototype.toString = function() {\n                if (this.message === undefined) return this.name;\n                else return this.name + \": \" + this.message;\n            };\n            return errorClass;\n        }\n        var BindingError = undefined;\n        function throwBindingError(message) {\n            throw new BindingError(message);\n        }\n        var InternalError = undefined;\n        function throwInternalError(message) {\n            throw new InternalError(message);\n        }\n        function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n            myTypes.forEach(function(type) {\n                typeDependencies[type] = dependentTypes;\n            });\n            function onComplete(typeConverters) {\n                var myTypeConverters = getTypeConverters(typeConverters);\n                if (myTypeConverters.length !== myTypes.length) throwInternalError(\"Mismatched type converter count\");\n                for(var i = 0; i < myTypes.length; ++i)registerType(myTypes[i], myTypeConverters[i]);\n            }\n            var typeConverters = new Array(dependentTypes.length);\n            var unregisteredTypes = [];\n            var registered = 0;\n            dependentTypes.forEach((dt, i)=>{\n                if (registeredTypes.hasOwnProperty(dt)) typeConverters[i] = registeredTypes[dt];\n                else {\n                    unregisteredTypes.push(dt);\n                    if (!awaitingDependencies.hasOwnProperty(dt)) awaitingDependencies[dt] = [];\n                    awaitingDependencies[dt].push(()=>{\n                        typeConverters[i] = registeredTypes[dt];\n                        ++registered;\n                        if (registered === unregisteredTypes.length) onComplete(typeConverters);\n                    });\n                }\n            });\n            if (0 === unregisteredTypes.length) onComplete(typeConverters);\n        }\n        /** @param {Object=} options */ function registerType(rawType, registeredInstance, options = {}) {\n            if (!(\"argPackAdvance\" in registeredInstance)) throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n            var name = registeredInstance.name;\n            if (!rawType) throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer');\n            if (registeredTypes.hasOwnProperty(rawType)) {\n                if (options.ignoreDuplicateRegistrations) return;\n                else throwBindingError(\"Cannot register type '\" + name + \"' twice\");\n            }\n            registeredTypes[rawType] = registeredInstance;\n            delete typeDependencies[rawType];\n            if (awaitingDependencies.hasOwnProperty(rawType)) {\n                var callbacks = awaitingDependencies[rawType];\n                delete awaitingDependencies[rawType];\n                callbacks.forEach((cb)=>cb());\n            }\n        }\n        function __embind_register_bool(rawType, name, size, trueValue, falseValue) {\n            var shift = getShiftFromSize(size);\n            name = readLatin1String(name);\n            registerType(rawType, {\n                name: name,\n                \"fromWireType\": function(wt) {\n                    // ambiguous emscripten ABI: sometimes return values are\n                    // true or false, and sometimes integers (0 or 1)\n                    return !!wt;\n                },\n                \"toWireType\": function(destructors, o) {\n                    return o ? trueValue : falseValue;\n                },\n                \"argPackAdvance\": 8,\n                \"readValueFromPointer\": function(pointer) {\n                    // TODO: if heap is fixed (like in asm.js) this could be executed outside\n                    var heap;\n                    if (size === 1) heap = HEAP8;\n                    else if (size === 2) heap = HEAP16;\n                    else if (size === 4) heap = HEAP32;\n                    else throw new TypeError(\"Unknown boolean type size: \" + name);\n                    return this[\"fromWireType\"](heap[pointer >> shift]);\n                },\n                destructorFunction: null\n            });\n        }\n        function ClassHandle_isAliasOf(other) {\n            if (!(this instanceof ClassHandle)) return false;\n            if (!(other instanceof ClassHandle)) return false;\n            var leftClass = this.$$.ptrType.registeredClass;\n            var left = this.$$.ptr;\n            var rightClass = other.$$.ptrType.registeredClass;\n            var right = other.$$.ptr;\n            while(leftClass.baseClass){\n                left = leftClass.upcast(left);\n                leftClass = leftClass.baseClass;\n            }\n            while(rightClass.baseClass){\n                right = rightClass.upcast(right);\n                rightClass = rightClass.baseClass;\n            }\n            return leftClass === rightClass && left === right;\n        }\n        function shallowCopyInternalPointer(o) {\n            return {\n                count: o.count,\n                deleteScheduled: o.deleteScheduled,\n                preservePointerOnDelete: o.preservePointerOnDelete,\n                ptr: o.ptr,\n                ptrType: o.ptrType,\n                smartPtr: o.smartPtr,\n                smartPtrType: o.smartPtrType\n            };\n        }\n        function throwInstanceAlreadyDeleted(obj) {\n            function getInstanceTypeName(handle) {\n                return handle.$$.ptrType.registeredClass.name;\n            }\n            throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\n        }\n        var finalizationRegistry = false;\n        function detachFinalizer(handle) {}\n        function runDestructor($$) {\n            if ($$.smartPtr) $$.smartPtrType.rawDestructor($$.smartPtr);\n            else $$.ptrType.registeredClass.rawDestructor($$.ptr);\n        }\n        function releaseClassHandle($$) {\n            $$.count.value -= 1;\n            var toDelete = 0 === $$.count.value;\n            if (toDelete) runDestructor($$);\n        }\n        function downcastPointer(ptr, ptrClass, desiredClass) {\n            if (ptrClass === desiredClass) return ptr;\n            if (undefined === desiredClass.baseClass) return null; // no conversion\n            var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n            if (rv === null) return null;\n            return desiredClass.downcast(rv);\n        }\n        var registeredPointers = {};\n        function getInheritedInstanceCount() {\n            return Object.keys(registeredInstances).length;\n        }\n        function getLiveInheritedInstances() {\n            var rv = [];\n            for(var k in registeredInstances)if (registeredInstances.hasOwnProperty(k)) rv.push(registeredInstances[k]);\n            return rv;\n        }\n        var deletionQueue = [];\n        function flushPendingDeletes() {\n            while(deletionQueue.length){\n                var obj = deletionQueue.pop();\n                obj.$$.deleteScheduled = false;\n                obj[\"delete\"]();\n            }\n        }\n        var delayFunction = undefined;\n        function setDelayFunction(fn) {\n            delayFunction = fn;\n            if (deletionQueue.length && delayFunction) delayFunction(flushPendingDeletes);\n        }\n        function init_embind() {\n            Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\n            Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\n            Module[\"flushPendingDeletes\"] = flushPendingDeletes;\n            Module[\"setDelayFunction\"] = setDelayFunction;\n        }\n        var registeredInstances = {};\n        function getBasestPointer(class_, ptr) {\n            if (ptr === undefined) throwBindingError(\"ptr should not be undefined\");\n            while(class_.baseClass){\n                ptr = class_.upcast(ptr);\n                class_ = class_.baseClass;\n            }\n            return ptr;\n        }\n        function getInheritedInstance(class_, ptr) {\n            ptr = getBasestPointer(class_, ptr);\n            return registeredInstances[ptr];\n        }\n        function makeClassHandle(prototype, record) {\n            if (!record.ptrType || !record.ptr) throwInternalError(\"makeClassHandle requires ptr and ptrType\");\n            var hasSmartPtrType = !!record.smartPtrType;\n            var hasSmartPtr = !!record.smartPtr;\n            if (hasSmartPtrType !== hasSmartPtr) throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\n            record.count = {\n                value: 1\n            };\n            return attachFinalizer(Object.create(prototype, {\n                $$: {\n                    value: record\n                }\n            }));\n        }\n        function RegisteredPointer_fromWireType(ptr) {\n            // ptr is a raw pointer (or a raw smartpointer)\n            // rawPointer is a maybe-null raw pointer\n            var rawPointer = this.getPointee(ptr);\n            if (!rawPointer) {\n                this.destructor(ptr);\n                return null;\n            }\n            var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n            if (undefined !== registeredInstance) {\n                // JS object has been neutered, time to repopulate it\n                if (0 === registeredInstance.$$.count.value) {\n                    registeredInstance.$$.ptr = rawPointer;\n                    registeredInstance.$$.smartPtr = ptr;\n                    return registeredInstance[\"clone\"]();\n                } else {\n                    // else, just increment reference count on existing object\n                    // it already has a reference to the smart pointer\n                    var rv = registeredInstance[\"clone\"]();\n                    this.destructor(ptr);\n                    return rv;\n                }\n            }\n            function makeDefaultHandle() {\n                if (this.isSmartPointer) return makeClassHandle(this.registeredClass.instancePrototype, {\n                    ptrType: this.pointeeType,\n                    ptr: rawPointer,\n                    smartPtrType: this,\n                    smartPtr: ptr\n                });\n                else return makeClassHandle(this.registeredClass.instancePrototype, {\n                    ptrType: this,\n                    ptr: ptr\n                });\n            }\n            var actualType = this.registeredClass.getActualType(rawPointer);\n            var registeredPointerRecord = registeredPointers[actualType];\n            if (!registeredPointerRecord) return makeDefaultHandle.call(this);\n            var toType;\n            if (this.isConst) toType = registeredPointerRecord.constPointerType;\n            else toType = registeredPointerRecord.pointerType;\n            var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n            if (dp === null) return makeDefaultHandle.call(this);\n            if (this.isSmartPointer) return makeClassHandle(toType.registeredClass.instancePrototype, {\n                ptrType: toType,\n                ptr: dp,\n                smartPtrType: this,\n                smartPtr: ptr\n            });\n            else return makeClassHandle(toType.registeredClass.instancePrototype, {\n                ptrType: toType,\n                ptr: dp\n            });\n        }\n        function attachFinalizer(handle) {\n            if (\"undefined\" === typeof FinalizationRegistry) {\n                attachFinalizer = (handle)=>handle;\n                return handle;\n            }\n            // If the running environment has a FinalizationRegistry (see\n            // https://github.com/tc39/proposal-weakrefs), then attach finalizers\n            // for class handles.  We check for the presence of FinalizationRegistry\n            // at run-time, not build-time.\n            finalizationRegistry = new FinalizationRegistry((info)=>{\n                console.warn(info.leakWarning.stack.replace(/^Error: /, \"\"));\n                releaseClassHandle(info.$$);\n            });\n            attachFinalizer = (handle)=>{\n                var $$ = handle.$$;\n                var hasSmartPtr = !!$$.smartPtr;\n                if (hasSmartPtr) {\n                    // We should not call the destructor on raw pointers in case other code expects the pointee to live\n                    var info = {\n                        $$: $$\n                    };\n                    // Create a warning as an Error instance in advance so that we can store\n                    // the current stacktrace and point to it when / if a leak is detected.\n                    // This is more useful than the empty stacktrace of `FinalizationRegistry`\n                    // callback.\n                    var cls = $$.ptrType.registeredClass;\n                    info.leakWarning = new Error(\"Embind found a leaked C++ instance \" + cls.name + \" <\" + ptrToString($$.ptr) + \">.\\n\" + \"We'll free it automatically in this case, but this functionality is not reliable across various environments.\\n\" + \"Make sure to invoke .delete() manually once you're done with the instance instead.\\n\" + \"Originally allocated\"); // `.stack` will add \"at ...\" after this sentence\n                    if (\"captureStackTrace\" in Error) Error.captureStackTrace(info.leakWarning, RegisteredPointer_fromWireType);\n                    finalizationRegistry.register(handle, info, handle);\n                }\n                return handle;\n            };\n            detachFinalizer = (handle)=>finalizationRegistry.unregister(handle);\n            return attachFinalizer(handle);\n        }\n        function ClassHandle_clone() {\n            if (!this.$$.ptr) throwInstanceAlreadyDeleted(this);\n            if (this.$$.preservePointerOnDelete) {\n                this.$$.count.value += 1;\n                return this;\n            } else {\n                var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {\n                    $$: {\n                        value: shallowCopyInternalPointer(this.$$)\n                    }\n                }));\n                clone.$$.count.value += 1;\n                clone.$$.deleteScheduled = false;\n                return clone;\n            }\n        }\n        function ClassHandle_delete() {\n            if (!this.$$.ptr) throwInstanceAlreadyDeleted(this);\n            if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) throwBindingError(\"Object already scheduled for deletion\");\n            detachFinalizer(this);\n            releaseClassHandle(this.$$);\n            if (!this.$$.preservePointerOnDelete) {\n                this.$$.smartPtr = undefined;\n                this.$$.ptr = undefined;\n            }\n        }\n        function ClassHandle_isDeleted() {\n            return !this.$$.ptr;\n        }\n        function ClassHandle_deleteLater() {\n            if (!this.$$.ptr) throwInstanceAlreadyDeleted(this);\n            if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) throwBindingError(\"Object already scheduled for deletion\");\n            deletionQueue.push(this);\n            if (deletionQueue.length === 1 && delayFunction) delayFunction(flushPendingDeletes);\n            this.$$.deleteScheduled = true;\n            return this;\n        }\n        function init_ClassHandle() {\n            ClassHandle.prototype[\"isAliasOf\"] = ClassHandle_isAliasOf;\n            ClassHandle.prototype[\"clone\"] = ClassHandle_clone;\n            ClassHandle.prototype[\"delete\"] = ClassHandle_delete;\n            ClassHandle.prototype[\"isDeleted\"] = ClassHandle_isDeleted;\n            ClassHandle.prototype[\"deleteLater\"] = ClassHandle_deleteLater;\n        }\n        function ClassHandle() {}\n        function ensureOverloadTable(proto, methodName, humanName) {\n            if (undefined === proto[methodName].overloadTable) {\n                var prevFunc = proto[methodName];\n                // Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.\n                proto[methodName] = function() {\n                    // TODO This check can be removed in -O3 level \"unsafe\" optimizations.\n                    if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n                    return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n                };\n                // Move the previous function into the overload table.\n                proto[methodName].overloadTable = [];\n                proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n            }\n        }\n        /** @param {number=} numArguments */ function exposePublicSymbol(name, value, numArguments) {\n            if (Module.hasOwnProperty(name)) {\n                if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) throwBindingError(\"Cannot register public name '\" + name + \"' twice\");\n                // We are exposing a function with the same name as an existing function. Create an overload table and a function selector\n                // that routes between the two.\n                ensureOverloadTable(Module, name, name);\n                if (Module.hasOwnProperty(numArguments)) throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n                // Add the new function into the overload table.\n                Module[name].overloadTable[numArguments] = value;\n            } else {\n                Module[name] = value;\n                if (undefined !== numArguments) Module[name].numArguments = numArguments;\n            }\n        }\n        /** @constructor */ function RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\n            this.name = name;\n            this.constructor = constructor;\n            this.instancePrototype = instancePrototype;\n            this.rawDestructor = rawDestructor;\n            this.baseClass = baseClass;\n            this.getActualType = getActualType;\n            this.upcast = upcast;\n            this.downcast = downcast;\n            this.pureVirtualFunctions = [];\n        }\n        function upcastPointer(ptr, ptrClass, desiredClass) {\n            while(ptrClass !== desiredClass){\n                if (!ptrClass.upcast) throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name);\n                ptr = ptrClass.upcast(ptr);\n                ptrClass = ptrClass.baseClass;\n            }\n            return ptr;\n        }\n        function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n            if (handle === null) {\n                if (this.isReference) throwBindingError(\"null is not a valid \" + this.name);\n                return 0;\n            }\n            if (!handle.$$) throwBindingError('Cannot pass \"' + embindRepr(handle) + '\" as a ' + this.name);\n            if (!handle.$$.ptr) throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n            var handleClass = handle.$$.ptrType.registeredClass;\n            var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n            return ptr;\n        }\n        function genericPointerToWireType(destructors, handle) {\n            var ptr;\n            if (handle === null) {\n                if (this.isReference) throwBindingError(\"null is not a valid \" + this.name);\n                if (this.isSmartPointer) {\n                    ptr = this.rawConstructor();\n                    if (destructors !== null) destructors.push(this.rawDestructor, ptr);\n                    return ptr;\n                } else return 0;\n            }\n            if (!handle.$$) throwBindingError('Cannot pass \"' + embindRepr(handle) + '\" as a ' + this.name);\n            if (!handle.$$.ptr) throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n            if (!this.isConst && handle.$$.ptrType.isConst) throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n            var handleClass = handle.$$.ptrType.registeredClass;\n            ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n            if (this.isSmartPointer) {\n                // TODO: this is not strictly true\n                // We could support BY_EMVAL conversions from raw pointers to smart pointers\n                // because the smart pointer can hold a reference to the handle\n                if (undefined === handle.$$.smartPtr) throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\n                switch(this.sharingPolicy){\n                    case 0:\n                        // no upcasting\n                        if (handle.$$.smartPtrType === this) ptr = handle.$$.smartPtr;\n                        else throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n                        break;\n                    case 1:\n                        ptr = handle.$$.smartPtr;\n                        break;\n                    case 2:\n                        if (handle.$$.smartPtrType === this) ptr = handle.$$.smartPtr;\n                        else {\n                            var clonedHandle = handle[\"clone\"]();\n                            ptr = this.rawShare(ptr, Emval.toHandle(function() {\n                                clonedHandle[\"delete\"]();\n                            }));\n                            if (destructors !== null) destructors.push(this.rawDestructor, ptr);\n                        }\n                        break;\n                    default:\n                        throwBindingError(\"Unsupporting sharing policy\");\n                }\n            }\n            return ptr;\n        }\n        function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n            if (handle === null) {\n                if (this.isReference) throwBindingError(\"null is not a valid \" + this.name);\n                return 0;\n            }\n            if (!handle.$$) throwBindingError('Cannot pass \"' + embindRepr(handle) + '\" as a ' + this.name);\n            if (!handle.$$.ptr) throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n            if (handle.$$.ptrType.isConst) throwBindingError(\"Cannot convert argument of type \" + handle.$$.ptrType.name + \" to parameter type \" + this.name);\n            var handleClass = handle.$$.ptrType.registeredClass;\n            var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n            return ptr;\n        }\n        function simpleReadValueFromPointer(pointer) {\n            return this[\"fromWireType\"](HEAP32[pointer >> 2]);\n        }\n        function RegisteredPointer_getPointee(ptr) {\n            if (this.rawGetPointee) ptr = this.rawGetPointee(ptr);\n            return ptr;\n        }\n        function RegisteredPointer_destructor(ptr) {\n            if (this.rawDestructor) this.rawDestructor(ptr);\n        }\n        function RegisteredPointer_deleteObject(handle) {\n            if (handle !== null) handle[\"delete\"]();\n        }\n        function init_RegisteredPointer() {\n            RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\n            RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\n            RegisteredPointer.prototype[\"argPackAdvance\"] = 8;\n            RegisteredPointer.prototype[\"readValueFromPointer\"] = simpleReadValueFromPointer;\n            RegisteredPointer.prototype[\"deleteObject\"] = RegisteredPointer_deleteObject;\n            RegisteredPointer.prototype[\"fromWireType\"] = RegisteredPointer_fromWireType;\n        }\n        /** @constructor\n      @param {*=} pointeeType,\n      @param {*=} sharingPolicy,\n      @param {*=} rawGetPointee,\n      @param {*=} rawConstructor,\n      @param {*=} rawShare,\n      @param {*=} rawDestructor,\n       */ function RegisteredPointer(name, registeredClass, isReference, isConst, // smart pointer properties\n        isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\n            this.name = name;\n            this.registeredClass = registeredClass;\n            this.isReference = isReference;\n            this.isConst = isConst;\n            // smart pointer properties\n            this.isSmartPointer = isSmartPointer;\n            this.pointeeType = pointeeType;\n            this.sharingPolicy = sharingPolicy;\n            this.rawGetPointee = rawGetPointee;\n            this.rawConstructor = rawConstructor;\n            this.rawShare = rawShare;\n            this.rawDestructor = rawDestructor;\n            if (!isSmartPointer && registeredClass.baseClass === undefined) {\n                if (isConst) {\n                    this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n                    this.destructorFunction = null;\n                } else {\n                    this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n                    this.destructorFunction = null;\n                }\n            } else this[\"toWireType\"] = genericPointerToWireType;\n        }\n        /** @param {number=} numArguments */ function replacePublicSymbol(name, value, numArguments) {\n            if (!Module.hasOwnProperty(name)) throwInternalError(\"Replacing nonexistant public symbol\");\n            // If there's an overload table for this symbol, replace the symbol in the overload table instead.\n            if (undefined !== Module[name].overloadTable && undefined !== numArguments) Module[name].overloadTable[numArguments] = value;\n            else {\n                Module[name] = value;\n                Module[name].argCount = numArguments;\n            }\n        }\n        function dynCallLegacy(sig, ptr, args) {\n            assert(\"dynCall_\" + sig in Module, \"bad function pointer type - dynCall function not found for sig '\" + sig + \"'\");\n            if (args && args.length) // j (64-bit integer) must be passed in as two numbers [low 32, high 32].\n            assert(args.length === sig.substring(1).replace(/j/g, \"--\").length);\n            else assert(sig.length == 1);\n            var f = Module[\"dynCall_\" + sig];\n            return args && args.length ? f.apply(null, [\n                ptr\n            ].concat(args)) : f.call(null, ptr);\n        }\n        /** @param {Object=} args */ function dynCall(sig, ptr, args) {\n            // Without WASM_BIGINT support we cannot directly call function with i64 as\n            // part of thier signature, so we rely the dynCall functions generated by\n            // wasm-emscripten-finalize\n            if (sig.includes(\"j\")) return dynCallLegacy(sig, ptr, args);\n            assert(getWasmTableEntry(ptr), \"missing table entry in dynCall: \" + ptr);\n            var rtn = getWasmTableEntry(ptr).apply(null, args);\n            return rtn;\n        }\n        function getDynCaller(sig, ptr) {\n            assert(sig.includes(\"j\") || sig.includes(\"p\"), \"getDynCaller should only be called with i64 sigs\");\n            var argCache = [];\n            return function() {\n                argCache.length = 0;\n                Object.assign(argCache, arguments);\n                return dynCall(sig, ptr, argCache);\n            };\n        }\n        function embind__requireFunction(signature, rawFunction) {\n            signature = readLatin1String(signature);\n            function makeDynCaller() {\n                if (signature.includes(\"j\")) return getDynCaller(signature, rawFunction);\n                return getWasmTableEntry(rawFunction);\n            }\n            var fp = makeDynCaller();\n            if (typeof fp != \"function\") throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n            return fp;\n        }\n        var UnboundTypeError = undefined;\n        function getTypeName(type) {\n            var ptr = ___getTypeName(type);\n            var rv = readLatin1String(ptr);\n            _free(ptr);\n            return rv;\n        }\n        function throwUnboundTypeError(message, types) {\n            var unboundTypes = [];\n            var seen = {};\n            function visit(type) {\n                if (seen[type]) return;\n                if (registeredTypes[type]) return;\n                if (typeDependencies[type]) {\n                    typeDependencies[type].forEach(visit);\n                    return;\n                }\n                unboundTypes.push(type);\n                seen[type] = true;\n            }\n            types.forEach(visit);\n            throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([\n                \", \"\n            ]));\n        }\n        function __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name, destructorSignature, rawDestructor) {\n            name = readLatin1String(name);\n            getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n            if (upcast) upcast = embind__requireFunction(upcastSignature, upcast);\n            if (downcast) downcast = embind__requireFunction(downcastSignature, downcast);\n            rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n            var legalFunctionName = makeLegalFunctionName(name);\n            exposePublicSymbol(legalFunctionName, function() {\n                // this code cannot run if baseClassRawType is zero\n                throwUnboundTypeError(\"Cannot construct \" + name + \" due to unbound types\", [\n                    baseClassRawType\n                ]);\n            });\n            whenDependentTypesAreResolved([\n                rawType,\n                rawPointerType,\n                rawConstPointerType\n            ], baseClassRawType ? [\n                baseClassRawType\n            ] : [], function(base) {\n                base = base[0];\n                var baseClass;\n                var basePrototype;\n                if (baseClassRawType) {\n                    baseClass = base.registeredClass;\n                    basePrototype = baseClass.instancePrototype;\n                } else basePrototype = ClassHandle.prototype;\n                var constructor = createNamedFunction(legalFunctionName, function() {\n                    if (Object.getPrototypeOf(this) !== instancePrototype) throw new BindingError(\"Use 'new' to construct \" + name);\n                    if (undefined === registeredClass.constructor_body) throw new BindingError(name + \" has no accessible constructor\");\n                    var body = registeredClass.constructor_body[arguments.length];\n                    if (undefined === body) throw new BindingError(\"Tried to invoke ctor of \" + name + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\");\n                    return body.apply(this, arguments);\n                });\n                var instancePrototype = Object.create(basePrototype, {\n                    constructor: {\n                        value: constructor\n                    }\n                });\n                constructor.prototype = instancePrototype;\n                var registeredClass = new RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\n                var referenceConverter = new RegisteredPointer(name, registeredClass, true, false, false);\n                var pointerConverter = new RegisteredPointer(name + \"*\", registeredClass, false, false, false);\n                var constPointerConverter = new RegisteredPointer(name + \" const*\", registeredClass, false, true, false);\n                registeredPointers[rawType] = {\n                    pointerType: pointerConverter,\n                    constPointerType: constPointerConverter\n                };\n                replacePublicSymbol(legalFunctionName, constructor);\n                return [\n                    referenceConverter,\n                    pointerConverter,\n                    constPointerConverter\n                ];\n            });\n        }\n        function heap32VectorToArray(count, firstElement) {\n            var array = [];\n            for(var i = 0; i < count; i++)// TODO(https://github.com/emscripten-core/emscripten/issues/17310):\n            // Find a way to hoist the `>> 2` or `>> 3` out of this loop.\n            array.push(HEAPU32[firstElement + i * 4 >> 2]);\n            return array;\n        }\n        function runDestructors(destructors) {\n            while(destructors.length){\n                var ptr = destructors.pop();\n                var del = destructors.pop();\n                del(ptr);\n            }\n        }\n        function newFunc(constructor, argumentList) {\n            if (!(constructor instanceof Function)) throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\n            /*\n       * Previously, the following line was just:\n       *   function dummy() {};\n       * Unfortunately, Chrome was preserving 'dummy' as the object's name, even\n       * though at creation, the 'dummy' has the correct constructor name.  Thus,\n       * objects created with IMVU.new would show up in the debugger as 'dummy',\n       * which isn't very helpful.  Using IMVU.createNamedFunction addresses the\n       * issue.  Doublely-unfortunately, there's no way to write a test for this\n       * behavior.  -NRD 2013.02.22\n       */ var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function() {});\n            dummy.prototype = constructor.prototype;\n            var obj = new dummy;\n            var r = constructor.apply(obj, argumentList);\n            return r instanceof Object ? r : obj;\n        }\n        function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc, /** boolean= */ isAsync) {\n            // humanName: a human-readable string name for the function to be generated.\n            // argTypes: An array that contains the embind type objects for all types in the function signature.\n            //    argTypes[0] is the type object for the function return value.\n            //    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.\n            //    argTypes[2...] are the actual function parameters.\n            // classType: The embind type object for the class to be bound, or null if this is not a method of a class.\n            // cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.\n            // cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.\n            // isAsync: Optional. If true, returns an async function. Async bindings are only supported with JSPI.\n            var argCount = argTypes.length;\n            if (argCount < 2) throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n            assert(!isAsync, \"Async bindings are only supported with JSPI.\");\n            var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n            // Free functions with signature \"void function()\" do not need an invoker that marshalls between wire types.\n            // TODO: This omits argument count check - enable only at -O3 or similar.\n            //    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == \"void\" && !isClassMethodFunc) {\n            //       return FUNCTION_TABLE[fn];\n            //    }\n            // Determine if we need to use a dynamic stack to store the destructors for the function parameters.\n            // TODO: Remove this completely once all function invokers are being dynamically generated.\n            var needsDestructorStack = false;\n            for(var i = 1; i < argTypes.length; ++i)if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\n                needsDestructorStack = true;\n                break;\n            }\n            var returns = argTypes[0].name !== \"void\";\n            var argsList = \"\";\n            var argsListWired = \"\";\n            for(var i = 0; i < argCount - 2; ++i){\n                argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n                argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n            }\n            var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\n\" + \"if (arguments.length !== \" + (argCount - 2) + \") {\\n\" + \"throwBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n\" + \"}\\n\";\n            if (needsDestructorStack) invokerFnBody += \"var destructors = [];\\n\";\n            var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n            var args1 = [\n                \"throwBindingError\",\n                \"invoker\",\n                \"fn\",\n                \"runDestructors\",\n                \"retType\",\n                \"classParam\"\n            ];\n            var args2 = [\n                throwBindingError,\n                cppInvokerFunc,\n                cppTargetFunc,\n                runDestructors,\n                argTypes[0],\n                argTypes[1]\n            ];\n            if (isClassMethodFunc) invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n            for(var i = 0; i < argCount - 2; ++i){\n                invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n                args1.push(\"argType\" + i);\n                args2.push(argTypes[i + 2]);\n            }\n            if (isClassMethodFunc) argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n            invokerFnBody += (returns || isAsync ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n            if (needsDestructorStack) invokerFnBody += \"runDestructors(destructors);\\n\";\n            else for(var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i){\n                var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n                if (argTypes[i].destructorFunction !== null) {\n                    invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n                    args1.push(paramName + \"_dtor\");\n                    args2.push(argTypes[i].destructorFunction);\n                }\n            }\n            if (returns) invokerFnBody += \"var ret = retType.fromWireType(rv);\\nreturn ret;\\n\";\n            invokerFnBody += \"}\\n\";\n            args1.push(invokerFnBody);\n            return newFunc(Function, args1).apply(null, args2);\n        }\n        function __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\n            assert(argCount > 0);\n            var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n            invoker = embind__requireFunction(invokerSignature, invoker);\n            var args = [\n                rawConstructor\n            ];\n            var destructors = [];\n            whenDependentTypesAreResolved([], [\n                rawClassType\n            ], function(classType) {\n                classType = classType[0];\n                var humanName = \"constructor \" + classType.name;\n                if (undefined === classType.registeredClass.constructor_body) classType.registeredClass.constructor_body = [];\n                if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount - 1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n                classType.registeredClass.constructor_body[argCount - 1] = ()=>{\n                    throwUnboundTypeError(\"Cannot construct \" + classType.name + \" due to unbound types\", rawArgTypes);\n                };\n                whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n                    // Insert empty slot for context type (argTypes[1]).\n                    argTypes.splice(1, 0, null);\n                    classType.registeredClass.constructor_body[argCount - 1] = craftInvokerFunction(humanName, argTypes, null, invoker, rawConstructor);\n                    return [];\n                });\n                return [];\n            });\n        }\n        function __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual, isAsync) {\n            var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n            methodName = readLatin1String(methodName);\n            rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n            whenDependentTypesAreResolved([], [\n                rawClassType\n            ], function(classType) {\n                classType = classType[0];\n                var humanName = classType.name + \".\" + methodName;\n                if (methodName.startsWith(\"@@\")) methodName = Symbol[methodName.substring(2)];\n                if (isPureVirtual) classType.registeredClass.pureVirtualFunctions.push(methodName);\n                function unboundTypesHandler() {\n                    throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n                }\n                var proto = classType.registeredClass.instancePrototype;\n                var method = proto[methodName];\n                if (undefined === method || undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2) {\n                    // This is the first overload to be registered, OR we are replacing a\n                    // function in the base class with a function in the derived class.\n                    unboundTypesHandler.argCount = argCount - 2;\n                    unboundTypesHandler.className = classType.name;\n                    proto[methodName] = unboundTypesHandler;\n                } else {\n                    // There was an existing function with the same name registered. Set up\n                    // a function overload routing table.\n                    ensureOverloadTable(proto, methodName, humanName);\n                    proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n                }\n                whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n                    var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context, isAsync);\n                    // Replace the initial unbound-handler-stub function with the appropriate member function, now that all types\n                    // are resolved. If multiple overloads are registered for this function, the function goes into an overload table.\n                    if (undefined === proto[methodName].overloadTable) {\n                        // Set argCount in case an overload is registered later\n                        memberFunction.argCount = argCount - 2;\n                        proto[methodName] = memberFunction;\n                    } else proto[methodName].overloadTable[argCount - 2] = memberFunction;\n                    return [];\n                });\n                return [];\n            });\n        }\n        /** @constructor */ function HandleAllocator() {\n            // Reserve slot 0 so that 0 is always an invalid handle\n            this.allocated = [\n                undefined\n            ];\n            this.freelist = [];\n            this.get = function(id) {\n                assert(this.allocated[id] !== undefined, \"invalid handle: \" + id);\n                return this.allocated[id];\n            };\n            this.allocate = function(handle) {\n                let id = this.freelist.pop() || this.allocated.length;\n                this.allocated[id] = handle;\n                return id;\n            };\n            this.free = function(id) {\n                assert(this.allocated[id] !== undefined);\n                // Set the slot to `undefined` rather than using `delete` here since\n                // apparently arrays with holes in them can be less efficient.\n                this.allocated[id] = undefined;\n                this.freelist.push(id);\n            };\n        }\n        var emval_handles = new HandleAllocator();\n        function __emval_decref(handle) {\n            if (handle >= emval_handles.reserved && 0 === --emval_handles.get(handle).refcount) emval_handles.free(handle);\n        }\n        function count_emval_handles() {\n            var count = 0;\n            for(var i = emval_handles.reserved; i < emval_handles.allocated.length; ++i)if (emval_handles.allocated[i] !== undefined) ++count;\n            return count;\n        }\n        function init_emval() {\n            // reserve some special values. These never get de-allocated.\n            // The HandleAllocator takes care of reserving zero.\n            emval_handles.allocated.push({\n                value: undefined\n            }, {\n                value: null\n            }, {\n                value: true\n            }, {\n                value: false\n            });\n            emval_handles.reserved = emval_handles.allocated.length;\n            Module[\"count_emval_handles\"] = count_emval_handles;\n        }\n        var Emval = {\n            toValue: (handle)=>{\n                if (!handle) throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n                return emval_handles.get(handle).value;\n            },\n            toHandle: (value)=>{\n                switch(value){\n                    case undefined:\n                        return 1;\n                    case null:\n                        return 2;\n                    case true:\n                        return 3;\n                    case false:\n                        return 4;\n                    default:\n                        return emval_handles.allocate({\n                            refcount: 1,\n                            value: value\n                        });\n                }\n            }\n        };\n        function __embind_register_emval(rawType, name) {\n            name = readLatin1String(name);\n            registerType(rawType, {\n                name: name,\n                \"fromWireType\": function(handle) {\n                    var rv = Emval.toValue(handle);\n                    __emval_decref(handle);\n                    return rv;\n                },\n                \"toWireType\": function(destructors, value) {\n                    return Emval.toHandle(value);\n                },\n                \"argPackAdvance\": 8,\n                \"readValueFromPointer\": simpleReadValueFromPointer,\n                destructorFunction: null\n            });\n        }\n        function enumReadValueFromPointer(name, shift, signed) {\n            switch(shift){\n                case 0:\n                    return function(pointer) {\n                        var heap = signed ? HEAP8 : HEAPU8;\n                        return this[\"fromWireType\"](heap[pointer]);\n                    };\n                case 1:\n                    return function(pointer) {\n                        var heap = signed ? HEAP16 : HEAPU16;\n                        return this[\"fromWireType\"](heap[pointer >> 1]);\n                    };\n                case 2:\n                    return function(pointer) {\n                        var heap = signed ? HEAP32 : HEAPU32;\n                        return this[\"fromWireType\"](heap[pointer >> 2]);\n                    };\n                default:\n                    throw new TypeError(\"Unknown integer type: \" + name);\n            }\n        }\n        function __embind_register_enum(rawType, name, size, isSigned) {\n            var shift = getShiftFromSize(size);\n            name = readLatin1String(name);\n            function ctor() {}\n            ctor.values = {};\n            registerType(rawType, {\n                name: name,\n                constructor: ctor,\n                \"fromWireType\": function(c) {\n                    return this.constructor.values[c];\n                },\n                \"toWireType\": function(destructors, c) {\n                    return c.value;\n                },\n                \"argPackAdvance\": 8,\n                \"readValueFromPointer\": enumReadValueFromPointer(name, shift, isSigned),\n                destructorFunction: null\n            });\n            exposePublicSymbol(name, ctor);\n        }\n        function requireRegisteredType(rawType, humanName) {\n            var impl = registeredTypes[rawType];\n            if (undefined === impl) throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n            return impl;\n        }\n        function __embind_register_enum_value(rawEnumType, name, enumValue) {\n            var enumType = requireRegisteredType(rawEnumType, \"enum\");\n            name = readLatin1String(name);\n            var Enum = enumType.constructor;\n            var Value = Object.create(enumType.constructor.prototype, {\n                value: {\n                    value: enumValue\n                },\n                constructor: {\n                    value: createNamedFunction(enumType.name + \"_\" + name, function() {})\n                }\n            });\n            Enum.values[enumValue] = Value;\n            Enum[name] = Value;\n        }\n        function embindRepr(v) {\n            if (v === null) return \"null\";\n            var t = typeof v;\n            if (t === \"object\" || t === \"array\" || t === \"function\") return v.toString();\n            else return \"\" + v;\n        }\n        function floatReadValueFromPointer(name, shift) {\n            switch(shift){\n                case 2:\n                    return function(pointer) {\n                        return this[\"fromWireType\"](HEAPF32[pointer >> 2]);\n                    };\n                case 3:\n                    return function(pointer) {\n                        return this[\"fromWireType\"](HEAPF64[pointer >> 3]);\n                    };\n                default:\n                    throw new TypeError(\"Unknown float type: \" + name);\n            }\n        }\n        function __embind_register_float(rawType, name, size) {\n            var shift = getShiftFromSize(size);\n            name = readLatin1String(name);\n            registerType(rawType, {\n                name: name,\n                \"fromWireType\": function(value) {\n                    return value;\n                },\n                \"toWireType\": function(destructors, value) {\n                    if (typeof value != \"number\" && typeof value != \"boolean\") throw new TypeError('Cannot convert \"' + embindRepr(value) + '\" to ' + this.name);\n                    // The VM will perform JS to Wasm value conversion, according to the spec:\n                    // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\n                    return value;\n                },\n                \"argPackAdvance\": 8,\n                \"readValueFromPointer\": floatReadValueFromPointer(name, shift),\n                destructorFunction: null\n            });\n        }\n        function integerReadValueFromPointer(name, shift, signed) {\n            // integers are quite common, so generate very specialized functions\n            switch(shift){\n                case 0:\n                    return signed ? function readS8FromPointer(pointer) {\n                        return HEAP8[pointer];\n                    } : function readU8FromPointer(pointer) {\n                        return HEAPU8[pointer];\n                    };\n                case 1:\n                    return signed ? function readS16FromPointer(pointer) {\n                        return HEAP16[pointer >> 1];\n                    } : function readU16FromPointer(pointer) {\n                        return HEAPU16[pointer >> 1];\n                    };\n                case 2:\n                    return signed ? function readS32FromPointer(pointer) {\n                        return HEAP32[pointer >> 2];\n                    } : function readU32FromPointer(pointer) {\n                        return HEAPU32[pointer >> 2];\n                    };\n                default:\n                    throw new TypeError(\"Unknown integer type: \" + name);\n            }\n        }\n        function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n            name = readLatin1String(name);\n            // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come\n            // out as 'i32 -1'. Always treat those as max u32.\n            if (maxRange === -1) maxRange = 4294967295;\n            var shift = getShiftFromSize(size);\n            var fromWireType = (value)=>value;\n            if (minRange === 0) {\n                var bitshift = 32 - 8 * size;\n                fromWireType = (value)=>value << bitshift >>> bitshift;\n            }\n            var isUnsignedType = name.includes(\"unsigned\");\n            var checkAssertions = (value, toTypeName)=>{\n                if (typeof value != \"number\" && typeof value != \"boolean\") throw new TypeError('Cannot convert \"' + embindRepr(value) + '\" to ' + toTypeName);\n                if (value < minRange || value > maxRange) throw new TypeError('Passing a number \"' + embindRepr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\n            };\n            var toWireType;\n            if (isUnsignedType) toWireType = function(destructors, value) {\n                checkAssertions(value, this.name);\n                return value >>> 0;\n            };\n            else toWireType = function(destructors, value) {\n                checkAssertions(value, this.name);\n                // The VM will perform JS to Wasm value conversion, according to the spec:\n                // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\n                return value;\n            };\n            registerType(primitiveType, {\n                name: name,\n                \"fromWireType\": fromWireType,\n                \"toWireType\": toWireType,\n                \"argPackAdvance\": 8,\n                \"readValueFromPointer\": integerReadValueFromPointer(name, shift, minRange !== 0),\n                destructorFunction: null\n            });\n        }\n        function __embind_register_memory_view(rawType, dataTypeIndex, name) {\n            var typeMapping = [\n                Int8Array,\n                Uint8Array,\n                Int16Array,\n                Uint16Array,\n                Int32Array,\n                Uint32Array,\n                Float32Array,\n                Float64Array\n            ];\n            var TA = typeMapping[dataTypeIndex];\n            function decodeMemoryView(handle) {\n                handle = handle >> 2;\n                var heap = HEAPU32;\n                var size = heap[handle]; // in elements\n                var data = heap[handle + 1]; // byte offset into emscripten heap\n                return new TA(heap.buffer, data, size);\n            }\n            name = readLatin1String(name);\n            registerType(rawType, {\n                name: name,\n                \"fromWireType\": decodeMemoryView,\n                \"argPackAdvance\": 8,\n                \"readValueFromPointer\": decodeMemoryView\n            }, {\n                ignoreDuplicateRegistrations: true\n            });\n        }\n        function __embind_register_smart_ptr(rawType, rawPointeeType, name, sharingPolicy, getPointeeSignature, rawGetPointee, constructorSignature, rawConstructor, shareSignature, rawShare, destructorSignature, rawDestructor) {\n            name = readLatin1String(name);\n            rawGetPointee = embind__requireFunction(getPointeeSignature, rawGetPointee);\n            rawConstructor = embind__requireFunction(constructorSignature, rawConstructor);\n            rawShare = embind__requireFunction(shareSignature, rawShare);\n            rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n            whenDependentTypesAreResolved([\n                rawType\n            ], [\n                rawPointeeType\n            ], function(pointeeType) {\n                pointeeType = pointeeType[0];\n                var registeredPointer = new RegisteredPointer(name, pointeeType.registeredClass, false, false, // smart pointer properties\n                true, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor);\n                return [\n                    registeredPointer\n                ];\n            });\n        }\n        function __embind_register_std_string(rawType, name) {\n            name = readLatin1String(name);\n            var stdStringIsUTF8 = name === \"std::string\";\n            registerType(rawType, {\n                name: name,\n                \"fromWireType\": function(value) {\n                    var length = HEAPU32[value >> 2];\n                    var payload = value + 4;\n                    var str;\n                    if (stdStringIsUTF8) {\n                        var decodeStartPtr = payload;\n                        // Looping here to support possible embedded '0' bytes\n                        for(var i = 0; i <= length; ++i){\n                            var currentBytePtr = payload + i;\n                            if (i == length || HEAPU8[currentBytePtr] == 0) {\n                                var maxRead = currentBytePtr - decodeStartPtr;\n                                var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                                if (str === undefined) str = stringSegment;\n                                else {\n                                    str += String.fromCharCode(0);\n                                    str += stringSegment;\n                                }\n                                decodeStartPtr = currentBytePtr + 1;\n                            }\n                        }\n                    } else {\n                        var a = new Array(length);\n                        for(var i = 0; i < length; ++i)a[i] = String.fromCharCode(HEAPU8[payload + i]);\n                        str = a.join(\"\");\n                    }\n                    _free(value);\n                    return str;\n                },\n                \"toWireType\": function(destructors, value) {\n                    if (value instanceof ArrayBuffer) value = new Uint8Array(value);\n                    var length;\n                    var valueIsOfTypeString = typeof value == \"string\";\n                    if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) throwBindingError(\"Cannot pass non-string to std::string\");\n                    if (stdStringIsUTF8 && valueIsOfTypeString) length = lengthBytesUTF8(value);\n                    else length = value.length;\n                    // assumes 4-byte alignment\n                    var base = _malloc(4 + length + 1);\n                    var ptr = base + 4;\n                    HEAPU32[base >> 2] = length;\n                    if (stdStringIsUTF8 && valueIsOfTypeString) stringToUTF8(value, ptr, length + 1);\n                    else {\n                        if (valueIsOfTypeString) for(var i = 0; i < length; ++i){\n                            var charCode = value.charCodeAt(i);\n                            if (charCode > 255) {\n                                _free(ptr);\n                                throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n                            }\n                            HEAPU8[ptr + i] = charCode;\n                        }\n                        else for(var i = 0; i < length; ++i)HEAPU8[ptr + i] = value[i];\n                    }\n                    if (destructors !== null) destructors.push(_free, base);\n                    return base;\n                },\n                \"argPackAdvance\": 8,\n                \"readValueFromPointer\": simpleReadValueFromPointer,\n                destructorFunction: function(ptr) {\n                    _free(ptr);\n                }\n            });\n        }\n        var UTF16Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n        function UTF16ToString(ptr, maxBytesToRead) {\n            assert(ptr % 2 == 0, \"Pointer passed to UTF16ToString must be aligned to two bytes!\");\n            var endPtr = ptr;\n            // TextDecoder needs to know the byte length in advance, it doesn't stop on\n            // null terminator by itself.\n            // Also, use the length info to avoid running tiny strings through\n            // TextDecoder, since .subarray() allocates garbage.\n            var idx = endPtr >> 1;\n            var maxIdx = idx + maxBytesToRead / 2;\n            // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n            // will always evaluate to true. This saves on code size.\n            while(!(idx >= maxIdx) && HEAPU16[idx])++idx;\n            endPtr = idx << 1;\n            if (endPtr - ptr > 32 && UTF16Decoder) return UTF16Decoder.decode(HEAPU8.slice(ptr, endPtr));\n            // Fallback: decode without UTF16Decoder\n            var str = \"\";\n            // If maxBytesToRead is not passed explicitly, it will be undefined, and the\n            // for-loop's condition will always evaluate to true. The loop is then\n            // terminated on the first null char.\n            for(var i = 0; !(i >= maxBytesToRead / 2); ++i){\n                var codeUnit = HEAP16[ptr + i * 2 >> 1];\n                if (codeUnit == 0) break;\n                // fromCharCode constructs a character from a UTF-16 code unit, so we can\n                // pass the UTF16 string right through.\n                str += String.fromCharCode(codeUnit);\n            }\n            return str;\n        }\n        function stringToUTF16(str, outPtr, maxBytesToWrite) {\n            assert(outPtr % 2 == 0, \"Pointer passed to stringToUTF16 must be aligned to two bytes!\");\n            assert(typeof maxBytesToWrite == \"number\", \"stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");\n            // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n            if (maxBytesToWrite === undefined) maxBytesToWrite = 0x7FFFFFFF;\n            if (maxBytesToWrite < 2) return 0;\n            maxBytesToWrite -= 2; // Null terminator.\n            var startPtr = outPtr;\n            var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n            for(var i = 0; i < numCharsToWrite; ++i){\n                // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\n                var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n                HEAP16[outPtr >> 1] = codeUnit;\n                outPtr += 2;\n            }\n            // Null-terminate the pointer to the HEAP.\n            HEAP16[outPtr >> 1] = 0;\n            return outPtr - startPtr;\n        }\n        function lengthBytesUTF16(str) {\n            return str.length * 2;\n        }\n        function UTF32ToString(ptr, maxBytesToRead) {\n            assert(ptr % 4 == 0, \"Pointer passed to UTF32ToString must be aligned to four bytes!\");\n            var i = 0;\n            var str = \"\";\n            // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n            // will always evaluate to true. This saves on code size.\n            while(!(i >= maxBytesToRead / 4)){\n                var utf32 = HEAP32[ptr + i * 4 >> 2];\n                if (utf32 == 0) break;\n                ++i;\n                // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\n                // See http://unicode.org/faq/utf_bom.html#utf16-3\n                if (utf32 >= 0x10000) {\n                    var ch = utf32 - 0x10000;\n                    str += String.fromCharCode(0xD800 | ch >> 10, 0xDC00 | ch & 0x3FF);\n                } else str += String.fromCharCode(utf32);\n            }\n            return str;\n        }\n        function stringToUTF32(str, outPtr, maxBytesToWrite) {\n            assert(outPtr % 4 == 0, \"Pointer passed to stringToUTF32 must be aligned to four bytes!\");\n            assert(typeof maxBytesToWrite == \"number\", \"stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");\n            // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n            if (maxBytesToWrite === undefined) maxBytesToWrite = 0x7FFFFFFF;\n            if (maxBytesToWrite < 4) return 0;\n            var startPtr = outPtr;\n            var endPtr = startPtr + maxBytesToWrite - 4;\n            for(var i = 0; i < str.length; ++i){\n                // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n                // See http://unicode.org/faq/utf_bom.html#utf16-3\n                var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n                if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {\n                    var trailSurrogate = str.charCodeAt(++i);\n                    codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | trailSurrogate & 0x3FF;\n                }\n                HEAP32[outPtr >> 2] = codeUnit;\n                outPtr += 4;\n                if (outPtr + 4 > endPtr) break;\n            }\n            // Null-terminate the pointer to the HEAP.\n            HEAP32[outPtr >> 2] = 0;\n            return outPtr - startPtr;\n        }\n        function lengthBytesUTF32(str) {\n            var len = 0;\n            for(var i = 0; i < str.length; ++i){\n                // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n                // See http://unicode.org/faq/utf_bom.html#utf16-3\n                var codeUnit = str.charCodeAt(i);\n                if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.\n                len += 4;\n            }\n            return len;\n        }\n        function __embind_register_std_wstring(rawType, charSize, name) {\n            name = readLatin1String(name);\n            var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n            if (charSize === 2) {\n                decodeString = UTF16ToString;\n                encodeString = stringToUTF16;\n                lengthBytesUTF = lengthBytesUTF16;\n                getHeap = ()=>HEAPU16;\n                shift = 1;\n            } else if (charSize === 4) {\n                decodeString = UTF32ToString;\n                encodeString = stringToUTF32;\n                lengthBytesUTF = lengthBytesUTF32;\n                getHeap = ()=>HEAPU32;\n                shift = 2;\n            }\n            registerType(rawType, {\n                name: name,\n                \"fromWireType\": function(value) {\n                    // Code mostly taken from _embind_register_std_string fromWireType\n                    var length = HEAPU32[value >> 2];\n                    var HEAP = getHeap();\n                    var str;\n                    var decodeStartPtr = value + 4;\n                    // Looping here to support possible embedded '0' bytes\n                    for(var i = 0; i <= length; ++i){\n                        var currentBytePtr = value + 4 + i * charSize;\n                        if (i == length || HEAP[currentBytePtr >> shift] == 0) {\n                            var maxReadBytes = currentBytePtr - decodeStartPtr;\n                            var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n                            if (str === undefined) str = stringSegment;\n                            else {\n                                str += String.fromCharCode(0);\n                                str += stringSegment;\n                            }\n                            decodeStartPtr = currentBytePtr + charSize;\n                        }\n                    }\n                    _free(value);\n                    return str;\n                },\n                \"toWireType\": function(destructors, value) {\n                    if (!(typeof value == \"string\")) throwBindingError(\"Cannot pass non-string to C++ string type \" + name);\n                    // assumes 4-byte alignment\n                    var length = lengthBytesUTF(value);\n                    var ptr = _malloc(4 + length + charSize);\n                    HEAPU32[ptr >> 2] = length >> shift;\n                    encodeString(value, ptr + 4, length + charSize);\n                    if (destructors !== null) destructors.push(_free, ptr);\n                    return ptr;\n                },\n                \"argPackAdvance\": 8,\n                \"readValueFromPointer\": simpleReadValueFromPointer,\n                destructorFunction: function(ptr) {\n                    _free(ptr);\n                }\n            });\n        }\n        function __embind_register_void(rawType, name) {\n            name = readLatin1String(name);\n            registerType(rawType, {\n                isVoid: true,\n                name: name,\n                \"argPackAdvance\": 0,\n                \"fromWireType\": function() {\n                    return undefined;\n                },\n                \"toWireType\": function(destructors, o) {\n                    // TODO: assert if anything else is given?\n                    return undefined;\n                }\n            });\n        }\n        function __emscripten_default_pthread_stack_size() {\n            return 65536;\n        }\n        var nowIsMonotonic = true;\n        function __emscripten_get_now_is_monotonic() {\n            return nowIsMonotonic;\n        }\n        function maybeExit() {\n            if (!keepRuntimeAlive()) try {\n                if (ENVIRONMENT_IS_PTHREAD) __emscripten_thread_exit(EXITSTATUS);\n                else _exit(EXITSTATUS);\n            } catch (e) {\n                handleException(e);\n            }\n        }\n        function callUserCallback(func) {\n            if (ABORT) {\n                err(\"user callback triggered after runtime exited or application aborted.  Ignoring.\");\n                return;\n            }\n            try {\n                func();\n                maybeExit();\n            } catch (e) {\n                handleException(e);\n            }\n        }\n        function __emscripten_thread_mailbox_await(pthread_ptr) {\n            if (typeof Atomics.waitAsync === \"function\") {\n                // TODO: How to make this work with wasm64?\n                var wait = Atomics.waitAsync(HEAP32, pthread_ptr >> 2, pthread_ptr);\n                assert(wait.async);\n                wait.value.then(checkMailbox);\n                var waitingAsync = pthread_ptr + 128;\n                Atomics.store(HEAP32, waitingAsync >> 2, 1);\n            }\n        }\n        Module[\"__emscripten_thread_mailbox_await\"] = __emscripten_thread_mailbox_await;\n        function checkMailbox() {\n            // Only check the mailbox if we have a live pthread runtime. We implement\n            // pthread_self to return 0 if there is no live runtime.\n            var pthread_ptr = _pthread_self();\n            if (pthread_ptr) {\n                // If we are using Atomics.waitAsync as our notification mechanism, wait for\n                // a notification before processing the mailbox to avoid missing any work.\n                __emscripten_thread_mailbox_await(pthread_ptr);\n                callUserCallback(()=>__emscripten_check_mailbox());\n            }\n        }\n        Module[\"checkMailbox\"] = checkMailbox;\n        function __emscripten_notify_mailbox_postmessage(targetThreadId, currThreadId, mainThreadId) {\n            if (targetThreadId == currThreadId) setTimeout(()=>checkMailbox());\n            else if (ENVIRONMENT_IS_PTHREAD) postMessage({\n                \"targetThread\": targetThreadId,\n                \"cmd\": \"checkMailbox\"\n            });\n            else {\n                var worker = PThread.pthreads[targetThreadId];\n                if (!worker) {\n                    err(\"Cannot send message to thread with ID \" + targetThreadId + \", unknown thread ID!\");\n                    return;\n                }\n                worker.postMessage({\n                    \"cmd\": \"checkMailbox\"\n                });\n            }\n        }\n        function __emscripten_set_offscreencanvas_size(target, width, height) {\n            err(\"emscripten_set_offscreencanvas_size: Build with -sOFFSCREENCANVAS_SUPPORT=1 to enable transferring canvases to pthreads.\");\n            return -1;\n        }\n        function emval_lookupTypes(argCount, argTypes) {\n            var a = new Array(argCount);\n            for(var i = 0; i < argCount; ++i)a[i] = requireRegisteredType(HEAPU32[argTypes + i * 4 >> 2], \"parameter \" + i);\n            return a;\n        }\n        function __emval_call(handle, argCount, argTypes, argv) {\n            handle = Emval.toValue(handle);\n            var types = emval_lookupTypes(argCount, argTypes);\n            var args = new Array(argCount);\n            for(var i = 0; i < argCount; ++i){\n                var type = types[i];\n                args[i] = type[\"readValueFromPointer\"](argv);\n                argv += type[\"argPackAdvance\"];\n            }\n            var rv = handle.apply(undefined, args);\n            return Emval.toHandle(rv);\n        }\n        function __emval_incref(handle) {\n            if (handle > 4) emval_handles.get(handle).refcount += 1;\n        }\n        function __emval_take_value(type, arg) {\n            type = requireRegisteredType(type, \"_emval_take_value\");\n            var v = type[\"readValueFromPointer\"](arg);\n            return Emval.toHandle(v);\n        }\n        function _abort() {\n            abort(\"native code called abort()\");\n        }\n        function _emscripten_check_blocking_allowed() {\n            if (ENVIRONMENT_IS_WORKER) return; // Blocking in a worker/pthread is fine.\n            warnOnce(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\");\n        }\n        function _emscripten_date_now() {\n            return Date.now();\n        }\n        function runtimeKeepalivePush() {\n            runtimeKeepaliveCounter += 1;\n        }\n        function _emscripten_exit_with_live_runtime() {\n            runtimeKeepalivePush();\n            throw \"unwind\";\n        }\n        function getHeapMax() {\n            return HEAPU8.length;\n        }\n        function _emscripten_get_heap_max() {\n            return getHeapMax();\n        }\n        var _emscripten_get_now;\n        _emscripten_get_now = ()=>performance.timeOrigin + performance.now();\n        function _emscripten_num_logical_cores() {\n            return navigator[\"hardwareConcurrency\"];\n        }\n        /** @type{function(number, (number|boolean), ...(number|boolean))} */ function proxyToMainThread(index, sync) {\n            // Additional arguments are passed after those two, which are the actual\n            // function arguments.\n            // The serialization buffer contains the number of call params, and then\n            // all the args here.\n            // We also pass 'sync' to C separately, since C needs to look at it.\n            var numCallArgs = arguments.length - 2;\n            var outerArgs = arguments;\n            var maxArgs = 19;\n            if (numCallArgs > maxArgs) throw \"proxyToMainThread: Too many arguments \" + numCallArgs + \" to proxied function idx=\" + index + \", maximum supported is \" + maxArgs;\n            // Allocate a buffer, which will be copied by the C code.\n            return withStackSave(()=>{\n                // First passed parameter specifies the number of arguments to the function.\n                // When BigInt support is enabled, we must handle types in a more complex\n                // way, detecting at runtime if a value is a BigInt or not (as we have no\n                // type info here). To do that, add a \"prefix\" before each value that\n                // indicates if it is a BigInt, which effectively doubles the number of\n                // values we serialize for proxying. TODO: pack this?\n                var serializedNumCallArgs = numCallArgs;\n                var args = stackAlloc(serializedNumCallArgs * 8);\n                var b = args >> 3;\n                for(var i = 0; i < numCallArgs; i++){\n                    var arg = outerArgs[2 + i];\n                    HEAPF64[b + i] = arg;\n                }\n                return __emscripten_run_in_main_runtime_thread_js(index, serializedNumCallArgs, args, sync);\n            });\n        }\n        var emscripten_receive_on_main_thread_js_callArgs = [];\n        function _emscripten_receive_on_main_thread_js(index, numCallArgs, args) {\n            emscripten_receive_on_main_thread_js_callArgs.length = numCallArgs;\n            var b = args >> 3;\n            for(var i = 0; i < numCallArgs; i++)emscripten_receive_on_main_thread_js_callArgs[i] = HEAPF64[b + i];\n            // Proxied JS library funcs are encoded as positive values, and\n            // EM_ASMs as negative values (see include_asm_consts)\n            var func = proxiedFunctionTable[index];\n            assert(func.length == numCallArgs, \"Call args mismatch in emscripten_receive_on_main_thread_js\");\n            return func.apply(null, emscripten_receive_on_main_thread_js_callArgs);\n        }\n        function abortOnCannotGrowMemory(requestedSize) {\n            abort(\"Cannot enlarge memory arrays to size \" + requestedSize + \" bytes (OOM). Either (1) compile with -sINITIAL_MEMORY=X with X higher than the current value \" + HEAP8.length + \", (2) compile with -sALLOW_MEMORY_GROWTH which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with -sABORTING_MALLOC=0\");\n        }\n        function _emscripten_resize_heap(requestedSize) {\n            var oldSize = HEAPU8.length;\n            requestedSize = requestedSize >>> 0;\n            abortOnCannotGrowMemory(requestedSize);\n        }\n        var ENV = {};\n        function getExecutableName() {\n            return thisProgram || \"./this.program\";\n        }\n        function getEnvStrings() {\n            if (!getEnvStrings.strings) {\n                // Default values.\n                // Browser language detection #8751\n                var lang = (typeof navigator == \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n                var env = {\n                    \"USER\": \"web_user\",\n                    \"LOGNAME\": \"web_user\",\n                    \"PATH\": \"/\",\n                    \"PWD\": \"/\",\n                    \"HOME\": \"/home/web_user\",\n                    \"LANG\": lang,\n                    \"_\": getExecutableName()\n                };\n                // Apply the user-provided values, if any.\n                for(var x in ENV)// x is a key in ENV; if ENV[x] is undefined, that means it was\n                // explicitly set to be so. We allow user code to do that to\n                // force variables with default values to remain unset.\n                if (ENV[x] === undefined) delete env[x];\n                else env[x] = ENV[x];\n                var strings = [];\n                for(var x in env)strings.push(x + \"=\" + env[x]);\n                getEnvStrings.strings = strings;\n            }\n            return getEnvStrings.strings;\n        }\n        function stringToAscii(str, buffer) {\n            for(var i = 0; i < str.length; ++i){\n                assert(str.charCodeAt(i) === (str.charCodeAt(i) & 0xff));\n                HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n            }\n            // Null-terminate the string\n            HEAP8[buffer >> 0] = 0;\n        }\n        function _environ_get(__environ, environ_buf) {\n            if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(4, 1, __environ, environ_buf);\n            var bufSize = 0;\n            getEnvStrings().forEach(function(string, i) {\n                var ptr = environ_buf + bufSize;\n                HEAPU32[__environ + i * 4 >> 2] = ptr;\n                stringToAscii(string, ptr);\n                bufSize += string.length + 1;\n            });\n            return 0;\n        }\n        function _environ_sizes_get(penviron_count, penviron_buf_size) {\n            if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(5, 1, penviron_count, penviron_buf_size);\n            var strings = getEnvStrings();\n            HEAPU32[penviron_count >> 2] = strings.length;\n            var bufSize = 0;\n            strings.forEach(function(string) {\n                bufSize += string.length + 1;\n            });\n            HEAPU32[penviron_buf_size >> 2] = bufSize;\n            return 0;\n        }\n        function _fd_close(fd) {\n            if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(6, 1, fd);\n            try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                FS.close(stream);\n                return 0;\n            } catch (e) {\n                if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n                return e.errno;\n            }\n        }\n        /** @param {number=} offset */ function doReadv(stream, iov, iovcnt, offset) {\n            var ret = 0;\n            for(var i = 0; i < iovcnt; i++){\n                var ptr = HEAPU32[iov >> 2];\n                var len = HEAPU32[iov + 4 >> 2];\n                iov += 8;\n                var curr = FS.read(stream, HEAP8, ptr, len, offset);\n                if (curr < 0) return -1;\n                ret += curr;\n                if (curr < len) break; // nothing more to read\n                if (typeof offset !== \"undefined\") offset += curr;\n            }\n            return ret;\n        }\n        function _fd_read(fd, iov, iovcnt, pnum) {\n            if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(7, 1, fd, iov, iovcnt, pnum);\n            try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                var num = doReadv(stream, iov, iovcnt);\n                HEAPU32[pnum >> 2] = num;\n                return 0;\n            } catch (e) {\n                if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n                return e.errno;\n            }\n        }\n        function convertI32PairToI53Checked(lo, hi) {\n            assert(lo == lo >>> 0 || lo == (lo | 0)); // lo should either be a i32 or a u32\n            assert(hi === (hi | 0)); // hi should be a i32\n            return hi + 0x200000 >>> 0 < 0x400001 - !!lo ? (lo >>> 0) + hi * 4294967296 : NaN;\n        }\n        function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n            if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(8, 1, fd, offset_low, offset_high, whence, newOffset);\n            try {\n                var offset = convertI32PairToI53Checked(offset_low, offset_high);\n                if (isNaN(offset)) return 61;\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                FS.llseek(stream, offset, whence);\n                tempI64 = [\n                    stream.position >>> 0,\n                    (tempDouble = stream.position, +Math.abs(tempDouble) >= 1.0 ? tempDouble > 0.0 ? (Math.min(+Math.floor(tempDouble / 4294967296.0), 4294967295.0) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0) >>> 0 : 0)\n                ], HEAP32[newOffset >> 2] = tempI64[0], HEAP32[newOffset + 4 >> 2] = tempI64[1];\n                if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state\n                return 0;\n            } catch (e) {\n                if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n                return e.errno;\n            }\n        }\n        /** @param {number=} offset */ function doWritev(stream, iov, iovcnt, offset) {\n            var ret = 0;\n            for(var i = 0; i < iovcnt; i++){\n                var ptr = HEAPU32[iov >> 2];\n                var len = HEAPU32[iov + 4 >> 2];\n                iov += 8;\n                var curr = FS.write(stream, HEAP8, ptr, len, offset);\n                if (curr < 0) return -1;\n                ret += curr;\n                if (typeof offset !== \"undefined\") offset += curr;\n            }\n            return ret;\n        }\n        function _fd_write(fd, iov, iovcnt, pnum) {\n            if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(9, 1, fd, iov, iovcnt, pnum);\n            try {\n                var stream = SYSCALLS.getStreamFromFD(fd);\n                var num = doWritev(stream, iov, iovcnt);\n                HEAPU32[pnum >> 2] = num;\n                return 0;\n            } catch (e) {\n                if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n                return e.errno;\n            }\n        }\n        function isLeapYear(year) {\n            return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n        }\n        function arraySum(array, index) {\n            var sum = 0;\n            for(var i = 0; i <= index; sum += array[i++]);\n            return sum;\n        }\n        var MONTH_DAYS_LEAP = [\n            31,\n            29,\n            31,\n            30,\n            31,\n            30,\n            31,\n            31,\n            30,\n            31,\n            30,\n            31\n        ];\n        var MONTH_DAYS_REGULAR = [\n            31,\n            28,\n            31,\n            30,\n            31,\n            30,\n            31,\n            31,\n            30,\n            31,\n            30,\n            31\n        ];\n        function addDays(date, days) {\n            var newDate = new Date(date.getTime());\n            while(days > 0){\n                var leap = isLeapYear(newDate.getFullYear());\n                var currentMonth = newDate.getMonth();\n                var daysInCurrentMonth = (leap ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[currentMonth];\n                if (days > daysInCurrentMonth - newDate.getDate()) {\n                    // we spill over to next month\n                    days -= daysInCurrentMonth - newDate.getDate() + 1;\n                    newDate.setDate(1);\n                    if (currentMonth < 11) newDate.setMonth(currentMonth + 1);\n                    else {\n                        newDate.setMonth(0);\n                        newDate.setFullYear(newDate.getFullYear() + 1);\n                    }\n                } else {\n                    // we stay in current month\n                    newDate.setDate(newDate.getDate() + days);\n                    return newDate;\n                }\n            }\n            return newDate;\n        }\n        function writeArrayToMemory(array, buffer) {\n            assert(array.length >= 0, \"writeArrayToMemory array must have a length (should be an array or typed array)\");\n            HEAP8.set(array, buffer);\n        }\n        function _strftime(s, maxsize, format, tm) {\n            // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);\n            // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html\n            var tm_zone = HEAP32[tm + 40 >> 2];\n            var date = {\n                tm_sec: HEAP32[tm >> 2],\n                tm_min: HEAP32[tm + 4 >> 2],\n                tm_hour: HEAP32[tm + 8 >> 2],\n                tm_mday: HEAP32[tm + 12 >> 2],\n                tm_mon: HEAP32[tm + 16 >> 2],\n                tm_year: HEAP32[tm + 20 >> 2],\n                tm_wday: HEAP32[tm + 24 >> 2],\n                tm_yday: HEAP32[tm + 28 >> 2],\n                tm_isdst: HEAP32[tm + 32 >> 2],\n                tm_gmtoff: HEAP32[tm + 36 >> 2],\n                tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\"\n            };\n            var pattern = UTF8ToString(format);\n            // expand format\n            var EXPANSION_RULES_1 = {\n                \"%c\": \"%a %b %d %H:%M:%S %Y\",\n                \"%D\": \"%m/%d/%y\",\n                \"%F\": \"%Y-%m-%d\",\n                \"%h\": \"%b\",\n                \"%r\": \"%I:%M:%S %p\",\n                \"%R\": \"%H:%M\",\n                \"%T\": \"%H:%M:%S\",\n                \"%x\": \"%m/%d/%y\",\n                \"%X\": \"%H:%M:%S\",\n                // Modified Conversion Specifiers\n                \"%Ec\": \"%c\",\n                \"%EC\": \"%C\",\n                \"%Ex\": \"%m/%d/%y\",\n                \"%EX\": \"%H:%M:%S\",\n                \"%Ey\": \"%y\",\n                \"%EY\": \"%Y\",\n                \"%Od\": \"%d\",\n                \"%Oe\": \"%e\",\n                \"%OH\": \"%H\",\n                \"%OI\": \"%I\",\n                \"%Om\": \"%m\",\n                \"%OM\": \"%M\",\n                \"%OS\": \"%S\",\n                \"%Ou\": \"%u\",\n                \"%OU\": \"%U\",\n                \"%OV\": \"%V\",\n                \"%Ow\": \"%w\",\n                \"%OW\": \"%W\",\n                \"%Oy\": \"%y\"\n            };\n            for(var rule in EXPANSION_RULES_1)pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n            var WEEKDAYS = [\n                \"Sunday\",\n                \"Monday\",\n                \"Tuesday\",\n                \"Wednesday\",\n                \"Thursday\",\n                \"Friday\",\n                \"Saturday\"\n            ];\n            var MONTHS = [\n                \"January\",\n                \"February\",\n                \"March\",\n                \"April\",\n                \"May\",\n                \"June\",\n                \"July\",\n                \"August\",\n                \"September\",\n                \"October\",\n                \"November\",\n                \"December\"\n            ];\n            function leadingSomething(value, digits, character) {\n                var str = typeof value == \"number\" ? value.toString() : value || \"\";\n                while(str.length < digits)str = character[0] + str;\n                return str;\n            }\n            function leadingNulls(value, digits) {\n                return leadingSomething(value, digits, \"0\");\n            }\n            function compareByDay(date1, date2) {\n                function sgn(value) {\n                    return value < 0 ? -1 : value > 0 ? 1 : 0;\n                }\n                var compare;\n                if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n                    if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) compare = sgn(date1.getDate() - date2.getDate());\n                }\n                return compare;\n            }\n            function getFirstWeekStartDate(janFourth) {\n                switch(janFourth.getDay()){\n                    case 0:\n                        return new Date(janFourth.getFullYear() - 1, 11, 29);\n                    case 1:\n                        return janFourth;\n                    case 2:\n                        return new Date(janFourth.getFullYear(), 0, 3);\n                    case 3:\n                        return new Date(janFourth.getFullYear(), 0, 2);\n                    case 4:\n                        return new Date(janFourth.getFullYear(), 0, 1);\n                    case 5:\n                        return new Date(janFourth.getFullYear() - 1, 11, 31);\n                    case 6:\n                        return new Date(janFourth.getFullYear() - 1, 11, 30);\n                }\n            }\n            function getWeekBasedYear(date) {\n                var thisDate = addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\n                var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n                var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n                var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n                var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n                if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n                    // this date is after the start of the first week of this year\n                    if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) return thisDate.getFullYear() + 1;\n                    return thisDate.getFullYear();\n                }\n                return thisDate.getFullYear() - 1;\n            }\n            var EXPANSION_RULES_2 = {\n                \"%a\": function(date) {\n                    return WEEKDAYS[date.tm_wday].substring(0, 3);\n                },\n                \"%A\": function(date) {\n                    return WEEKDAYS[date.tm_wday];\n                },\n                \"%b\": function(date) {\n                    return MONTHS[date.tm_mon].substring(0, 3);\n                },\n                \"%B\": function(date) {\n                    return MONTHS[date.tm_mon];\n                },\n                \"%C\": function(date) {\n                    var year = date.tm_year + 1900;\n                    return leadingNulls(year / 100 | 0, 2);\n                },\n                \"%d\": function(date) {\n                    return leadingNulls(date.tm_mday, 2);\n                },\n                \"%e\": function(date) {\n                    return leadingSomething(date.tm_mday, 2, \" \");\n                },\n                \"%g\": function(date) {\n                    // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year.\n                    // In this system, weeks begin on a Monday and week 1 of the year is the week that includes\n                    // January 4th, which is also the week that includes the first Thursday of the year, and\n                    // is also the first week that contains at least four days in the year.\n                    // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of\n                    // the last week of the preceding year; thus, for Saturday 2nd January 1999,\n                    // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th,\n                    // or 31st is a Monday, it and any following days are part of week 1 of the following year.\n                    // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.\n                    return getWeekBasedYear(date).toString().substring(2);\n                },\n                \"%G\": function(date) {\n                    return getWeekBasedYear(date);\n                },\n                \"%H\": function(date) {\n                    return leadingNulls(date.tm_hour, 2);\n                },\n                \"%I\": function(date) {\n                    var twelveHour = date.tm_hour;\n                    if (twelveHour == 0) twelveHour = 12;\n                    else if (twelveHour > 12) twelveHour -= 12;\n                    return leadingNulls(twelveHour, 2);\n                },\n                \"%j\": function(date) {\n                    // Day of the year (001-366)\n                    return leadingNulls(date.tm_mday + arraySum(isLeapYear(date.tm_year + 1900) ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);\n                },\n                \"%m\": function(date) {\n                    return leadingNulls(date.tm_mon + 1, 2);\n                },\n                \"%M\": function(date) {\n                    return leadingNulls(date.tm_min, 2);\n                },\n                \"%n\": function() {\n                    return \"\\n\";\n                },\n                \"%p\": function(date) {\n                    if (date.tm_hour >= 0 && date.tm_hour < 12) return \"AM\";\n                    return \"PM\";\n                },\n                \"%S\": function(date) {\n                    return leadingNulls(date.tm_sec, 2);\n                },\n                \"%t\": function() {\n                    return \"\t\";\n                },\n                \"%u\": function(date) {\n                    return date.tm_wday || 7;\n                },\n                \"%U\": function(date) {\n                    var days = date.tm_yday + 7 - date.tm_wday;\n                    return leadingNulls(Math.floor(days / 7), 2);\n                },\n                \"%V\": function(date) {\n                    // Replaced by the week number of the year (Monday as the first day of the week)\n                    // as a decimal number [01,53]. If the week containing 1 January has four\n                    // or more days in the new year, then it is considered week 1.\n                    // Otherwise, it is the last week of the previous year, and the next week is week 1.\n                    // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]\n                    var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7) / 7);\n                    // If 1 Jan is just 1-3 days past Monday, the previous week\n                    // is also in this year.\n                    if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) val++;\n                    if (!val) {\n                        val = 52;\n                        // If 31 December of prev year a Thursday, or Friday of a\n                        // leap year, then the prev year has 53 weeks.\n                        var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\n                        if (dec31 == 4 || dec31 == 5 && isLeapYear(date.tm_year % 400 - 1)) val++;\n                    } else if (val == 53) {\n                        // If 1 January is not a Thursday, and not a Wednesday of a\n                        // leap year, then this year has only 52 weeks.\n                        var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\n                        if (jan1 != 4 && (jan1 != 3 || !isLeapYear(date.tm_year))) val = 1;\n                    }\n                    return leadingNulls(val, 2);\n                },\n                \"%w\": function(date) {\n                    return date.tm_wday;\n                },\n                \"%W\": function(date) {\n                    var days = date.tm_yday + 7 - (date.tm_wday + 6) % 7;\n                    return leadingNulls(Math.floor(days / 7), 2);\n                },\n                \"%y\": function(date) {\n                    // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]\n                    return (date.tm_year + 1900).toString().substring(2);\n                },\n                \"%Y\": function(date) {\n                    // Replaced by the year as a decimal number (for example, 1997). [ tm_year]\n                    return date.tm_year + 1900;\n                },\n                \"%z\": function(date) {\n                    // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).\n                    // For example, \"-0430\" means 4 hours 30 minutes behind UTC (west of Greenwich).\n                    var off = date.tm_gmtoff;\n                    var ahead = off >= 0;\n                    off = Math.abs(off) / 60;\n                    // convert from minutes into hhmm format (which means 60 minutes = 100 units)\n                    off = off / 60 * 100 + off % 60;\n                    return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n                },\n                \"%Z\": function(date) {\n                    return date.tm_zone;\n                },\n                \"%%\": function() {\n                    return \"%\";\n                }\n            };\n            // Replace %% with a pair of NULLs (which cannot occur in a C string), then\n            // re-inject them after processing.\n            pattern = pattern.replace(/%%/g, \"\\x00\\x00\");\n            for(var rule in EXPANSION_RULES_2)if (pattern.includes(rule)) pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n            pattern = pattern.replace(/\\0\\0/g, \"%\");\n            var bytes = intArrayFromString(pattern, false);\n            if (bytes.length > maxsize) return 0;\n            writeArrayToMemory(bytes, s);\n            return bytes.length - 1;\n        }\n        function _strftime_l(s, maxsize, format, tm, loc) {\n            return _strftime(s, maxsize, format, tm); // no locale support yet\n        }\n        PThread.init();\n        var FSNode = /** @constructor */ function(parent, name, mode, rdev) {\n            if (!parent) parent = this; // root node sets parent to itself\n            this.parent = parent;\n            this.mount = parent.mount;\n            this.mounted = null;\n            this.id = FS.nextInode++;\n            this.name = name;\n            this.mode = mode;\n            this.node_ops = {};\n            this.stream_ops = {};\n            this.rdev = rdev;\n        };\n        var readMode = 365 /*73*/ ;\n        var writeMode = 146 /*146*/ ;\n        Object.defineProperties(FSNode.prototype, {\n            read: {\n                get: /** @this{FSNode} */ function() {\n                    return (this.mode & readMode) === readMode;\n                },\n                set: /** @this{FSNode} */ function(val) {\n                    val ? this.mode |= readMode : this.mode &= ~readMode;\n                }\n            },\n            write: {\n                get: /** @this{FSNode} */ function() {\n                    return (this.mode & writeMode) === writeMode;\n                },\n                set: /** @this{FSNode} */ function(val) {\n                    val ? this.mode |= writeMode : this.mode &= ~writeMode;\n                }\n            },\n            isFolder: {\n                get: /** @this{FSNode} */ function() {\n                    return FS.isDir(this.mode);\n                }\n            },\n            isDevice: {\n                get: /** @this{FSNode} */ function() {\n                    return FS.isChrdev(this.mode);\n                }\n            }\n        });\n        FS.FSNode = FSNode;\n        FS.staticInit();\n        ERRNO_CODES = {\n            \"EPERM\": 63,\n            \"ENOENT\": 44,\n            \"ESRCH\": 71,\n            \"EINTR\": 27,\n            \"EIO\": 29,\n            \"ENXIO\": 60,\n            \"E2BIG\": 1,\n            \"ENOEXEC\": 45,\n            \"EBADF\": 8,\n            \"ECHILD\": 12,\n            \"EAGAIN\": 6,\n            \"EWOULDBLOCK\": 6,\n            \"ENOMEM\": 48,\n            \"EACCES\": 2,\n            \"EFAULT\": 21,\n            \"ENOTBLK\": 105,\n            \"EBUSY\": 10,\n            \"EEXIST\": 20,\n            \"EXDEV\": 75,\n            \"ENODEV\": 43,\n            \"ENOTDIR\": 54,\n            \"EISDIR\": 31,\n            \"EINVAL\": 28,\n            \"ENFILE\": 41,\n            \"EMFILE\": 33,\n            \"ENOTTY\": 59,\n            \"ETXTBSY\": 74,\n            \"EFBIG\": 22,\n            \"ENOSPC\": 51,\n            \"ESPIPE\": 70,\n            \"EROFS\": 69,\n            \"EMLINK\": 34,\n            \"EPIPE\": 64,\n            \"EDOM\": 18,\n            \"ERANGE\": 68,\n            \"ENOMSG\": 49,\n            \"EIDRM\": 24,\n            \"ECHRNG\": 106,\n            \"EL2NSYNC\": 156,\n            \"EL3HLT\": 107,\n            \"EL3RST\": 108,\n            \"ELNRNG\": 109,\n            \"EUNATCH\": 110,\n            \"ENOCSI\": 111,\n            \"EL2HLT\": 112,\n            \"EDEADLK\": 16,\n            \"ENOLCK\": 46,\n            \"EBADE\": 113,\n            \"EBADR\": 114,\n            \"EXFULL\": 115,\n            \"ENOANO\": 104,\n            \"EBADRQC\": 103,\n            \"EBADSLT\": 102,\n            \"EDEADLOCK\": 16,\n            \"EBFONT\": 101,\n            \"ENOSTR\": 100,\n            \"ENODATA\": 116,\n            \"ETIME\": 117,\n            \"ENOSR\": 118,\n            \"ENONET\": 119,\n            \"ENOPKG\": 120,\n            \"EREMOTE\": 121,\n            \"ENOLINK\": 47,\n            \"EADV\": 122,\n            \"ESRMNT\": 123,\n            \"ECOMM\": 124,\n            \"EPROTO\": 65,\n            \"EMULTIHOP\": 36,\n            \"EDOTDOT\": 125,\n            \"EBADMSG\": 9,\n            \"ENOTUNIQ\": 126,\n            \"EBADFD\": 127,\n            \"EREMCHG\": 128,\n            \"ELIBACC\": 129,\n            \"ELIBBAD\": 130,\n            \"ELIBSCN\": 131,\n            \"ELIBMAX\": 132,\n            \"ELIBEXEC\": 133,\n            \"ENOSYS\": 52,\n            \"ENOTEMPTY\": 55,\n            \"ENAMETOOLONG\": 37,\n            \"ELOOP\": 32,\n            \"EOPNOTSUPP\": 138,\n            \"EPFNOSUPPORT\": 139,\n            \"ECONNRESET\": 15,\n            \"ENOBUFS\": 42,\n            \"EAFNOSUPPORT\": 5,\n            \"EPROTOTYPE\": 67,\n            \"ENOTSOCK\": 57,\n            \"ENOPROTOOPT\": 50,\n            \"ESHUTDOWN\": 140,\n            \"ECONNREFUSED\": 14,\n            \"EADDRINUSE\": 3,\n            \"ECONNABORTED\": 13,\n            \"ENETUNREACH\": 40,\n            \"ENETDOWN\": 38,\n            \"ETIMEDOUT\": 73,\n            \"EHOSTDOWN\": 142,\n            \"EHOSTUNREACH\": 23,\n            \"EINPROGRESS\": 26,\n            \"EALREADY\": 7,\n            \"EDESTADDRREQ\": 17,\n            \"EMSGSIZE\": 35,\n            \"EPROTONOSUPPORT\": 66,\n            \"ESOCKTNOSUPPORT\": 137,\n            \"EADDRNOTAVAIL\": 4,\n            \"ENETRESET\": 39,\n            \"EISCONN\": 30,\n            \"ENOTCONN\": 53,\n            \"ETOOMANYREFS\": 141,\n            \"EUSERS\": 136,\n            \"EDQUOT\": 19,\n            \"ESTALE\": 72,\n            \"ENOTSUP\": 138,\n            \"ENOMEDIUM\": 148,\n            \"EILSEQ\": 25,\n            \"EOVERFLOW\": 61,\n            \"ECANCELED\": 11,\n            \"ENOTRECOVERABLE\": 56,\n            \"EOWNERDEAD\": 62,\n            \"ESTRPIPE\": 135\n        };\n        embind_init_charCodes();\n        BindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n        InternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n        init_ClassHandle();\n        init_embind();\n        init_RegisteredPointer();\n        UnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n        init_emval();\n        // proxiedFunctionTable specifies the list of functions that can be called either synchronously or asynchronously from other threads in postMessage()d or internally queued events. This way a pthread in a Worker can synchronously access e.g. the DOM on the main thread.\n        var proxiedFunctionTable = [\n            null,\n            _proc_exit,\n            exitOnMainThread,\n            pthreadCreateProxied,\n            _environ_get,\n            _environ_sizes_get,\n            _fd_close,\n            _fd_read,\n            _fd_seek,\n            _fd_write\n        ];\n        function checkIncomingModuleAPI() {\n            ignoredModuleProp(\"fetchSettings\");\n        }\n        var wasmImports = {\n            \"__assert_fail\": ___assert_fail,\n            \"__call_sighandler\": ___call_sighandler,\n            \"__emscripten_init_main_thread_js\": ___emscripten_init_main_thread_js,\n            \"__emscripten_thread_cleanup\": ___emscripten_thread_cleanup,\n            \"__pthread_create_js\": ___pthread_create_js,\n            \"__throw_exception_with_stack_trace\": ___throw_exception_with_stack_trace,\n            \"_embind_register_bigint\": __embind_register_bigint,\n            \"_embind_register_bool\": __embind_register_bool,\n            \"_embind_register_class\": __embind_register_class,\n            \"_embind_register_class_constructor\": __embind_register_class_constructor,\n            \"_embind_register_class_function\": __embind_register_class_function,\n            \"_embind_register_emval\": __embind_register_emval,\n            \"_embind_register_enum\": __embind_register_enum,\n            \"_embind_register_enum_value\": __embind_register_enum_value,\n            \"_embind_register_float\": __embind_register_float,\n            \"_embind_register_integer\": __embind_register_integer,\n            \"_embind_register_memory_view\": __embind_register_memory_view,\n            \"_embind_register_smart_ptr\": __embind_register_smart_ptr,\n            \"_embind_register_std_string\": __embind_register_std_string,\n            \"_embind_register_std_wstring\": __embind_register_std_wstring,\n            \"_embind_register_void\": __embind_register_void,\n            \"_emscripten_default_pthread_stack_size\": __emscripten_default_pthread_stack_size,\n            \"_emscripten_get_now_is_monotonic\": __emscripten_get_now_is_monotonic,\n            \"_emscripten_notify_mailbox_postmessage\": __emscripten_notify_mailbox_postmessage,\n            \"_emscripten_set_offscreencanvas_size\": __emscripten_set_offscreencanvas_size,\n            \"_emscripten_thread_mailbox_await\": __emscripten_thread_mailbox_await,\n            \"_emval_call\": __emval_call,\n            \"_emval_decref\": __emval_decref,\n            \"_emval_incref\": __emval_incref,\n            \"_emval_take_value\": __emval_take_value,\n            \"abort\": _abort,\n            \"emscripten_check_blocking_allowed\": _emscripten_check_blocking_allowed,\n            \"emscripten_date_now\": _emscripten_date_now,\n            \"emscripten_exit_with_live_runtime\": _emscripten_exit_with_live_runtime,\n            \"emscripten_get_heap_max\": _emscripten_get_heap_max,\n            \"emscripten_get_now\": _emscripten_get_now,\n            \"emscripten_num_logical_cores\": _emscripten_num_logical_cores,\n            \"emscripten_receive_on_main_thread_js\": _emscripten_receive_on_main_thread_js,\n            \"emscripten_resize_heap\": _emscripten_resize_heap,\n            \"environ_get\": _environ_get,\n            \"environ_sizes_get\": _environ_sizes_get,\n            \"exit\": _exit,\n            \"fd_close\": _fd_close,\n            \"fd_read\": _fd_read,\n            \"fd_seek\": _fd_seek,\n            \"fd_write\": _fd_write,\n            \"memory\": wasmMemory || Module[\"wasmMemory\"],\n            \"strftime_l\": _strftime_l\n        };\n        var asm = createWasm();\n        /** @type {function(...*):?} */ var ___wasm_call_ctors = createExportWrapper(\"__wasm_call_ctors\");\n        /** @type {function(...*):?} */ var _malloc = createExportWrapper(\"malloc\");\n        /** @type {function(...*):?} */ var _free = Module[\"_free\"] = createExportWrapper(\"free\");\n        /** @type {function(...*):?} */ var __emscripten_tls_init = Module[\"__emscripten_tls_init\"] = createExportWrapper(\"_emscripten_tls_init\");\n        /** @type {function(...*):?} */ var _pthread_self = Module[\"_pthread_self\"] = function() {\n            return (_pthread_self = Module[\"_pthread_self\"] = Module[\"asm\"][\"pthread_self\"]).apply(null, arguments);\n        };\n        /** @type {function(...*):?} */ var ___getTypeName = Module[\"___getTypeName\"] = createExportWrapper(\"__getTypeName\");\n        /** @type {function(...*):?} */ var __embind_initialize_bindings = Module[\"__embind_initialize_bindings\"] = createExportWrapper(\"_embind_initialize_bindings\");\n        /** @type {function(...*):?} */ var ___errno_location = createExportWrapper(\"__errno_location\");\n        /** @type {function(...*):?} */ var __emscripten_thread_init = Module[\"__emscripten_thread_init\"] = createExportWrapper(\"_emscripten_thread_init\");\n        /** @type {function(...*):?} */ var __emscripten_thread_crashed = Module[\"__emscripten_thread_crashed\"] = createExportWrapper(\"_emscripten_thread_crashed\");\n        /** @type {function(...*):?} */ var _fflush = Module[\"_fflush\"] = createExportWrapper(\"fflush\");\n        /** @type {function(...*):?} */ var _emscripten_main_thread_process_queued_calls = createExportWrapper(\"emscripten_main_thread_process_queued_calls\");\n        /** @type {function(...*):?} */ var _emscripten_main_runtime_thread_id = createExportWrapper(\"emscripten_main_runtime_thread_id\");\n        /** @type {function(...*):?} */ var __emscripten_run_in_main_runtime_thread_js = createExportWrapper(\"_emscripten_run_in_main_runtime_thread_js\");\n        /** @type {function(...*):?} */ var _emscripten_dispatch_to_thread_ = createExportWrapper(\"emscripten_dispatch_to_thread_\");\n        /** @type {function(...*):?} */ var _emscripten_stack_get_base = function() {\n            return (_emscripten_stack_get_base = Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null, arguments);\n        };\n        /** @type {function(...*):?} */ var _emscripten_stack_get_end = function() {\n            return (_emscripten_stack_get_end = Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null, arguments);\n        };\n        /** @type {function(...*):?} */ var __emscripten_thread_free_data = createExportWrapper(\"_emscripten_thread_free_data\");\n        /** @type {function(...*):?} */ var __emscripten_thread_exit = Module[\"__emscripten_thread_exit\"] = createExportWrapper(\"_emscripten_thread_exit\");\n        /** @type {function(...*):?} */ var __emscripten_check_mailbox = Module[\"__emscripten_check_mailbox\"] = createExportWrapper(\"_emscripten_check_mailbox\");\n        /** @type {function(...*):?} */ var ___trap = function() {\n            return (___trap = Module[\"asm\"][\"__trap\"]).apply(null, arguments);\n        };\n        /** @type {function(...*):?} */ var _emscripten_stack_init = function() {\n            return (_emscripten_stack_init = Module[\"asm\"][\"emscripten_stack_init\"]).apply(null, arguments);\n        };\n        /** @type {function(...*):?} */ var _emscripten_stack_set_limits = function() {\n            return (_emscripten_stack_set_limits = Module[\"asm\"][\"emscripten_stack_set_limits\"]).apply(null, arguments);\n        };\n        /** @type {function(...*):?} */ var _emscripten_stack_get_free = function() {\n            return (_emscripten_stack_get_free = Module[\"asm\"][\"emscripten_stack_get_free\"]).apply(null, arguments);\n        };\n        /** @type {function(...*):?} */ var stackSave = createExportWrapper(\"stackSave\");\n        /** @type {function(...*):?} */ var stackRestore = createExportWrapper(\"stackRestore\");\n        /** @type {function(...*):?} */ var stackAlloc = createExportWrapper(\"stackAlloc\");\n        /** @type {function(...*):?} */ var _emscripten_stack_get_current = function() {\n            return (_emscripten_stack_get_current = Module[\"asm\"][\"emscripten_stack_get_current\"]).apply(null, arguments);\n        };\n        /** @type {function(...*):?} */ var ___cxa_decrement_exception_refcount = Module[\"___cxa_decrement_exception_refcount\"] = createExportWrapper(\"__cxa_decrement_exception_refcount\");\n        /** @type {function(...*):?} */ var ___cxa_increment_exception_refcount = Module[\"___cxa_increment_exception_refcount\"] = createExportWrapper(\"__cxa_increment_exception_refcount\");\n        /** @type {function(...*):?} */ var ___cxa_demangle = createExportWrapper(\"__cxa_demangle\");\n        /** @type {function(...*):?} */ var ___thrown_object_from_unwind_exception = Module[\"___thrown_object_from_unwind_exception\"] = createExportWrapper(\"__thrown_object_from_unwind_exception\");\n        /** @type {function(...*):?} */ var ___get_exception_message = Module[\"___get_exception_message\"] = createExportWrapper(\"__get_exception_message\");\n        /** @type {function(...*):?} */ var dynCall_jiji = Module[\"dynCall_jiji\"] = createExportWrapper(\"dynCall_jiji\");\n        /** @type {function(...*):?} */ var dynCall_viijii = Module[\"dynCall_viijii\"] = createExportWrapper(\"dynCall_viijii\");\n        /** @type {function(...*):?} */ var dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = createExportWrapper(\"dynCall_iiiiij\");\n        /** @type {function(...*):?} */ var dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = createExportWrapper(\"dynCall_iiiiijj\");\n        /** @type {function(...*):?} */ var dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = createExportWrapper(\"dynCall_iiiiiijj\");\n        // include: postamble.js\n        // === Auto-generated postamble setup entry stuff ===\n        Module[\"keepRuntimeAlive\"] = keepRuntimeAlive;\n        Module[\"wasmMemory\"] = wasmMemory;\n        Module[\"ExitStatus\"] = ExitStatus;\n        Module[\"PThread\"] = PThread;\n        var missingLibrarySymbols = [\n            \"emscripten_realloc_buffer\",\n            \"ydayFromDate\",\n            \"setErrNo\",\n            \"inetPton4\",\n            \"inetNtop4\",\n            \"inetPton6\",\n            \"inetNtop6\",\n            \"readSockaddr\",\n            \"writeSockaddr\",\n            \"getHostByName\",\n            \"traverseStack\",\n            \"getCallstack\",\n            \"emscriptenLog\",\n            \"convertPCtoSourceLocation\",\n            \"readEmAsmArgs\",\n            \"jstoi_q\",\n            \"jstoi_s\",\n            \"listenOnce\",\n            \"autoResumeAudioContext\",\n            \"runtimeKeepalivePop\",\n            \"safeSetTimeout\",\n            \"asmjsMangle\",\n            \"getNativeTypeSize\",\n            \"STACK_SIZE\",\n            \"STACK_ALIGN\",\n            \"POINTER_SIZE\",\n            \"ASSERTIONS\",\n            \"writeI53ToI64\",\n            \"writeI53ToI64Clamped\",\n            \"writeI53ToI64Signaling\",\n            \"writeI53ToU64Clamped\",\n            \"writeI53ToU64Signaling\",\n            \"readI53FromI64\",\n            \"readI53FromU64\",\n            \"convertI32PairToI53\",\n            \"convertU32PairToI53\",\n            \"getCFunc\",\n            \"ccall\",\n            \"cwrap\",\n            \"uleb128Encode\",\n            \"sigToWasmTypes\",\n            \"generateFuncType\",\n            \"convertJsFunctionToWasm\",\n            \"getEmptyTableSlot\",\n            \"updateTableMap\",\n            \"getFunctionAddress\",\n            \"addFunction\",\n            \"removeFunction\",\n            \"reallyNegative\",\n            \"unSign\",\n            \"strLen\",\n            \"reSign\",\n            \"formatString\",\n            \"intArrayToString\",\n            \"AsciiToString\",\n            \"stringToNewUTF8\",\n            \"getSocketFromFD\",\n            \"getSocketAddress\",\n            \"registerKeyEventCallback\",\n            \"maybeCStringToJsString\",\n            \"findEventTarget\",\n            \"findCanvasEventTarget\",\n            \"getBoundingClientRect\",\n            \"fillMouseEventData\",\n            \"registerMouseEventCallback\",\n            \"registerWheelEventCallback\",\n            \"registerUiEventCallback\",\n            \"registerFocusEventCallback\",\n            \"fillDeviceOrientationEventData\",\n            \"registerDeviceOrientationEventCallback\",\n            \"fillDeviceMotionEventData\",\n            \"registerDeviceMotionEventCallback\",\n            \"screenOrientation\",\n            \"fillOrientationChangeEventData\",\n            \"registerOrientationChangeEventCallback\",\n            \"fillFullscreenChangeEventData\",\n            \"registerFullscreenChangeEventCallback\",\n            \"JSEvents_requestFullscreen\",\n            \"JSEvents_resizeCanvasForFullscreen\",\n            \"registerRestoreOldStyle\",\n            \"hideEverythingExceptGivenElement\",\n            \"restoreHiddenElements\",\n            \"setLetterbox\",\n            \"softFullscreenResizeWebGLRenderTarget\",\n            \"doRequestFullscreen\",\n            \"fillPointerlockChangeEventData\",\n            \"registerPointerlockChangeEventCallback\",\n            \"registerPointerlockErrorEventCallback\",\n            \"requestPointerLock\",\n            \"fillVisibilityChangeEventData\",\n            \"registerVisibilityChangeEventCallback\",\n            \"registerTouchEventCallback\",\n            \"fillGamepadEventData\",\n            \"registerGamepadEventCallback\",\n            \"registerBeforeUnloadEventCallback\",\n            \"fillBatteryEventData\",\n            \"battery\",\n            \"registerBatteryEventCallback\",\n            \"setCanvasElementSizeCallingThread\",\n            \"setCanvasElementSizeMainThread\",\n            \"setCanvasElementSize\",\n            \"getCanvasSizeCallingThread\",\n            \"getCanvasSizeMainThread\",\n            \"getCanvasElementSize\",\n            \"checkWasiClock\",\n            \"wasiRightsToMuslOFlags\",\n            \"wasiOFlagsToMuslOFlags\",\n            \"createDyncallWrapper\",\n            \"setImmediateWrapped\",\n            \"clearImmediateWrapped\",\n            \"polyfillSetImmediate\",\n            \"getPromise\",\n            \"makePromise\",\n            \"idsToPromises\",\n            \"makePromiseCallback\",\n            \"setMainLoop\",\n            \"_setNetworkCallback\",\n            \"heapObjectForWebGLType\",\n            \"heapAccessShiftForWebGLHeap\",\n            \"webgl_enable_ANGLE_instanced_arrays\",\n            \"webgl_enable_OES_vertex_array_object\",\n            \"webgl_enable_WEBGL_draw_buffers\",\n            \"webgl_enable_WEBGL_multi_draw\",\n            \"emscriptenWebGLGet\",\n            \"computeUnpackAlignedImageSize\",\n            \"colorChannelsInGlTextureFormat\",\n            \"emscriptenWebGLGetTexPixelData\",\n            \"__glGenObject\",\n            \"emscriptenWebGLGetUniform\",\n            \"webglGetUniformLocation\",\n            \"webglPrepareUniformLocationsBeforeFirstUse\",\n            \"webglGetLeftBracePos\",\n            \"emscriptenWebGLGetVertexAttrib\",\n            \"__glGetActiveAttribOrUniform\",\n            \"writeGLArray\",\n            \"emscripten_webgl_destroy_context_before_on_calling_thread\",\n            \"registerWebGlEventCallback\",\n            \"runAndAbortIfError\",\n            \"SDL_unicode\",\n            \"SDL_ttfContext\",\n            \"SDL_audio\",\n            \"GLFW_Window\",\n            \"ALLOC_NORMAL\",\n            \"ALLOC_STACK\",\n            \"allocate\",\n            \"writeStringToMemory\",\n            \"writeAsciiToMemory\",\n            \"registerInheritedInstance\",\n            \"unregisterInheritedInstance\",\n            \"validateThis\",\n            \"getStringOrSymbol\",\n            \"craftEmvalAllocator\",\n            \"emval_get_global\",\n            \"emval_allocateDestructors\",\n            \"emval_addMethodCaller\"\n        ];\n        missingLibrarySymbols.forEach(missingLibrarySymbol);\n        var unexportedSymbols = [\n            \"run\",\n            \"addOnPreRun\",\n            \"addOnInit\",\n            \"addOnPreMain\",\n            \"addOnExit\",\n            \"addOnPostRun\",\n            \"addRunDependency\",\n            \"removeRunDependency\",\n            \"FS_createFolder\",\n            \"FS_createPath\",\n            \"FS_createDataFile\",\n            \"FS_createPreloadedFile\",\n            \"FS_createLazyFile\",\n            \"FS_createLink\",\n            \"FS_createDevice\",\n            \"FS_unlink\",\n            \"out\",\n            \"err\",\n            \"callMain\",\n            \"abort\",\n            \"stackAlloc\",\n            \"stackSave\",\n            \"stackRestore\",\n            \"getTempRet0\",\n            \"setTempRet0\",\n            \"writeStackCookie\",\n            \"checkStackCookie\",\n            \"ptrToString\",\n            \"zeroMemory\",\n            \"exitJS\",\n            \"getHeapMax\",\n            \"abortOnCannotGrowMemory\",\n            \"ENV\",\n            \"MONTH_DAYS_REGULAR\",\n            \"MONTH_DAYS_LEAP\",\n            \"MONTH_DAYS_REGULAR_CUMULATIVE\",\n            \"MONTH_DAYS_LEAP_CUMULATIVE\",\n            \"isLeapYear\",\n            \"arraySum\",\n            \"addDays\",\n            \"ERRNO_CODES\",\n            \"ERRNO_MESSAGES\",\n            \"DNS\",\n            \"Protocols\",\n            \"Sockets\",\n            \"initRandomFill\",\n            \"randomFill\",\n            \"timers\",\n            \"warnOnce\",\n            \"UNWIND_CACHE\",\n            \"readEmAsmArgsArray\",\n            \"getExecutableName\",\n            \"dynCallLegacy\",\n            \"getDynCaller\",\n            \"dynCall\",\n            \"handleException\",\n            \"runtimeKeepalivePush\",\n            \"callUserCallback\",\n            \"maybeExit\",\n            \"asyncLoad\",\n            \"alignMemory\",\n            \"mmapAlloc\",\n            \"HandleAllocator\",\n            \"convertI32PairToI53Checked\",\n            \"freeTableIndexes\",\n            \"functionsInTableMap\",\n            \"setValue\",\n            \"getValue\",\n            \"PATH\",\n            \"PATH_FS\",\n            \"UTF8Decoder\",\n            \"UTF8ArrayToString\",\n            \"UTF8ToString\",\n            \"stringToUTF8Array\",\n            \"stringToUTF8\",\n            \"lengthBytesUTF8\",\n            \"intArrayFromString\",\n            \"stringToAscii\",\n            \"UTF16Decoder\",\n            \"UTF16ToString\",\n            \"stringToUTF16\",\n            \"lengthBytesUTF16\",\n            \"UTF32ToString\",\n            \"stringToUTF32\",\n            \"lengthBytesUTF32\",\n            \"stringToUTF8OnStack\",\n            \"writeArrayToMemory\",\n            \"SYSCALLS\",\n            \"JSEvents\",\n            \"specialHTMLTargets\",\n            \"currentFullscreenStrategy\",\n            \"restoreOldWindowedStyle\",\n            \"demangle\",\n            \"demangleAll\",\n            \"jsStackTrace\",\n            \"stackTrace\",\n            \"getEnvStrings\",\n            \"doReadv\",\n            \"doWritev\",\n            \"dlopenMissingError\",\n            \"promiseMap\",\n            \"getExceptionMessageCommon\",\n            \"getCppExceptionTag\",\n            \"getCppExceptionThrownObjectFromWebAssemblyException\",\n            \"incrementExceptionRefcount\",\n            \"decrementExceptionRefcount\",\n            \"getExceptionMessage\",\n            \"Browser\",\n            \"wget\",\n            \"FS\",\n            \"MEMFS\",\n            \"TTY\",\n            \"PIPEFS\",\n            \"SOCKFS\",\n            \"tempFixedLengthArray\",\n            \"miniTempWebGLFloatBuffers\",\n            \"miniTempWebGLIntBuffers\",\n            \"GL\",\n            \"emscripten_webgl_power_preferences\",\n            \"AL\",\n            \"GLUT\",\n            \"EGL\",\n            \"GLEW\",\n            \"IDBStore\",\n            \"SDL\",\n            \"SDL_gfx\",\n            \"GLFW\",\n            \"allocateUTF8\",\n            \"allocateUTF8OnStack\",\n            \"terminateWorker\",\n            \"killThread\",\n            \"cleanupThread\",\n            \"registerTLSInit\",\n            \"cancelThread\",\n            \"spawnThread\",\n            \"exitOnMainThread\",\n            \"proxyToMainThread\",\n            \"emscripten_receive_on_main_thread_js_callArgs\",\n            \"invokeEntryPoint\",\n            \"checkMailbox\",\n            \"InternalError\",\n            \"BindingError\",\n            \"UnboundTypeError\",\n            \"PureVirtualError\",\n            \"init_embind\",\n            \"throwInternalError\",\n            \"throwBindingError\",\n            \"throwUnboundTypeError\",\n            \"ensureOverloadTable\",\n            \"exposePublicSymbol\",\n            \"replacePublicSymbol\",\n            \"extendError\",\n            \"createNamedFunction\",\n            \"embindRepr\",\n            \"registeredInstances\",\n            \"getBasestPointer\",\n            \"getInheritedInstance\",\n            \"getInheritedInstanceCount\",\n            \"getLiveInheritedInstances\",\n            \"registeredTypes\",\n            \"awaitingDependencies\",\n            \"typeDependencies\",\n            \"registeredPointers\",\n            \"registerType\",\n            \"whenDependentTypesAreResolved\",\n            \"embind_charCodes\",\n            \"embind_init_charCodes\",\n            \"readLatin1String\",\n            \"getTypeName\",\n            \"heap32VectorToArray\",\n            \"requireRegisteredType\",\n            \"getShiftFromSize\",\n            \"integerReadValueFromPointer\",\n            \"enumReadValueFromPointer\",\n            \"floatReadValueFromPointer\",\n            \"simpleReadValueFromPointer\",\n            \"runDestructors\",\n            \"newFunc\",\n            \"craftInvokerFunction\",\n            \"embind__requireFunction\",\n            \"tupleRegistrations\",\n            \"structRegistrations\",\n            \"genericPointerToWireType\",\n            \"constNoSmartPtrRawPointerToWireType\",\n            \"nonConstNoSmartPtrRawPointerToWireType\",\n            \"init_RegisteredPointer\",\n            \"RegisteredPointer\",\n            \"RegisteredPointer_getPointee\",\n            \"RegisteredPointer_destructor\",\n            \"RegisteredPointer_deleteObject\",\n            \"RegisteredPointer_fromWireType\",\n            \"runDestructor\",\n            \"releaseClassHandle\",\n            \"finalizationRegistry\",\n            \"detachFinalizer_deps\",\n            \"detachFinalizer\",\n            \"attachFinalizer\",\n            \"makeClassHandle\",\n            \"init_ClassHandle\",\n            \"ClassHandle\",\n            \"ClassHandle_isAliasOf\",\n            \"throwInstanceAlreadyDeleted\",\n            \"ClassHandle_clone\",\n            \"ClassHandle_delete\",\n            \"deletionQueue\",\n            \"ClassHandle_isDeleted\",\n            \"ClassHandle_deleteLater\",\n            \"flushPendingDeletes\",\n            \"delayFunction\",\n            \"setDelayFunction\",\n            \"RegisteredClass\",\n            \"shallowCopyInternalPointer\",\n            \"downcastPointer\",\n            \"upcastPointer\",\n            \"char_0\",\n            \"char_9\",\n            \"makeLegalFunctionName\",\n            \"emval_handles\",\n            \"emval_symbols\",\n            \"init_emval\",\n            \"count_emval_handles\",\n            \"Emval\",\n            \"emval_newers\",\n            \"emval_lookupTypes\",\n            \"emval_methodCallers\",\n            \"emval_registeredMethods\"\n        ];\n        unexportedSymbols.forEach(unexportedRuntimeSymbol);\n        var calledRun;\n        dependenciesFulfilled = function runCaller() {\n            // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n            if (!calledRun) run();\n            if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n        };\n        function stackCheckInit() {\n            // This is normally called automatically during __wasm_call_ctors but need to\n            // get these values before even running any of the ctors so we call it redundantly\n            // here.\n            // See $establishStackSpace for the equivelent code that runs on a thread\n            assert(!ENVIRONMENT_IS_PTHREAD);\n            _emscripten_stack_init();\n            // TODO(sbc): Move writeStackCookie to native to to avoid this.\n            writeStackCookie();\n        }\n        function run() {\n            if (runDependencies > 0) return;\n            if (!ENVIRONMENT_IS_PTHREAD) stackCheckInit();\n            if (ENVIRONMENT_IS_PTHREAD) {\n                // The promise resolve function typically gets called as part of the execution\n                // of `doRun` below. The workers/pthreads don't execute `doRun` so the\n                // creation promise can be resolved, marking the pthread-Module as initialized.\n                readyPromiseResolve(Module);\n                initRuntime();\n                startWorker(Module);\n                return;\n            }\n            preRun();\n            // a preRun added a dependency, run will be called later\n            if (runDependencies > 0) return;\n            function doRun() {\n                // run may have just been called through dependencies being fulfilled just in this very frame,\n                // or while the async setStatus time below was happening\n                if (calledRun) return;\n                calledRun = true;\n                Module[\"calledRun\"] = true;\n                if (ABORT) return;\n                initRuntime();\n                readyPromiseResolve(Module);\n                if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n                assert(!Module[\"_main\"], 'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]');\n                postRun();\n            }\n            if (Module[\"setStatus\"]) {\n                Module[\"setStatus\"](\"Running...\");\n                setTimeout(function() {\n                    setTimeout(function() {\n                        Module[\"setStatus\"](\"\");\n                    }, 1);\n                    doRun();\n                }, 1);\n            } else doRun();\n            checkStackCookie();\n        }\n        function checkUnflushedContent() {\n            // Compiler settings do not allow exiting the runtime, so flushing\n            // the streams is not possible. but in ASSERTIONS mode we check\n            // if there was something to flush, and if so tell the user they\n            // should request that the runtime be exitable.\n            // Normally we would not even include flush() at all, but in ASSERTIONS\n            // builds we do so just for this check, and here we see if there is any\n            // content to flush, that is, we check if there would have been\n            // something a non-ASSERTIONS build would have not seen.\n            // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0\n            // mode (which has its own special function for this; otherwise, all\n            // the code is inside libc)\n            var oldOut = out;\n            var oldErr = err;\n            var has = false;\n            out = err = (x)=>{\n                has = true;\n            };\n            try {\n                _fflush(0);\n                // also flush in the JS FS layer\n                [\n                    \"stdout\",\n                    \"stderr\"\n                ].forEach(function(name) {\n                    var info = FS.analyzePath(\"/dev/\" + name);\n                    if (!info) return;\n                    var stream = info.object;\n                    var rdev = stream.rdev;\n                    var tty = TTY.ttys[rdev];\n                    if (tty && tty.output && tty.output.length) has = true;\n                });\n            } catch (e) {}\n            out = oldOut;\n            err = oldErr;\n            if (has) warnOnce(\"stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.\");\n        }\n        if (Module[\"preInit\"]) {\n            if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [\n                Module[\"preInit\"]\n            ];\n            while(Module[\"preInit\"].length > 0)Module[\"preInit\"].pop()();\n        }\n        run();\n        // end include: postamble.js\n        return CASModule.ready;\n    };\n})();\nexports.default = CASModule;\n\n},{\"97e22c1cc60f8917\":\"2jf93\",\"cd7c4fcf3ef784cc\":\"cNDEa\",\"7bae3faee0c88ea8\":\"jasYp\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"aDu6M\"}],\"2jf93\":[function(require,module,exports) {\n// shim for using process in browser\nvar process = module.exports = {};\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\nvar cachedSetTimeout;\nvar cachedClearTimeout;\nfunction defaultSetTimout() {\n    throw new Error(\"setTimeout has not been defined\");\n}\nfunction defaultClearTimeout() {\n    throw new Error(\"clearTimeout has not been defined\");\n}\n(function() {\n    try {\n        if (typeof setTimeout === \"function\") cachedSetTimeout = setTimeout;\n        else cachedSetTimeout = defaultSetTimout;\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === \"function\") cachedClearTimeout = clearTimeout;\n        else cachedClearTimeout = defaultClearTimeout;\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n})();\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) //normal enviroments in sane situations\n    return clearTimeout(marker);\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) return;\n    draining = false;\n    if (currentQueue.length) queue = currentQueue.concat(queue);\n    else queueIndex = -1;\n    if (queue.length) drainQueue();\n}\nfunction drainQueue() {\n    if (draining) return;\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n    var len = queue.length;\n    while(len){\n        currentQueue = queue;\n        queue = [];\n        while(++queueIndex < len)if (currentQueue) currentQueue[queueIndex].run();\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nprocess.nextTick = function(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) runTimeout(drainQueue);\n};\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function() {\n    this.fun.apply(null, this.array);\n};\nprocess.title = \"browser\";\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = \"\"; // empty string to avoid regexp issues\nprocess.versions = {};\nfunction noop() {}\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\nprocess.listeners = function(name) {\n    return [];\n};\nprocess.binding = function(name) {\n    throw new Error(\"process.binding is not supported\");\n};\nprocess.cwd = function() {\n    return \"/\";\n};\nprocess.chdir = function(dir) {\n    throw new Error(\"process.chdir is not supported\");\n};\nprocess.umask = function() {\n    return 0;\n};\n\n},{}],\"cNDEa\":[function(require,module,exports) {\nmodule.exports = require(\"19c075f06852cf9f\").getBundleURL(\"iDbWQ\") + require(\"82fb56aca4e6db85\").resolve(\"46jC9\");\n\n},{\"19c075f06852cf9f\":\"6Efu8\",\"82fb56aca4e6db85\":\"3XjX9\"}],\"6Efu8\":[function(require,module,exports) {\n\"use strict\";\nvar bundleURL = {};\nfunction getBundleURLCached(id) {\n    var value = bundleURL[id];\n    if (!value) {\n        value = getBundleURL();\n        bundleURL[id] = value;\n    }\n    return value;\n}\nfunction getBundleURL() {\n    try {\n        throw new Error();\n    } catch (err) {\n        var matches = (\"\" + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n        if (matches) // The first two stack frames will be this function and getBundleURLCached.\n        // Use the 3rd one, which will be a runtime in the original bundle.\n        return getBaseURL(matches[2]);\n    }\n    return \"/\";\n}\nfunction getBaseURL(url) {\n    return (\"\" + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, \"$1\") + \"/\";\n}\n// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\nfunction getOrigin(url) {\n    var matches = (\"\" + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n    if (!matches) throw new Error(\"Origin not found\");\n    return matches[0];\n}\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;\n\n},{}],\"3XjX9\":[function(require,module,exports) {\n\"use strict\";\nvar mapping = {};\nfunction register(pairs) {\n    var keys = Object.keys(pairs);\n    for(var i = 0; i < keys.length; i++)mapping[keys[i]] = pairs[keys[i]];\n}\nfunction resolve(id) {\n    var resolved = mapping[id];\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return resolved;\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;\n\n},{}],\"jasYp\":[function(require,module,exports) {\nlet workerURL = require(\"5950ec57545ffe97\");\nlet bundleURL = require(\"3de894fe5391d58b\");\nlet url = bundleURL.getBundleURL(\"iDbWQ\") + require(\"b5ffe51144c84cf9\").resolve(\"fmjgk\");\nmodule.exports = workerURL(url, bundleURL.getOrigin(url), false);\n\n},{\"5950ec57545ffe97\":\"a8eiJ\",\"3de894fe5391d58b\":\"6Efu8\",\"b5ffe51144c84cf9\":\"3XjX9\"}],\"a8eiJ\":[function(require,module,exports) {\n\"use strict\";\nmodule.exports = function(workerUrl, origin, isESM) {\n    if (origin === self.location.origin) // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n    else {\n        // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n        var source = isESM ? \"import \" + JSON.stringify(workerUrl) + \";\" : \"importScripts(\" + JSON.stringify(workerUrl) + \");\";\n        return URL.createObjectURL(new Blob([\n            source\n        ], {\n            type: \"application/javascript\"\n        }));\n    }\n};\n\n},{}],\"aDu6M\":[function(require,module,exports) {\nexports.interopDefault = function(a) {\n    return a && a.__esModule ? a : {\n        default: a\n    };\n};\nexports.defineInteropFlag = function(a) {\n    Object.defineProperty(a, \"__esModule\", {\n        value: true\n    });\n};\nexports.exportAll = function(source, dest) {\n    Object.keys(source).forEach(function(key) {\n        if (key === \"default\" || key === \"__esModule\" || dest.hasOwnProperty(key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n};\nexports.export = function(dest, destName, get) {\n    Object.defineProperty(dest, destName, {\n        enumerable: true,\n        get: get\n    });\n};\n\n},{}]},[\"jUHhM\"], \"jUHhM\", \"parcelRequire94c2\")\n\n//# sourceMappingURL=cas.bd9ca99c.js.map\n","\nvar CASModule = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(CASModule = {})  {\n\n// include: shell.js\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = typeof CASModule != 'undefined' ? CASModule : {};\n\n// Set up the promise that indicates the Module is initialized\nvar readyPromiseResolve, readyPromiseReject;\nModule['ready'] = new Promise(function(resolve, reject) {\n  readyPromiseResolve = resolve;\n  readyPromiseReject = reject;\n});\n[\"_main\",\"__emscripten_thread_init\",\"__emscripten_thread_exit\",\"__emscripten_thread_crashed\",\"__emscripten_thread_mailbox_await\",\"__emscripten_tls_init\",\"_pthread_self\",\"checkMailbox\",\"establishStackSpace\",\"invokeEntryPoint\",\"PThread\",\"getExceptionMessage\",\"___get_exception_message\",\"_free\",\"___cpp_exception\",\"___cxa_increment_exception_refcount\",\"___cxa_decrement_exception_refcount\",\"___thrown_object_from_unwind_exception\",\"___getTypeName\",\"__embind_initialize_bindings\",\"_fflush\",\"__emscripten_check_mailbox\",\"onRuntimeInitialized\"].forEach((prop) => {\n  if (!Object.getOwnPropertyDescriptor(Module['ready'], prop)) {\n    Object.defineProperty(Module['ready'], prop, {\n      get: () => abort('You are getting ' + prop + ' on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js'),\n      set: () => abort('You are setting ' + prop + ' on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js'),\n    });\n  }\n});\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = Object.assign({}, Module);\n\nvar arguments_ = [];\nvar thisProgram = './this.program';\nvar quit_ = (status, toThrow) => {\n  throw toThrow;\n};\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\n// Attempt to auto-detect the environment\nvar ENVIRONMENT_IS_WEB = typeof window == 'object';\nvar ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\n// N.b. Electron.js environment is simultaneously a NODE-environment, but\n// also a web environment.\nvar ENVIRONMENT_IS_NODE = typeof process == 'object' && typeof process.versions == 'object' && typeof process.versions.node == 'string';\nvar ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\nif (Module['ENVIRONMENT']) {\n  throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)');\n}\n\n// Three configurations we can be running in:\n// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)\n// 2) We could be the application main() thread proxied to worker. (with Emscripten -sPROXY_TO_WORKER) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)\n// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)\n\n// ENVIRONMENT_IS_PTHREAD=true will have been preset in worker.js. Make it false in the main runtime thread.\nvar ENVIRONMENT_IS_PTHREAD = Module['ENVIRONMENT_IS_PTHREAD'] || false;\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar read_,\n    readAsync,\n    readBinary,\n    setWindowTitle;\n\nif (ENVIRONMENT_IS_SHELL) {\n\n  if ((typeof process == 'object' && typeof require === 'function') || typeof window == 'object' || typeof importScripts == 'function') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n  if (typeof read != 'undefined') {\n    read_ = function shell_read(f) {\n      return read(f);\n    };\n  }\n\n  readBinary = function readBinary(f) {\n    let data;\n    if (typeof readbuffer == 'function') {\n      return new Uint8Array(readbuffer(f));\n    }\n    data = read(f, 'binary');\n    assert(typeof data == 'object');\n    return data;\n  };\n\n  readAsync = function readAsync(f, onload, onerror) {\n    setTimeout(() => onload(readBinary(f)), 0);\n  };\n\n  if (typeof clearTimeout == 'undefined') {\n    globalThis.clearTimeout = (id) => {};\n  }\n\n  if (typeof scriptArgs != 'undefined') {\n    arguments_ = scriptArgs;\n  } else if (typeof arguments != 'undefined') {\n    arguments_ = arguments;\n  }\n\n  if (typeof quit == 'function') {\n    quit_ = (status, toThrow) => {\n      // Unlike node which has process.exitCode, d8 has no such mechanism. So we\n      // have no way to set the exit code and then let the program exit with\n      // that code when it naturally stops running (say, when all setTimeouts\n      // have completed). For that reason, we must call `quit` - the only way to\n      // set the exit code - but quit also halts immediately.  To increase\n      // consistency with node (and the web) we schedule the actual quit call\n      // using a setTimeout to give the current stack and any exception handlers\n      // a chance to run.  This enables features such as addOnPostRun (which\n      // expected to be able to run code after main returns).\n      setTimeout(() => {\n        if (!(toThrow instanceof ExitStatus)) {\n          let toLog = toThrow;\n          if (toThrow && typeof toThrow == 'object' && toThrow.stack) {\n            toLog = [toThrow, toThrow.stack];\n          }\n          err('exiting due to exception: ' + toLog);\n        }\n        quit(status);\n      });\n      throw toThrow;\n    };\n  }\n\n  if (typeof print != 'undefined') {\n    // Prefer to use print/printErr where they exist, as they usually work better.\n    if (typeof console == 'undefined') console = /** @type{!Console} */({});\n    console.log = /** @type{!function(this:Console, ...*): undefined} */ (print);\n    console.warn = console.error = /** @type{!function(this:Console, ...*): undefined} */ (typeof printErr != 'undefined' ? printErr : print);\n  }\n\n} else\n\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n// ENVIRONMENT_IS_NODE.\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\n    scriptDirectory = self.location.href;\n  } else if (typeof document != 'undefined' && document.currentScript) { // web\n    scriptDirectory = document.currentScript.src;\n  }\n  // When MODULARIZE, this JS may be executed later, after document.currentScript\n  // is gone, so we saved it, and we use it here instead of any other info.\n  if (_scriptDir) {\n    scriptDirectory = _scriptDir;\n  }\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n  // otherwise, slice off the final part of the url to find the script directory.\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n  // and scriptDirectory will correctly be replaced with an empty string.\n  // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\n  // they are removed because they could contain a slash.\n  if (scriptDirectory.indexOf('blob:') !== 0) {\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf('/')+1);\n  } else {\n    scriptDirectory = '';\n  }\n\n  if (!(typeof window == 'object' || typeof importScripts == 'function')) throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n  // Differentiate the Web Worker from the Node Worker case, as reading must\n  // be done differently.\n  {\n// include: web_or_worker_shell_read.js\nread_ = (url) => {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, false);\n      xhr.send(null);\n      return xhr.responseText;\n  }\n\n  if (ENVIRONMENT_IS_WORKER) {\n    readBinary = (url) => {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, false);\n        xhr.responseType = 'arraybuffer';\n        xhr.send(null);\n        return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\n    };\n  }\n\n  readAsync = (url, onload, onerror) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = () => {\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n        onload(xhr.response);\n        return;\n      }\n      onerror();\n    };\n    xhr.onerror = onerror;\n    xhr.send(null);\n  }\n\n// end include: web_or_worker_shell_read.js\n  }\n\n  setWindowTitle = (title) => document.title = title;\n} else\n{\n  throw new Error('environment detection error');\n}\n\nvar out = Module['print'] || console.log.bind(console);\nvar err = Module['printErr'] || console.warn.bind(console);\n\n// Merge back in the overrides\nObject.assign(Module, moduleOverrides);\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = null;\ncheckIncomingModuleAPI();\n\n// Emit code to handle expected values on the Module object. This applies Module.x\n// to the proper local x. This has two benefits: first, we only emit it if it is\n// expected to arrive, and second, by using a local everywhere else that can be\n// minified.\n\nif (Module['arguments']) arguments_ = Module['arguments'];legacyModuleProp('arguments', 'arguments_');\n\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];legacyModuleProp('thisProgram', 'thisProgram');\n\nif (Module['quit']) quit_ = Module['quit'];legacyModuleProp('quit', 'quit_');\n\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n// Assertions on removed incoming Module JS APIs.\nassert(typeof Module['memoryInitializerPrefixURL'] == 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['pthreadMainPrefixURL'] == 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['cdInitializerPrefixURL'] == 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['filePackagePrefixURL'] == 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['read'] == 'undefined', 'Module.read option was removed (modify read_ in JS)');\nassert(typeof Module['readAsync'] == 'undefined', 'Module.readAsync option was removed (modify readAsync in JS)');\nassert(typeof Module['readBinary'] == 'undefined', 'Module.readBinary option was removed (modify readBinary in JS)');\nassert(typeof Module['setWindowTitle'] == 'undefined', 'Module.setWindowTitle option was removed (modify setWindowTitle in JS)');\nassert(typeof Module['TOTAL_MEMORY'] == 'undefined', 'Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY');\nlegacyModuleProp('read', 'read_');\nlegacyModuleProp('readAsync', 'readAsync');\nlegacyModuleProp('readBinary', 'readBinary');\nlegacyModuleProp('setWindowTitle', 'setWindowTitle');\nvar IDBFS = 'IDBFS is no longer included by default; build with -lidbfs.js';\nvar PROXYFS = 'PROXYFS is no longer included by default; build with -lproxyfs.js';\nvar WORKERFS = 'WORKERFS is no longer included by default; build with -lworkerfs.js';\nvar NODEFS = 'NODEFS is no longer included by default; build with -lnodefs.js';\n\nassert(\n  ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER || ENVIRONMENT_IS_NODE, 'Pthreads do not work in this environment yet (need Web Workers, or an alternative to them)');\n\nassert(!ENVIRONMENT_IS_NODE, \"node environment detected but not enabled at build time.  Add 'node' to `-sENVIRONMENT` to enable.\");\n\nassert(!ENVIRONMENT_IS_SHELL, \"shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable.\");\n\n\n// end include: shell.js\n// include: preamble.js\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\nvar wasmBinary;\nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];legacyModuleProp('wasmBinary', 'wasmBinary');\nvar noExitRuntime = Module['noExitRuntime'] || true;legacyModuleProp('noExitRuntime', 'noExitRuntime');\n\nif (typeof WebAssembly != 'object') {\n  abort('no native wasm support detected');\n}\n\n// Wasm globals\n\nvar wasmMemory;\n\n// For sending to workers.\nvar wasmModule;\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS;\n\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    abort('Assertion failed' + (text ? ': ' + text : ''));\n  }\n}\n\n// We used to include malloc/free by default in the past. Show a helpful error in\n// builds with assertions.\n\n// Memory management\n\nvar HEAP,\n/** @type {!Int8Array} */\n  HEAP8,\n/** @type {!Uint8Array} */\n  HEAPU8,\n/** @type {!Int16Array} */\n  HEAP16,\n/** @type {!Uint16Array} */\n  HEAPU16,\n/** @type {!Int32Array} */\n  HEAP32,\n/** @type {!Uint32Array} */\n  HEAPU32,\n/** @type {!Float32Array} */\n  HEAPF32,\n/** @type {!Float64Array} */\n  HEAPF64;\n\nfunction updateMemoryViews() {\n  var b = wasmMemory.buffer;\n  Module['HEAP8'] = HEAP8 = new Int8Array(b);\n  Module['HEAP16'] = HEAP16 = new Int16Array(b);\n  Module['HEAP32'] = HEAP32 = new Int32Array(b);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n}\n\nassert(!Module['STACK_SIZE'], 'STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time')\n\nassert(typeof Int32Array != 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined,\n       'JS engine does not provide full typed array support');\n\n// In non-standalone/normal mode, we create the memory here.\n// include: runtime_init_memory.js\n// Create the wasm memory. (Note: this only applies if IMPORTED_MEMORY is defined)\n\nvar INITIAL_MEMORY = Module['INITIAL_MEMORY'] || 294649856;legacyModuleProp('INITIAL_MEMORY', 'INITIAL_MEMORY');\n\nassert(INITIAL_MEMORY >= 65536, 'INITIAL_MEMORY should be larger than STACK_SIZE, was ' + INITIAL_MEMORY + '! (STACK_SIZE=' + 65536 + ')');\n\n// check for full engine support (use string 'subarray' to avoid closure compiler confusion)\n\nif (ENVIRONMENT_IS_PTHREAD) {\n  wasmMemory = Module['wasmMemory'];\n} else {\n\n  if (Module['wasmMemory']) {\n    wasmMemory = Module['wasmMemory'];\n  } else\n  {\n    wasmMemory = new WebAssembly.Memory({\n      'initial': INITIAL_MEMORY / 65536,\n      'maximum': INITIAL_MEMORY / 65536\n      ,\n      'shared': true\n    });\n    if (!(wasmMemory.buffer instanceof SharedArrayBuffer)) {\n      err('requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag');\n      if (ENVIRONMENT_IS_NODE) {\n        err('(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)');\n      }\n      throw Error('bad memory');\n    }\n  }\n\n}\n\nupdateMemoryViews();\n\n// If the user provides an incorrect length, just use that length instead rather than providing the user to\n// specifically provide the memory length with Module['INITIAL_MEMORY'].\nINITIAL_MEMORY = wasmMemory.buffer.byteLength;\nassert(INITIAL_MEMORY % 65536 === 0);\n\n// end include: runtime_init_memory.js\n\n// include: runtime_init_table.js\n// In regular non-RELOCATABLE mode the table is exported\n// from the wasm module and this will be assigned once\n// the exports are available.\nvar wasmTable;\n\n// end include: runtime_init_table.js\n// include: runtime_stack_check.js\n// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\nfunction writeStackCookie() {\n  var max = _emscripten_stack_get_end();\n  assert((max & 3) == 0);\n  // If the stack ends at address zero we write our cookies 4 bytes into the\n  // stack.  This prevents interference with the (separate) address-zero check\n  // below.\n  if (max == 0) {\n    max += 4;\n  }\n  // The stack grow downwards towards _emscripten_stack_get_end.\n  // We write cookies to the final two words in the stack and detect if they are\n  // ever overwritten.\n  HEAPU32[((max)>>2)] = 0x02135467;\n  HEAPU32[(((max)+(4))>>2)] = 0x89BACDFE;\n  // Also test the global address 0 for integrity.\n  HEAPU32[0] = 0x63736d65; /* 'emsc' */\n}\n\nfunction checkStackCookie() {\n  if (ABORT) return;\n  var max = _emscripten_stack_get_end();\n  // See writeStackCookie().\n  if (max == 0) {\n    max += 4;\n  }\n  var cookie1 = HEAPU32[((max)>>2)];\n  var cookie2 = HEAPU32[(((max)+(4))>>2)];\n  if (cookie1 != 0x02135467 || cookie2 != 0x89BACDFE) {\n    abort('Stack overflow! Stack cookie has been overwritten at ' + ptrToString(max) + ', expected hex dwords 0x89BACDFE and 0x2135467, but received ' + ptrToString(cookie2) + ' ' + ptrToString(cookie1));\n  }\n  // Also test the global address 0 for integrity.\n  if (HEAPU32[0] !== 0x63736d65 /* 'emsc' */) {\n    abort('Runtime error: The application has corrupted its heap memory area (address zero)!');\n  }\n}\n\n// end include: runtime_stack_check.js\n// include: runtime_assertions.js\n// Endianness check\n(function() {\n  var h16 = new Int16Array(1);\n  var h8 = new Int8Array(h16.buffer);\n  h16[0] = 0x6373;\n  if (h8[0] !== 0x73 || h8[1] !== 0x63) throw 'Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)';\n})();\n\n// end include: runtime_assertions.js\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\nvar __ATINIT__    = []; // functions called during startup\nvar __ATEXIT__    = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\n\nvar runtimeInitialized = false;\n\nvar runtimeKeepaliveCounter = 0;\n\nfunction keepRuntimeAlive() {\n  return noExitRuntime || runtimeKeepaliveCounter > 0;\n}\n\nfunction preRun() {\n  assert(!ENVIRONMENT_IS_PTHREAD); // PThreads reuse the runtime from the main thread.\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n  assert(!runtimeInitialized);\n  runtimeInitialized = true;\n\n  if (ENVIRONMENT_IS_PTHREAD) return;\n\n  checkStackCookie();\n\n  \nif (!Module[\"noFSInit\"] && !FS.init.initialized)\n  FS.init();\nFS.ignorePermissions = false;\n\nTTY.init();\n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction postRun() {\n  checkStackCookie();\n  if (ENVIRONMENT_IS_PTHREAD) return; // PThreads reuse the runtime from the main thread.\n\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\n\nfunction addOnExit(cb) {\n}\n\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\n\n// include: runtime_math.js\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\n\nassert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\n\n// end include: runtime_math.js\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\nvar runDependencyTracking = {};\n\nfunction getUniqueRunDependency(id) {\n  var orig = id;\n  while (1) {\n    if (!runDependencyTracking[id]) return id;\n    id = orig + Math.random();\n  }\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n  if (id) {\n    assert(!runDependencyTracking[id]);\n    runDependencyTracking[id] = 1;\n    if (runDependencyWatcher === null && typeof setInterval != 'undefined') {\n      // Check for missing dependencies every few seconds\n      runDependencyWatcher = setInterval(function() {\n        if (ABORT) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n          return;\n        }\n        var shown = false;\n        for (var dep in runDependencyTracking) {\n          if (!shown) {\n            shown = true;\n            err('still waiting on run dependencies:');\n          }\n          err('dependency: ' + dep);\n        }\n        if (shown) {\n          err('(end of list)');\n        }\n      }, 10000);\n    }\n  } else {\n    err('warning: run dependency added without ID');\n  }\n}\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n  if (id) {\n    assert(runDependencyTracking[id]);\n    delete runDependencyTracking[id];\n  } else {\n    err('warning: run dependency removed without ID');\n  }\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\n/** @param {string|number=} what */\nfunction abort(what) {\n  if (Module['onAbort']) {\n    Module['onAbort'](what);\n  }\n\n  what = 'Aborted(' + what + ')';\n  // TODO(sbc): Should we remove printing and leave it up to whoever\n  // catches the exception?\n  err(what);\n\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\n  // exception, which means we'd run destructors on it. We need the error to\n  // simply make the program stop.\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\n  // a trap or not based on a hidden field within the object. So at the moment\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\n  // allows this in the wasm spec.\n\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\n  // defintion for WebAssembly.RuntimeError claims it takes no arguments even\n  // though it can.\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\n  // See above, in the meantime, we resort to wasm code for trapping.\n  //\n  // In case abort() is called before the module is initialized, Module['asm']\n  // and its exported '__trap' function is not available, in which case we throw\n  // a RuntimeError.\n  //\n  // We trap instead of throwing RuntimeError to prevent infinite-looping in\n  // Wasm EH code (because RuntimeError is considered as a foreign exception and\n  // caught by 'catch_all'), but in case throwing RuntimeError is fine because\n  // the module has not even been instantiated, even less running.\n  if (runtimeInitialized) {\n    ___trap();\n  }\n  /** @suppress {checkTypes} */\n  var e = new WebAssembly.RuntimeError(what);\n\n  readyPromiseReject(e);\n  // Throw the error whether or not MODULARIZE is set because abort is used\n  // in code paths apart from instantiation where an exception is expected\n  // to be thrown when abort is called.\n  throw e;\n}\n\n// include: memoryprofiler.js\n// end include: memoryprofiler.js\n// include: URIUtils.js\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\n\n// Indicates whether filename is a base64 data URI.\nfunction isDataURI(filename) {\n  // Prefix of data URIs emitted by SINGLE_FILE and related options.\n  return filename.startsWith(dataURIPrefix);\n}\n\n// Indicates whether filename is delivered via file protocol (as opposed to http/https)\nfunction isFileURI(filename) {\n  return filename.startsWith('file://');\n}\n\n// end include: URIUtils.js\n/** @param {boolean=} fixedasm */\nfunction createExportWrapper(name, fixedasm) {\n  return function() {\n    var displayName = name;\n    var asm = fixedasm;\n    if (!fixedasm) {\n      asm = Module['asm'];\n    }\n    assert(runtimeInitialized, 'native function `' + displayName + '` called before runtime initialization');\n    if (!asm[name]) {\n      assert(asm[name], 'exported native function `' + displayName + '` not found');\n    }\n    return asm[name].apply(null, arguments);\n  };\n}\n\n// include: runtime_exceptions.js\n// end include: runtime_exceptions.js\nvar wasmBinaryFile;\nif (Module['locateFile']) {\n  wasmBinaryFile = 'cas.wasm';\n  if (!isDataURI(wasmBinaryFile)) {\n    wasmBinaryFile = locateFile(wasmBinaryFile);\n  }\n} else {\n  // Use bundler-friendly `new URL(..., import.meta.url)` pattern; works in browsers too.\n  wasmBinaryFile = new URL('cas.wasm', import.meta.url).href;\n}\n\nfunction getBinary(file) {\n  try {\n    if (file == wasmBinaryFile && wasmBinary) {\n      return new Uint8Array(wasmBinary);\n    }\n    if (readBinary) {\n      return readBinary(file);\n    }\n    throw \"both async and sync fetching of the wasm failed\";\n  }\n  catch (err) {\n    abort(err);\n  }\n}\n\nfunction getBinaryPromise(binaryFile) {\n  // If we don't have the binary yet, try to load it asynchronously.\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\n  // Cordova or Electron apps are typically loaded from a file:// url.\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\n  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n    if (typeof fetch == 'function'\n    ) {\n      return fetch(binaryFile, { credentials: 'same-origin' }).then(function(response) {\n        if (!response['ok']) {\n          throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\n        }\n        return response['arrayBuffer']();\n      }).catch(function () {\n          return getBinary(binaryFile);\n      });\n    }\n  }\n\n  // Otherwise, getBinary should be able to get it synchronously\n  return Promise.resolve().then(function() { return getBinary(binaryFile); });\n}\n\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\n  return getBinaryPromise(binaryFile).then(function(binary) {\n    return WebAssembly.instantiate(binary, imports);\n  }).then(function (instance) {\n    return instance;\n  }).then(receiver, function(reason) {\n    err('failed to asynchronously prepare wasm: ' + reason);\n\n    // Warn on some common problems.\n    if (isFileURI(wasmBinaryFile)) {\n      err('warning: Loading from a file URI (' + wasmBinaryFile + ') is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing');\n    }\n    abort(reason);\n  });\n}\n\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\n  if (!binary &&\n      typeof WebAssembly.instantiateStreaming == 'function' &&\n      !isDataURI(binaryFile) &&\n      typeof fetch == 'function') {\n    return fetch(binaryFile, { credentials: 'same-origin' }).then(function(response) {\n      // Suppress closure warning here since the upstream definition for\n      // instantiateStreaming only allows Promise<Repsponse> rather than\n      // an actual Response.\n      // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\n      /** @suppress {checkTypes} */\n      var result = WebAssembly.instantiateStreaming(response, imports);\n\n      return result.then(\n        callback,\n        function(reason) {\n          // We expect the most common failure cause to be a bad MIME type for the binary,\n          // in which case falling back to ArrayBuffer instantiation should work.\n          err('wasm streaming compile failed: ' + reason);\n          err('falling back to ArrayBuffer instantiation');\n          return instantiateArrayBuffer(binaryFile, imports, callback);\n        });\n    });\n  } else {\n    return instantiateArrayBuffer(binaryFile, imports, callback);\n  }\n}\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm() {\n  // prepare imports\n  var info = {\n    'env': wasmImports,\n    'wasi_snapshot_preview1': wasmImports,\n  };\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  /** @param {WebAssembly.Module=} module*/\n  function receiveInstance(instance, module) {\n    var exports = instance.exports;\n\n    Module['asm'] = exports;\n\n    registerTLSInit(Module['asm']['_emscripten_tls_init']);\n\n    wasmTable = Module['asm']['__indirect_function_table'];\n    assert(wasmTable, \"table not found in wasm exports\");\n\n    addOnInit(Module['asm']['__wasm_call_ctors']);\n\n    // We now have the Wasm module loaded up, keep a reference to the compiled module so we can post it to the workers.\n    wasmModule = module;\n\n    PThread.loadWasmModuleToAllWorkers(() => removeRunDependency('wasm-instantiate'));\n\n    return exports;\n  }\n  // wait for the pthread pool (if any)\n  addRunDependency('wasm-instantiate');\n\n  // Prefer streaming instantiation if available.\n  // Async compilation can be confusing when an error on the page overwrites Module\n  // (for example, if the order of elements is wrong, and the one defining Module is\n  // later), so we save Module and check it later.\n  var trueModule = Module;\n  function receiveInstantiationResult(result) {\n    // 'result' is a ResultObject object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    assert(Module === trueModule, 'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');\n    trueModule = null;\n    receiveInstance(result['instance'], result['module']);\n  }\n\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to\n  // run the instantiation parallel to any other async startup actions they are\n  // performing.\n  // Also pthreads and wasm workers initialize the wasm instance through this\n  // path.\n  if (Module['instantiateWasm']) {\n\n    try {\n      return Module['instantiateWasm'](info, receiveInstance);\n    } catch(e) {\n      err('Module.instantiateWasm callback failed with error: ' + e);\n        // If instantiation fails, reject the module ready promise.\n        readyPromiseReject(e);\n    }\n  }\n\n  // If instantiation fails, reject the module ready promise.\n  instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\n  return {}; // no exports yet; we'll fill them in later\n}\n\n// Globals used by JS i64 conversions (see makeSetValue)\nvar tempDouble;\nvar tempI64;\n\n// include: runtime_debug.js\nfunction legacyModuleProp(prop, newName) {\n  if (!Object.getOwnPropertyDescriptor(Module, prop)) {\n    Object.defineProperty(Module, prop, {\n      configurable: true,\n      get: function() {\n        abort('Module.' + prop + ' has been replaced with plain ' + newName + ' (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)');\n      }\n    });\n  }\n}\n\nfunction ignoredModuleProp(prop) {\n  if (Object.getOwnPropertyDescriptor(Module, prop)) {\n    abort('`Module.' + prop + '` was supplied but `' + prop + '` not included in INCOMING_MODULE_JS_API');\n  }\n}\n\n// forcing the filesystem exports a few things by default\nfunction isExportedByForceFilesystem(name) {\n  return name === 'FS_createPath' ||\n         name === 'FS_createDataFile' ||\n         name === 'FS_createPreloadedFile' ||\n         name === 'FS_unlink' ||\n         name === 'addRunDependency' ||\n         // The old FS has some functionality that WasmFS lacks.\n         name === 'FS_createLazyFile' ||\n         name === 'FS_createDevice' ||\n         name === 'removeRunDependency';\n}\n\nfunction missingGlobal(sym, msg) {\n  if (typeof globalThis !== 'undefined') {\n    Object.defineProperty(globalThis, sym, {\n      configurable: true,\n      get: function() {\n        warnOnce('`' + sym + '` is not longer defined by emscripten. ' + msg);\n        return undefined;\n      }\n    });\n  }\n}\n\nmissingGlobal('buffer', 'Please use HEAP8.buffer or wasmMemory.buffer');\n\nfunction missingLibrarySymbol(sym) {\n  if (typeof globalThis !== 'undefined' && !Object.getOwnPropertyDescriptor(globalThis, sym)) {\n    Object.defineProperty(globalThis, sym, {\n      configurable: true,\n      get: function() {\n        // Can't `abort()` here because it would break code that does runtime\n        // checks.  e.g. `if (typeof SDL === 'undefined')`.\n        var msg = '`' + sym + '` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line';\n        // DEFAULT_LIBRARY_FUNCS_TO_INCLUDE requires the name as it appears in\n        // library.js, which means $name for a JS name with no prefix, or name\n        // for a JS name like _name.\n        var librarySymbol = sym;\n        if (!librarySymbol.startsWith('_')) {\n          librarySymbol = '$' + sym;\n        }\n        msg += \" (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE=\" + librarySymbol + \")\";\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        warnOnce(msg);\n        return undefined;\n      }\n    });\n  }\n  // Any symbol that is not included from the JS libary is also (by definition)\n  // not exported on the Module object.\n  unexportedRuntimeSymbol(sym);\n}\n\nfunction unexportedRuntimeSymbol(sym) {\n  if (!Object.getOwnPropertyDescriptor(Module, sym)) {\n    Object.defineProperty(Module, sym, {\n      configurable: true,\n      get: function() {\n        var msg = \"'\" + sym + \"' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\";\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        abort(msg);\n      }\n    });\n  }\n}\n\n// Used by XXXXX_DEBUG settings to output debug messages.\nfunction dbg(text) {\n  // TODO(sbc): Make this configurable somehow.  Its not always convenient for\n  // logging to show up as errors.\n  console.error.apply(console, arguments);\n}\n\n// end include: runtime_debug.js\n// === Body ===\n\n\n// end include: preamble.js\n\n  /** @constructor */\n  function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = 'Program terminated with exit(' + status + ')';\n      this.status = status;\n    }\n\n  \n  \n  function terminateWorker(worker) {\n      worker.terminate();\n      // terminate() can be asynchronous, so in theory the worker can continue\n      // to run for some amount of time after termination.  However from our POV\n      // the worker now dead and we don't want to hear from it again, so we stub\n      // out its message handler here.  This avoids having to check in each of\n      // the onmessage handlers if the message was coming from valid worker.\n      worker.onmessage = (e) => {\n        var cmd = e['data']['cmd'];\n        err('received \"' + cmd + '\" command from terminated worker: ' + worker.workerID);\n      };\n    }\n  \n  function killThread(pthread_ptr) {\n      assert(!ENVIRONMENT_IS_PTHREAD, 'Internal Error! killThread() can only ever be called from main application thread!');\n      assert(pthread_ptr, 'Internal Error! Null pthread_ptr in killThread!');\n      var worker = PThread.pthreads[pthread_ptr];\n      delete PThread.pthreads[pthread_ptr];\n      terminateWorker(worker);\n      __emscripten_thread_free_data(pthread_ptr);\n      // The worker was completely nuked (not just the pthread execution it was hosting), so remove it from running workers\n      // but don't put it back to the pool.\n      PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker), 1); // Not a running Worker anymore.\n      worker.pthread_ptr = 0;\n    }\n  \n  function cancelThread(pthread_ptr) {\n      assert(!ENVIRONMENT_IS_PTHREAD, 'Internal Error! cancelThread() can only ever be called from main application thread!');\n      assert(pthread_ptr, 'Internal Error! Null pthread_ptr in cancelThread!');\n      var worker = PThread.pthreads[pthread_ptr];\n      worker.postMessage({ 'cmd': 'cancel' });\n    }\n  \n  function cleanupThread(pthread_ptr) {\n      assert(!ENVIRONMENT_IS_PTHREAD, 'Internal Error! cleanupThread() can only ever be called from main application thread!');\n      assert(pthread_ptr, 'Internal Error! Null pthread_ptr in cleanupThread!');\n      var worker = PThread.pthreads[pthread_ptr];\n      assert(worker);\n      PThread.returnWorkerToPool(worker);\n    }\n  \n  function zeroMemory(address, size) {\n      HEAPU8.fill(0, address, address + size);\n      return address;\n    }\n  \n  function spawnThread(threadParams) {\n      assert(!ENVIRONMENT_IS_PTHREAD, 'Internal Error! spawnThread() can only ever be called from main application thread!');\n      assert(threadParams.pthread_ptr, 'Internal error, no pthread ptr!');\n  \n      var worker = PThread.getNewWorker();\n      if (!worker) {\n        // No available workers in the PThread pool.\n        return 6;\n      }\n      assert(!worker.pthread_ptr, 'Internal error!');\n  \n      PThread.runningWorkers.push(worker);\n  \n      // Add to pthreads map\n      PThread.pthreads[threadParams.pthread_ptr] = worker;\n  \n      worker.pthread_ptr = threadParams.pthread_ptr;\n      var msg = {\n          'cmd': 'run',\n          'start_routine': threadParams.startRoutine,\n          'arg': threadParams.arg,\n          'pthread_ptr': threadParams.pthread_ptr,\n      };\n      // Ask the worker to start executing its pthread entry point function.\n      worker.postMessage(msg, threadParams.transferList);\n      return 0;\n    }\n  \n  \n  \n  var PATH = {isAbs:(path) => path.charAt(0) === '/',splitPath:(filename) => {\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },normalizeArray:(parts, allowAboveRoot) => {\n        // if the path tries to go above the root, `up` ends up > 0\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n        // if the path is allowed to go above the root, restore leading ..s\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },normalize:(path) => {\n        var isAbsolute = PATH.isAbs(path),\n            trailingSlash = path.substr(-1) === '/';\n        // Normalize the path\n        path = PATH.normalizeArray(path.split('/').filter((p) => !!p), !isAbsolute).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },dirname:(path) => {\n        var result = PATH.splitPath(path),\n            root = result[0],\n            dir = result[1];\n        if (!root && !dir) {\n          // No dirname whatsoever\n          return '.';\n        }\n        if (dir) {\n          // It has a dirname, strip trailing slash\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },basename:(path) => {\n        // EMSCRIPTEN return '/'' for '/', not an empty string\n        if (path === '/') return '/';\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, \"\");\n        var lastSlash = path.lastIndexOf('/');\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash+1);\n      },join:function() {\n        var paths = Array.prototype.slice.call(arguments);\n        return PATH.normalize(paths.join('/'));\n      },join2:(l, r) => {\n        return PATH.normalize(l + '/' + r);\n      }};\n  \n  function initRandomFill() {\n      if (typeof crypto == 'object' && typeof crypto['getRandomValues'] == 'function') {\n        // for modern web browsers\n        // like with most Web APIs, we can't use Web Crypto API directly on shared memory,\n        // so we need to create an intermediate buffer and copy it to the destination\n        return (view) => (\n          view.set(crypto.getRandomValues(new Uint8Array(view.byteLength))),\n          // Return the original view to match modern native implementations.\n          view\n        );\n      } else\n      // we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096\n      abort(\"no cryptographic support found for randomDevice. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: function(array) { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };\");\n    }\n  function randomFill(view) {\n      // Lazily init on the first invocation.\n      return (randomFill = initRandomFill())(view);\n    }\n  \n  \n  \n  var PATH_FS = {resolve:function() {\n        var resolvedPath = '',\n          resolvedAbsolute = false;\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = (i >= 0) ? arguments[i] : FS.cwd();\n          // Skip empty and invalid entries\n          if (typeof path != 'string') {\n            throw new TypeError('Arguments to path.resolve must be strings');\n          } else if (!path) {\n            return ''; // an invalid portion invalidates the whole thing\n          }\n          resolvedPath = path + '/' + resolvedPath;\n          resolvedAbsolute = PATH.isAbs(path);\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter((p) => !!p), !resolvedAbsolute).join('/');\n        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n      },relative:(from, to) => {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== '') break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== '') break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split('/'));\n        var toParts = trim(to.split('/'));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push('..');\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join('/');\n      }};\n  \n  \n  function lengthBytesUTF8(str) {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var c = str.charCodeAt(i); // possibly a lead surrogate\n        if (c <= 0x7F) {\n          len++;\n        } else if (c <= 0x7FF) {\n          len += 2;\n        } else if (c >= 0xD800 && c <= 0xDFFF) {\n          len += 4; ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    }\n  \n  function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n      assert(typeof str === 'string');\n      // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\n      // undefined and false each don't write out any bytes.\n      if (!(maxBytesToWrite > 0))\n        return 0;\n  \n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\n        // and https://www.ietf.org/rfc/rfc2279.txt\n        // and https://tools.ietf.org/html/rfc3629\n        var u = str.charCodeAt(i); // possibly a lead surrogate\n        if (u >= 0xD800 && u <= 0xDFFF) {\n          var u1 = str.charCodeAt(++i);\n          u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\n        }\n        if (u <= 0x7F) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7FF) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xC0 | (u >> 6);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else if (u <= 0xFFFF) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xE0 | (u >> 12);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          if (u > 0x10FFFF) warnOnce('Invalid Unicode code point ' + ptrToString(u) + ' encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).');\n          heap[outIdx++] = 0xF0 | (u >> 18);\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        }\n      }\n      // Null-terminate the pointer to the buffer.\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    }\n  /** @type {function(string, boolean=, number=)} */\n  function intArrayFromString(stringy, dontAddNull, length) {\n    var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\n    var u8array = new Array(len);\n    var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n    if (dontAddNull) u8array.length = numBytesWritten;\n    return u8array;\n  }\n  var TTY = {ttys:[],init:function () {\n        // https://github.com/emscripten-core/emscripten/pull/1555\n        // if (ENVIRONMENT_IS_NODE) {\n        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY\n        //   // device, it always assumes it's a TTY device. because of this, we're forcing\n        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible\n        //   // with text files until FS.init can be refactored.\n        //   process.stdin.setEncoding('utf8');\n        // }\n      },shutdown:function() {\n        // https://github.com/emscripten-core/emscripten/pull/1555\n        // if (ENVIRONMENT_IS_NODE) {\n        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?\n        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation\n        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?\n        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle\n        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call\n        //   process.stdin.pause();\n        // }\n      },register:function(dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },stream_ops:{open:function(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },close:function(stream) {\n          // flush any pending line data\n          stream.tty.ops.fsync(stream.tty);\n        },fsync:function(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },read:function(stream, buffer, offset, length, pos /* ignored */) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset+i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },write:function(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        }},default_tty_ops:{get_char:function(tty) {\n          if (!tty.input.length) {\n            var result = null;\n            if (typeof window != 'undefined' &&\n              typeof window.prompt == 'function') {\n              // Browser.\n              result = window.prompt('Input: ');  // returns null on cancel\n              if (result !== null) {\n                result += '\\n';\n              }\n            } else if (typeof readline == 'function') {\n              // Command line.\n              result = readline();\n              if (result !== null) {\n                result += '\\n';\n              }\n            }\n            if (!result) {\n              return null;\n            }\n            tty.input = intArrayFromString(result, true);\n          }\n          return tty.input.shift();\n        },put_char:function(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.\n          }\n        },fsync:function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        }},default_tty1_ops:{put_char:function(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },fsync:function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        }}};\n  \n  \n  \n  function alignMemory(size, alignment) {\n      assert(alignment, \"alignment argument is required\");\n      return Math.ceil(size / alignment) * alignment;\n    }\n  function mmapAlloc(size) {\n      abort('internal error: mmapAlloc called but `emscripten_builtin_memalign` native symbol not exported');\n    }\n  var MEMFS = {ops_table:null,mount:function(mount) {\n        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);\n      },createNode:function(parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          // no supported\n          throw new FS.ErrnoError(63);\n        }\n        if (!MEMFS.ops_table) {\n          MEMFS.ops_table = {\n            dir: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                lookup: MEMFS.node_ops.lookup,\n                mknod: MEMFS.node_ops.mknod,\n                rename: MEMFS.node_ops.rename,\n                unlink: MEMFS.node_ops.unlink,\n                rmdir: MEMFS.node_ops.rmdir,\n                readdir: MEMFS.node_ops.readdir,\n                symlink: MEMFS.node_ops.symlink\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek\n              }\n            },\n            file: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n                read: MEMFS.stream_ops.read,\n                write: MEMFS.stream_ops.write,\n                allocate: MEMFS.stream_ops.allocate,\n                mmap: MEMFS.stream_ops.mmap,\n                msync: MEMFS.stream_ops.msync\n              }\n            },\n            link: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                readlink: MEMFS.node_ops.readlink\n              },\n              stream: {}\n            },\n            chrdev: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr\n              },\n              stream: FS.chrdev_stream_ops\n            }\n          };\n        }\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.\n          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred\n          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size\n          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.\n          node.contents = null; \n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n        // add the new node to the parent\n        if (parent) {\n          parent.contents[name] = node;\n          parent.timestamp = node.timestamp;\n        }\n        return node;\n      },getFileDataAsTypedArray:function(node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.\n        return new Uint8Array(node.contents);\n      },expandFileStorage:function(node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.\n        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\n        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\n        // avoid overshooting the allocation cap by a very large margin.\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>> 0);\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity); // Allocate new storage.\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.\n      },resizeFileStorage:function(node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null; // Fully decommit when requesting a resize to zero.\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize); // Allocate new storage.\n          if (oldContents) {\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.\n          }\n          node.usedBytes = newSize;\n        }\n      },node_ops:{getattr:function(node) {\n          var attr = {};\n          // device numbers reuse inode numbers.\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),\n          //       but this is not required by the standard.\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },setattr:function(node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },lookup:function(parent, name) {\n          throw FS.genericErrors[44];\n        },mknod:function(parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },rename:function(old_node, new_dir, new_name) {\n          // if we're overwriting a directory at new_name, make sure it's empty.\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {\n            }\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n          // do the internal rewiring\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now()\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n          old_node.parent = new_dir;\n        },unlink:function(parent, name) {\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },rmdir:function(parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },readdir:function(node) {\n          var entries = ['.', '..'];\n          for (var key in node.contents) {\n            if (!node.contents.hasOwnProperty(key)) {\n              continue;\n            }\n            entries.push(key);\n          }\n          return entries;\n        },symlink:function(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },readlink:function(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        }},stream_ops:{read:function(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          assert(size >= 0);\n          if (size > 8 && contents.subarray) { // non-trivial, and typed array\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },write:function(stream, buffer, offset, length, position, canOwn) {\n          // The data buffer should be a typed array view\n          assert(!(buffer instanceof ArrayBuffer));\n  \n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n  \n          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?\n            if (canOwn) {\n              assert(position === 0, 'canOwn must imply no weird position inside the file');\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?\n              node.contents.set(buffer.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n  \n          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.\n          MEMFS.expandFileStorage(node, position+length);\n          if (node.contents.subarray && buffer.subarray) {\n            // Use typed array write which is available.\n            node.contents.set(buffer.subarray(offset, offset + length), position);\n          } else {\n            for (var i = 0; i < length; i++) {\n             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },llseek:function(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },allocate:function(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        },mmap:function(stream, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          // Only make a new copy when MAP_PRIVATE is specified.\n          if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\n            // We can't emulate MAP_SHARED when the file is not backed by the\n            // buffer we're mapping to (e.g. the HEAP buffer).\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            // Try to avoid unnecessary slices.\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            HEAP8.set(contents, ptr);\n          }\n          return { ptr: ptr, allocated: allocated };\n        },msync:function(stream, buffer, offset, length, mmapFlags) {\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n          // should we check if bytesWritten and length are the same?\n          return 0;\n        }}};\n  \n  /** @param {boolean=} noRunDep */\n  function asyncLoad(url, onload, onerror, noRunDep) {\n      var dep = !noRunDep ? getUniqueRunDependency('al ' + url) : '';\n      readAsync(url, (arrayBuffer) => {\n        assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\n        onload(new Uint8Array(arrayBuffer));\n        if (dep) removeRunDependency(dep);\n      }, (event) => {\n        if (onerror) {\n          onerror();\n        } else {\n          throw 'Loading data file \"' + url + '\" failed.';\n        }\n      });\n      if (dep) addRunDependency(dep);\n    }\n  \n  \n  \n  \n  var ERRNO_MESSAGES = {0:\"Success\",1:\"Arg list too long\",2:\"Permission denied\",3:\"Address already in use\",4:\"Address not available\",5:\"Address family not supported by protocol family\",6:\"No more processes\",7:\"Socket already connected\",8:\"Bad file number\",9:\"Trying to read unreadable message\",10:\"Mount device busy\",11:\"Operation canceled\",12:\"No children\",13:\"Connection aborted\",14:\"Connection refused\",15:\"Connection reset by peer\",16:\"File locking deadlock error\",17:\"Destination address required\",18:\"Math arg out of domain of func\",19:\"Quota exceeded\",20:\"File exists\",21:\"Bad address\",22:\"File too large\",23:\"Host is unreachable\",24:\"Identifier removed\",25:\"Illegal byte sequence\",26:\"Connection already in progress\",27:\"Interrupted system call\",28:\"Invalid argument\",29:\"I/O error\",30:\"Socket is already connected\",31:\"Is a directory\",32:\"Too many symbolic links\",33:\"Too many open files\",34:\"Too many links\",35:\"Message too long\",36:\"Multihop attempted\",37:\"File or path name too long\",38:\"Network interface is not configured\",39:\"Connection reset by network\",40:\"Network is unreachable\",41:\"Too many open files in system\",42:\"No buffer space available\",43:\"No such device\",44:\"No such file or directory\",45:\"Exec format error\",46:\"No record locks available\",47:\"The link has been severed\",48:\"Not enough core\",49:\"No message of desired type\",50:\"Protocol not available\",51:\"No space left on device\",52:\"Function not implemented\",53:\"Socket is not connected\",54:\"Not a directory\",55:\"Directory not empty\",56:\"State not recoverable\",57:\"Socket operation on non-socket\",59:\"Not a typewriter\",60:\"No such device or address\",61:\"Value too large for defined data type\",62:\"Previous owner died\",63:\"Not super-user\",64:\"Broken pipe\",65:\"Protocol error\",66:\"Unknown protocol\",67:\"Protocol wrong type for socket\",68:\"Math result not representable\",69:\"Read only file system\",70:\"Illegal seek\",71:\"No such process\",72:\"Stale file handle\",73:\"Connection timed out\",74:\"Text file busy\",75:\"Cross-device link\",100:\"Device not a stream\",101:\"Bad font file fmt\",102:\"Invalid slot\",103:\"Invalid request code\",104:\"No anode\",105:\"Block device required\",106:\"Channel number out of range\",107:\"Level 3 halted\",108:\"Level 3 reset\",109:\"Link number out of range\",110:\"Protocol driver not attached\",111:\"No CSI structure available\",112:\"Level 2 halted\",113:\"Invalid exchange\",114:\"Invalid request descriptor\",115:\"Exchange full\",116:\"No data (for no delay io)\",117:\"Timer expired\",118:\"Out of streams resources\",119:\"Machine is not on the network\",120:\"Package not installed\",121:\"The object is remote\",122:\"Advertise error\",123:\"Srmount error\",124:\"Communication error on send\",125:\"Cross mount point (not really error)\",126:\"Given log. name not unique\",127:\"f.d. invalid for this operation\",128:\"Remote address changed\",129:\"Can   access a needed shared lib\",130:\"Accessing a corrupted shared lib\",131:\".lib section in a.out corrupted\",132:\"Attempting to link in too many libs\",133:\"Attempting to exec a shared library\",135:\"Streams pipe error\",136:\"Too many users\",137:\"Socket type not supported\",138:\"Not supported\",139:\"Protocol family not supported\",140:\"Can't send after socket shutdown\",141:\"Too many references\",142:\"Host is down\",148:\"No medium (in tape drive)\",156:\"Level 2 not synchronized\"};\n  \n  var ERRNO_CODES = {};\n  \n  function withStackSave(f) {\n      var stack = stackSave();\n      var ret = f();\n      stackRestore(stack);\n      return ret;\n    }\n  \n  \n  \n  \n  function stringToUTF8(str, outPtr, maxBytesToWrite) {\n      assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n      return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\n    }\n  function stringToUTF8OnStack(str) {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = stackAlloc(size);\n      stringToUTF8(str, ret, size);\n      return ret;\n    }\n  \n  var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n  \n    /**\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\n     * array that contains uint8 values, returns a copy of that string as a\n     * Javascript String object.\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\n     * @param {number} idx\n     * @param {number=} maxBytesToRead\n     * @return {string}\n     */\n  function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\n      // null terminator by itself.  Also, use the length info to avoid running tiny\n      // strings through TextDecoder, since .subarray() allocates garbage.\n      // (As a tiny code save trick, compare endPtr against endIdx using a negation,\n      // so that undefined means Infinity)\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n  \n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.buffer instanceof SharedArrayBuffer ? heapOrArray.slice(idx, endPtr) : heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n      // If building with TextDecoder, we have already computed the string length\n      // above, so test loop end condition against that\n      while (idx < endPtr) {\n        // For UTF8 byte structure, see:\n        // http://en.wikipedia.org/wiki/UTF-8#Description\n        // https://www.ietf.org/rfc/rfc2279.txt\n        // https://tools.ietf.org/html/rfc3629\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xF0) == 0xE0) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte ' + ptrToString(u0) + ' encountered when deserializing a UTF-8 string in wasm memory to a JS string!');\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\n        }\n  \n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n        }\n      }\n      return str;\n    }\n  \n  \n    /**\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\n     *\n     * @param {number} ptr\n     * @param {number=} maxBytesToRead - An optional length that specifies the\n     *   maximum number of bytes to read. You can omit this parameter to scan the\n     *   string until the first ","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = require('./helpers/bundle-url').getBundleURL('iDbWQ') + require('./helpers/bundle-manifest').resolve(\"46jC9\");","\"use strict\";\n\nvar bundleURL = {};\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n  return value;\n}\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n  return '/';\n}\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\n// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n  return matches[0];\n}\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar mapping = {};\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping[id];\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return resolved;\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","let workerURL = require('./helpers/get-worker-url');\nlet bundleURL = require('./helpers/bundle-url');\nlet url = bundleURL.getBundleURL('iDbWQ') + require('./helpers/bundle-manifest').resolve(\"fmjgk\");module.exports = workerURL(url, bundleURL.getOrigin(url), false);","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","mainExports","define","amd","parcelHelpers","defineInteropFlag","_scriptDir","process","CASModule","prop","b","sym","readyPromiseResolve","readyPromiseReject","read_","readAsync","readBinary","wasmBinary","wasmMemory","wasmModule","EXITSTATUS","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","wasmTable","wasmBinaryFile","tempDouble","tempI64","calledRun","Promise","reject","forEach","getOwnPropertyDescriptor","abort","set","moduleOverrides","assign","thisProgram","quit_","status","toThrow","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","versions","node","ENVIRONMENT_IS_SHELL","ENVIRONMENT_IS_PTHREAD","scriptDirectory","locateFile","path","read","f","data","readbuffer","Uint8Array","assert","onload","onerror","setTimeout","clearTimeout","scriptArgs","arguments","quit","ExitStatus","toLog","stack","print","console","log","warn","error","printErr","location","href","document","currentScript","src","indexOf","substr","replace","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","out","legacyModuleProp","noExitRuntime","WebAssembly","ABORT","condition","text","Int32Array","Float64Array","undefined","prototype","subarray","INITIAL_MEMORY","Memory","buffer","SharedArrayBuffer","writeStackCookie","max","_emscripten_stack_get_end","checkStackCookie","cookie1","cookie2","ptrToString","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","byteLength","h16","h8","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runtimeInitialized","runtimeKeepaliveCounter","keepRuntimeAlive","initRuntime","FS","init","initialized","ignorePermissions","TTY","callRuntimeCallbacks","Math","imul","fround","clz32","trunc","runDependencies","runDependencyWatcher","dependenciesFulfilled","runDependencyTracking","getUniqueRunDependency","orig","random","addRunDependency","setInterval","clearInterval","shown","dep","removeRunDependency","callback","what","___trap","e","RuntimeError","isDataURI","filename","startsWith","createExportWrapper","fixedasm","asm","apply","getBinary","file","instantiateArrayBuffer","binaryFile","imports","receiver","getBinaryPromise","fetch","credentials","then","catch","binary","instantiate","instance","reason","newName","configurable","isExportedByForceFilesystem","unexportedRuntimeSymbol","msg","dbg","message","terminateWorker","worker","terminate","onmessage","workerID","cleanupThread","pthread_ptr","PThread","pthreads","returnWorkerToPool","spawnThread","threadParams","getNewWorker","runningWorkers","push","startRoutine","arg","postMessage","transferList","URL","warnOnce","PATH","isAbs","charAt","splitPath","splitPathRe","exec","slice","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","normalize","isAbsolute","trailingSlash","split","filter","p","join","dirname","result","root","dir","basename","lastSlash","paths","Array","join2","l","r","randomFill","view","initRandomFill","crypto","getRandomValues","PATH_FS","resolvedPath","resolvedAbsolute","cwd","TypeError","relative","from","to","trim","arr","start","end","fromParts","toParts","min","samePartsLength","outputParts","concat","lengthBytesUTF8","str","len","c","charCodeAt","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","endIdx","u","u1","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","ttys","shutdown","dev","ops","input","output","registerDevice","stream_ops","stream","tty","rdev","ErrnoError","seekable","close","fsync","offset","pos","get_char","bytesRead","timestamp","Date","now","write","put_char","default_tty_ops","prompt","readline","shift","val","UTF8ArrayToString","default_tty1_ops","mmapAlloc","size","MEMFS","ops_table","mount","createNode","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","oldContents","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","ceil","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","key","hasOwnProperty","newname","oldpath","position","canOwn","ArrayBuffer","whence","prot","flags","ptr","allocated","byteOffset","mmapFlags","ERRNO_MESSAGES","ERRNO_CODES","withStackSave","stackSave","ret","stackRestore","stringToUTF8","outPtr","UTF8Decoder","TextDecoder","heapOrArray","idx","maxBytesToRead","endPtr","decode","u0","String","fromCharCode","u2","ch","UTF8ToString","demangle","func","recursionGuard","s","buf","stackAlloc","___cxa_demangle","_free","mounts","devices","streams","nextInode","nameTable","currentPath","filesystems","syncFSRequests","lookupPath","opts","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","count","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagModes","modeStringToFlags","flagsToPermissionString","flag","perms","nodePermissions","includes","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","fd","getStream","createStream","FSStream","shared","defineProperties","object","isRead","isWrite","isAppend","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","m","pop","syncfs","populate","completed","doCallback","done","errored","type","pseudo","mountRoot","unmount","keys","next","create","mkdir","mkdirTree","dirs","d","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","readFiles","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","cmd","readFile","encoding","writeFile","actualNumBytes","isView","chdir","createDefaultDirectories","createDefaultDevices","randomBuffer","randomLeft","randomByte","createDevice","createSpecialDirectories","proc_self","createStandardStreams","stdin","stdout","stderr","ensureErrnoError","setErrno","value","writable","y","constructor","staticInit","_fflush","getMode","canRead","canWrite","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","reverse","part","createFile","properties","createDataFile","forceLoadFile","obj","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","getter","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","doXHR","setRequestHeader","overrideMimeType","lazyArray","_length","_chunkSize","writeChunks","fn","createPreloadedFile","dontCreateFile","preFinish","fullname","processData","byteArray","finish","Browser","handledByPreloadPlugin","arrayBuffer","event","absolutePath","createFolder","createLink","joinPath","standardizePath","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","dirstream","getStreamFromFD","doStat","abs","floor","getTime","doMsync","addr","varargs","getStr","_proc_exit","proxyToMainThread","terminateAllThreads","_exit","implicit","checkUnflushedContent","oldOut","oldErr","has","info","exitOnMainThread","toString","padStart","handleException","_emscripten_stack_get_current","unusedWorkers","tlsInitFunctions","nextWorkerID","debugInit","origDbg","t","pthreadLogPrefix","_pthread_self","initWorker","initMainThread","pthreadPoolSize","navigator","hardwareConcurrency","allocateUnusedWorker","setExitStatus","terminateAllThreads__deps","__emscripten_thread_free_data","receiveObjectTransfer","threadInitTLS","loadWasmModuleToWorker","onFinishedLoading","currentProxiedOperationCallerThread","targetWorker","targetThread","checkMailbox","loaded","alert","target","lineno","handlers","handler","loadWasmModuleToAllWorkers","onMaybeReady","pthreadPoolReady","all","map","pthreadMainJs","Worker","callbacks","getCppExceptionTag","returnCode","getExceptionMessage","ex","___thrown_object_from_unwind_exception","getArg","type_addr_addr","message_addr_addr","___get_exception_message","type_addr","message_addr","stackTop","stackMax","_emscripten_stack_set_limits","wasmTableMirror","getWasmTableEntry","funcPtr","pthreadCreateProxied","___pthread_create_js","getShiftFromSize","__emscripten_thread_exit","embind_charCodes","readLatin1String","awaitingDependencies","registeredTypes","typeDependencies","makeLegalFunctionName","createNamedFunction","body","extendError","baseErrorType","errorName","errorClass","BindingError","throwBindingError","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","rawType","registeredInstance","options","ignoreDuplicateRegistrations","cb","throwInstanceAlreadyDeleted","getInstanceTypeName","handle","$$","ptrType","registeredClass","finalizationRegistry","detachFinalizer","releaseClassHandle","smartPtr","smartPtrType","rawDestructor","registeredPointers","deletionQueue","flushPendingDeletes","deleteScheduled","delayFunction","registeredInstances","makeClassHandle","record","attachFinalizer","RegisteredPointer_fromWireType","toType","rawPointer","getPointee","destructor","getBasestPointer","class_","baseClass","upcast","rv","makeDefaultHandle","isSmartPointer","instancePrototype","pointeeType","registeredPointerRecord","getActualType","isConst","constPointerType","pointerType","dp","downcastPointer","ptrClass","desiredClass","downcast","FinalizationRegistry","leakWarning","cls","captureStackTrace","unregister","ClassHandle","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","argCount","exposePublicSymbol","numArguments","RegisteredClass","pureVirtualFunctions","upcastPointer","constNoSmartPtrRawPointerToWireType","destructors","isReference","embindRepr","handleClass","genericPointerToWireType","rawConstructor","sharingPolicy","clonedHandle","rawShare","Emval","toHandle","nonConstNoSmartPtrRawPointerToWireType","simpleReadValueFromPointer","pointer","RegisteredPointer","rawGetPointee","destructorFunction","embind__requireFunction","signature","rawFunction","fp","makeDynCaller","sig","argCache","dynCall","args","substring","UnboundTypeError","getTypeName","___getTypeName","throwUnboundTypeError","types","unboundTypes","seen","visit","heap32VectorToArray","firstElement","array","runDestructors","del","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isAsync","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","newFunc","argumentList","Function","dummy","emval_handles","freelist","free","__emval_decref","reserved","refcount","toValue","requireRegisteredType","impl","v","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","trailSurrogate","lengthBytesUTF32","__emscripten_thread_mailbox_await","Atomics","waitAsync","wait","async","waitingAsync","store","callUserCallback","maybeExit","__emscripten_check_mailbox","index","sync","numCallArgs","outerArgs","serializedNumCallArgs","__emscripten_run_in_main_runtime_thread_js","emscripten_receive_on_main_thread_js_callArgs","ENV","getEnvStrings","strings","env","languages","_environ_get","__environ","environ_buf","bufSize","string","stringToAscii","_environ_sizes_get","penviron_count","penviron_buf_size","_fd_close","_fd_read","iov","iovcnt","pnum","num","doReadv","curr","_fd_seek","offset_low","offset_high","newOffset","lo","hi","NaN","isNaN","_fd_write","doWritev","isLeapYear","year","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR","embind_init_charCodes","codes","other","leftClass","left","rightClass","right","preservePointerOnDelete","o","clone","getPrototypeOf","k","proxiedFunctionTable","wasmImports","line","tb","__emscripten_thread_init","thread","Exception","traceStack","primitiveType","minRange","maxRange","trueValue","falseValue","wt","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","rawInvoker","context","isPureVirtual","unboundTypesHandler","Symbol","method","className","memberFunction","isSigned","ctor","values","enumReadValueFromPointer","signed","rawEnumType","enumValue","enumType","Enum","Value","floatReadValueFromPointer","fromWireType","bitshift","isUnsignedType","checkAssertions","toTypeName","integerReadValueFromPointer","dataTypeIndex","TA","typeMapping","decodeMemoryView","rawPointeeType","getPointeeSignature","constructorSignature","shareSignature","stdStringIsUTF8","payload","decodeStartPtr","currentBytePtr","maxRead","stringSegment","a","valueIsOfTypeString","Uint8ClampedArray","_malloc","charCode","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","maxReadBytes","isVoid","targetThreadId","currThreadId","mainThreadId","width","height","argv","emval_lookupTypes","performance","timeOrigin","requestedSize","maxsize","format","tm","loc","_strftime","tm_zone","date","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","compare","sgn","getFullYear","getMonth","getDate","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","addDays","days","newDate","leap","currentMonth","daysInCurrentMonth","setDate","setMonth","setFullYear","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","twelveHour","arraySum","sum","jan1","dec31","off","ahead","bytes","createWasm","receiveInstance","tlsInitFunc","trueModule","instantiateAsync","instantiateStreaming","_emscripten_stack_init","run","startWorker","preRun","addOnPreRun","doRun","postRun","addOnPostRun","missingLibrarySymbols","librarySymbol","unexportedSymbols","runCaller","ready","default","cachedSetTimeout","cachedClearTimeout","currentQueue","defaultSetTimout","defaultClearTimeout","runTimeout","fun","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","runClearTimeout","marker","Item","noop","nextTick","title","browser","version","on","addListener","once","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","umask","getBundleURL","bundleURL","getBaseURL","matches","match","getOrigin","mapping","pairs","resolved","workerURL","workerUrl","origin","isESM","source","JSON","stringify","createObjectURL","Blob","interopDefault","__esModule","exportAll","dest","enumerable","export","destName"],"version":3,"file":"cas.bd9ca99c.js.map"}